## -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
##  libdap4-3.20.11-32
##  hyrax-1.16.8-25
##

2022-09-01  ndp-opendap  <ndp@opendap.org>
	
	Refining commit message format
	
	Reformatted automated commit message forBES build trigger.
	
2022-08-31  James Gallagher  <jgallagher@opendap.org>
	
	Undo the change to Str::print_val() (#200)
	Undo the change to Str::print_val()
	
	Added test-deploy to libdap4 (#202)
	
2022-08-30  James Gallagher  <jgallagher@opendap.org>
	
	Fixed how Str variables are printed. (#199)
	Fixed how Str variables are printed.
	String variables were printed using the Attribute escaping 
	code. This lead to odd
	behavior when that code was updated to correct years-long 
	issues that we had been
	papering over. I added new code to Str.cc to escape the Str and 
	Url class' values.
	Note that this is really only used by things like getdap & 
	getdap4 and in test code.
	
2022-08-25  kyang2014  <kyang2014@users.noreply.github.com>
	
	Merge pull request #198 from OPENDAP/hyrax-708-esc-das
	Hyrax 708 esc das
	
2022-08-25  myang6  <myang6@hdfgroup.org>
	
	reduce several sonar cloud smells
	
	HYRAX-708, 1) Unescape the special characters when parsing DAS 
	from a file. 2) Update tests. 3) Make DmrRoundTrip and DmrToDap2 tests 
	temporarily no-op. Will re-visit them later.
	
2022-08-23  myang6  <myang6@hdfgroup.org>
	
	HYRAX-708, update the das baseline files to reflect the 
	escaping of the special characters for string attributes.
	
2022-08-22  James Gallagher  <jgallagher@opendap.org>
	
	Addedd comment about D4Group dims()
	[skip ci]
	
2022-08-22  myang6  <myang6@hdfgroup.org>
	
	Merge branch 'master' into hyrax-708-esc-das
	
	HYRAX-708, update the escaping functions for DAP4 XML, DAP2 XML 
	AND DAS. Temporarily turn off two DAS tests that contain the special 
	characters.
	
2022-08-17  ndp-opendap  <ndp@opendap.org>
	
	Updating trtavis-ci-opendap github credentials
	
2022-08-12  myang6  <myang6@hdfgroup.org>
	
	Merge branch 'master' into hyrax-708-esc-das
	
2022-08-08  James Gallagher  <jgallagher@opendap.org>
	
	Modify D4Group::find_var() so it can find D4Groups (#194)
	Modify D4Group::find_var() so it can find D4Groups
	When a path in a CE specifies a Group, we should be returning 
	all the
	variables in that Group. Right now libdap just throws an 
	exception. Once
	find_var() returns the BaseType* to the Group, we should be set 
	to mark
	all of the Group's variables as part of the projection.
	Added print_val and print_decl methods to D4Group.
	This will make it easy(ier) to add tests for the new 'all vars
	in a group' feature/fix.
	Added tests for the 'Group projection' feature/fix
	Now projection works for Groups and nested groups both and 
	without
	member variables. That is, for normal groups (ones with child
	variables) naming the group in a CE results in all the 
	variables in
	that group and its child groups being included in the response. 
	For
	Groups that only contain attributes, naming the group in the CE 
	will
	cause that group to be included in the dap (i.e., data) 
	response. This
	dubious behavior is ... well, dubious. But modulo the 
	correctness of
	attributes in the face of a constraint, it does work.
	See DMRTest 243 - 249 plus some of the D4GroupTest unit tests.
	
2022-07-21  ndp-opendap  <ndp@opendap.org>
	
	Updating build offset for TravisCI
	
	Preparing release 3.20.11, Hyrax-1.16.8
 
#	
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
# libdap version 3.20.11
#

2022-07-19  ndp-opendap  <ndp@opendap.org>

	Fixed bug in computation of request_size_kb()

2022-07-09  Nathan Potter  <ndp@opendap.org>

	Fixing type issue in HTTPCache.cc (#192)

2022-07-01  ndp-opendap  <ndp@opendap.org>

	Adding DOI to README.md [skip ci]

	Updating LIBDAP_TRAVIS_BUILD_OFFSET to 1018 for re;ease 3.20.10

	Preparing release 3.20.10, Hyrax-1.16.6

#	
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
# libdap version 3.20.10
#

2022-06-27  James Gallagher  <jgallagher@opendap.org>

	Rhel 8 tirpc (#191)
	Added a test for the correct configuration of tirpc on rhel 8
	Added more messages to OX_RHEL8_TIRPC macro

2022-06-20  James Gallagher  <jgallagher@opendap.org>

	Replaced instances of &vector[0] with vector.data() (#190)
	There are two cases where the pattern was used with strings
	where .data() won't work and is not needed (working with char[]
	and whre &char[0] will always work).

2022-06-14  ndp-opendap  <ndp@opendap.org>

	Trigger TravisCI

2022-05-24  James Gallagher  <jgallagher@opendap.org>

	Removed extra header (#189)

2022-05-09  James Gallagher  <jgallagher@opendap.org>

	Fix Constructor::read() (#188)
	Fix Constructor::read()

2022-04-27  James Gallagher  <jgallagher@opendap.org>

	Constructor refactor (#187)
	Constructor refactor

2022-04-26  James Gallagher  <jgallagher@opendap.org>

	Fixed some warnings about bind2nd(), etc. (#186)
	Fixed some warnings about bind2nd(), etc.

2022-03-10  James Gallagher  <jgallagher@opendap.org>

	Edit to README - trigger a travis build

2022-03-09  James Gallagher  <jgallagher@opendap.org>

	Fix for for the last merge that only shows up in the bes (#185)
	The ServerFunctionList was flagged by sonarscan but my fix contained a logic flaw.
	The libdap tests didn't uncover that, but tests in the BES did. This fixes the logic flaw.

	a small set of improvements (#184)

2022-03-08  James Gallagher  <jgallagher@opendap.org>

	Fixed memory issues in the client-side cache in libdap (#183)
	Fixed memory issues in the client-side cache in libdap

2022-03-04  James Gallagher  <jgallagher@opendap.org>

	Unit test improvement (#182)
	Modified unit-tests so they all use a template for main()
	This reduces the code by 52 tests times 40 lines of code or
	about 2k LOC. It also fixes many small errors that crept into
	the tests as various parts were copied incorrectly or mistakenly
	edited.

2022-02-21  James Gallagher  <jgallagher@opendap.org>
	    Kodi N  <kneumiller@opendap.org>
	    James Gallager  <jgallager@opendap.org>

	Leak fixes (#181)
	Fixed an issue in Vector where assignment leaked d_proto.
	If the destination Vector already had an object pointer assigned
	to d_proto then both operator=() and the copy ctor would leak
	that pointer.
	Minor changes to marshT and Array.cc

2022-02-18  James Gallagher  <jgallagher@opendap.org>

	One more version. (#180)

2022-02-18  kyang2014  <kyang2014@users.noreply.github.com>

	Merge pull request #179 from OPENDAP/d4a-erase-lkeak-fix
	Fixed the leak I hope...

2022-02-18  James Gallagher  <jgallagher@opendap.org>

	New new version of erase.
	Also some more hacking for leak detection

2022-02-17  James Gallagher  <jgallagher@opendap.org>

	Added some notes about leak detection in unit-tests/Makefile.am
	I also changed how two of the tests are built, so they link with
	the static archive since this seems to cause the linker to choose
	the locally-built library (where linking dynamically did not).

	Addressed a 'code smell'

	Fixed the leak I hope...

2022-02-16  James Gallagher  <jgallagher@opendap.org>

	Added an erase method to D4Attributes (#178)
	Added an erase method to D4Attributes
	Switched from explicit for-loop to erase(remove_if())
	Added the algorithm header to D4Attributes.cc

	Fixed all the remaining operator=() implementations (#177)

	Removed commented code [skip ci]

	Fixed the issue with operator=() reported by sonar scan (#176)

2022-02-15  James Gallagher  <jgallagher@opendap.org>

	Fix for libdap4 github issue 147:  Grid::get_map_iter() was off by one (#175)
	Fix for libdap4 github issue 147:  Grid::get_map_iter() was off by one
	Added tests for the affected method as well as some related methods in Grid.

2022-02-13  James Gallagher  <jgallagher@opendap.org>

	Dds dmr refactor (#171)
	I refactored DDS and DMR to remove old code and provide better iterator access
	DDS: New way of accessing the 'vars' vector makes range-based for
	loops possible.
	I removed old code that was excluded with the pre processor.
	Old code n configure.ac was removed.
	Now DAP4 builds by default and the only form of the DDX that is supported
	is the 3.2 version
	Added tests for the new DDS::variables() method that returns a const & to vars.

2022-02-11  James Gallagher  <jgallagher@opendap.org>

	Added caching and a wait for the quality gate test (#174)

	Removed excess lines in README.md and triggered a master build

	New way of implementing assignment should avoid slicing (#173)
	* New way of implementing assignment should avoid slicing
	* Comments editing and unused code removed
	[skip ci]

2022-02-10  James Gallagher  <jgallagher@opendap.org>

	Build libdap RPMs on CentOS-Stream8 (#172)
	Build libdap RPMs on CentOS-Stream8
	Removed the github workflows - no sense using their machines

2022-02-04  James Gallagher  <jgallagher@opendap.org>

	Fixed an error in the recent fix for inverted array index values
	In DAP2 we changed array slicing so that [*] means all values of
	the array. In the code, we replace the * with stop value of -1 so that
	syntax like [7:*] can be used to get all the values from i position
	7 to the end of the dimension for a particular array. The stop == -1 was
	breaking the fix I added to test if start is > stop. I hacked a change
	in to special case the -1 vaule of stop. A better approach would be
	to handle this in the parser to read the end value of the dimension,
	but we don't have that information handy in the DAP2 parser (the DAP4
	parser is much better about this sort of thing).

	Fix HYRAX-540 - array index values where start is > stop break the server (#170)
	Fixed ticket https://bugs.earthdata.nasa.gov/browse/HYRAX-540 for DAP2 and DAP4
	Other fixes in this PR:
	The DAP4 ce parser was accepting negative array indices; fixed.
	Removed auto_ptr vestiges
	Fix for parallel clean issue in distclean
	Added tests for the DAP2 and DAP4 fix for inverted index values.
#	
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
# libdap version 3.20.9
#

2021-12-17  ndp-opendap  <ndp@opendap.org>

	Merge branch 'master' of https://github.com/OPENDAP/libdap4

	Triggering TravisCI build

2021-12-09  James Gallagher  <jgallagher@opendap.org>

	Reverse the switch to C++11 regex - now a comp time option (#167)

2021-12-03  James Gallagher  <jgallagher@opendap.org>

	Fixed for automake 1.16

	Added rm -rf dods_cache back to Makefile
	Not sure why that's needed, however.

	unit-tests/cache-testsuite cleanup.sh failing again

	Regex fix (#166)
	Reworked Regex class (in GNU/GNURegex.h/.cc)
	Also some other fixes from sonar scan suggestions and
	a fix to getdap4. These should have go in on their own
	branch, but wound up here.
	To improve performance, added 'const' to some of the Regex instances
	so they will be constructed (and the regex compiled) only once.

2021-11-24  James Gallagher  <jgallagher@opendap.org>

	build_btp_args() fix

	Removed code smells (#165)

2021-11-23  James Gallagher  <jgallagher@opendap.org>

	Dump auto ptr (#164)
	Time to remove the old auto_ptr code
	Also removed bind2nd and ptr_fun from D4Group and
	replaced it with a lambda. In C++-17, bind2nd goes away.
	Also includes a fix for distcheck on automake 1.16

	Removed unsupported options from getdap4, replaced GetOpt with getopt (#163)
	Also reformatted the help.

2021-11-04  Nathan Potter  <ndp@opendap.org>

	Added build number to configure call in libdap.spec.in (#161)

2021-11-01  ndp-opendap  <ndp@opendap.org>

	Restoring previous TravisCI stage order

2021-10-29  ndp-opendap  <ndp@opendap.org>

	Merge branch 'master' of https://github.com/OPENDAP/libdap4

	This might be the one... looks like sonar s working for real."

	This might be the one...

	More with sonar scan coverage issues

	More with sonar scan coverage issues

	More with sonar scan coverage issues

	More with sonar scan coverage issues

	More with sonar scan coverage issues

	Returned CI to mominal stage order.

	Working on getting the coverage files into the sonar system

	Working on getting the coverage files into the sonar system

	Trying to ammend sonar properties

	Trying to ammend sonar properties

	Trying to ammend sonar properties

	Trying to ammend sonar properties

	Trying to ammend sonar properties

2021-10-28  ndp-opendap  <ndp@opendap.org>

	Debugging scan stage

	Enable scan stage

	Enable scan stage

	Reenabling full build

	Switched libdap_version() to CVER. release-buildnum

	Probing Package_Version

	Debugging RPM build.

2021-10-27  James Gallagher  <jgallagher@opendap.org>

	new credentials (#159)
	New encrypted credentials for AWS

	Moved the [[deprecated]] annotations into the doxygen comments (#160)
	Moved the [[deprecated]] annotations into the doxygen comments
	Adding C++-14 features to our code makes for many warnings
	which hides errors.
	Add login for docker hub

2021-10-20  The-Robot-Travis  <npotter@opendap.org>

	Removed [[deprecated ...]] from headers - it's fine in the .cc files
	[skip ci]

2021-09-17  James Gallagher  <jgallagher@opendap.org>

	Spelling fixes in configure.ac
	[skip ci]

2021-09-16  dh-opendap  <dholloway@opendap.org>

	skip ci

2021-09-15  dh-opendap  <dholloway@opendap.org>

	Updated on 2021-09-15
	
# libdap version 3.20.9

2021-08-18  ndp-opendap  <ndp@opendap.org>

	Merge branch 'master' of https://github.com/OPENDAP/libdap4

	Added travis-ci-opendap token

2021-08-12  James Gallagher  <jgallagher@opendap.org>

	Modified Error so that it is more in line with C++11 (#158)
	This is a test for similar changes that we should make in the BES

	Co-authored-by: The-Robot-Travis <npotter@opendap.org>

2021-07-22  The-Robot-Travis  <npotter@opendap.org>

	Removed generated grammar files from CMakeLists.txt
	[skip ci]

	Make CMakeLists.txt use dirs conditionally
	[skip ci]

2021-06-22  ndp-opendap  <ndp@opendap.org>

	Disambiguation of the pooorly overloaded set_response_limit() methods in DDS and DMR to set_response_limit_kb()

2021-06-21  Nathan Potter  <ndp@opendap.org>

	Added (shallow) unit64_t request size computations and max_request_size state. (#156)
	* Added (shallow) Int64 request computations and max_regquest_size state.

	* Added include for <cstdint> as needed.

	* Added -std=c++11 / -std=gnu++11 as reasonable,

	* TWeking -std=c+11 flag production

	* More with the CXX11_FLAG fiddles

	* More with the CXX11_FLAG fiddles

	* More with the CXX11_FLAG fiddles

	* More with the CXX11_FLAG fiddles

	* More with the CXX11_FLAG fiddles

	* More with the CXX11_FLAG fiddles

	* - Changed the internal representation of max response size
	  to uint64_t and confined the overflow to just the
	  (deprecated) functions

	* Docs updated

	* Small errors fixed.

	* COnst and comments

	* Dropping const reference and adding comments.

2021-06-21  James Gallagher  <jgallagher@opendap.org>

	Add support for includes prefixed with 'libdap' (#157)
	Add support for includes prefixed with 'libdap'

	This fix enables code like #include <libdap/Array.h> which
	will fix the issue where Array.h clashes with C++-11's 'array.h'
	that differs in case only (and triggers warnings in IDEs
	making using them tedious. It will also pave the way for code
	that uses two different libraries' headers.

	Co-authored-by: The-Robot-Travis <npotter@opendap.org>

2021-05-20  James Gallagher  <jgallagher@opendap.org>

	Actions test (#153)
	Update the main.yml workflow.

	* Use multi-repo checkout@v2 action
	* Bump Ubuntu version to 20.04, added apt-get packages needed for Ubuntu 20
	* A better way to handle changes in the dependencies: use the hashFiles() function. This
	way any change in the dependencies version will trigger a rebuild.
	* All but the main workflow now in 'unused' folder. We need to get the hyrax-deps, libdap4,
	bes, hyrax-docker chain sorted before we start using the pipeline for real.

2021-05-18  James Gallagher  <jgallagher@opendap.org>

	Switch to bionic (#155)
	Fix failed distcheck target

	Merge branch 'master' of https://github.com/OPENDAP/libdap4

	trigger a test build

2021-05-14  ndp-opendap  <ndp@opendap.org>

	Added the built files libdap.spec and libdap_VERSION to .gitignore

2021-05-08  The-Robot-Travis  <npotter@opendap.org>

	Trying to fix libdap4 trigger of BES build.

	Triggering CI build.

2021-05-07  Nathan Potter  <ndp@opendap.org>

	This adds a -S switch that when used (#154)
	in conjunction with the -d (print DMR) switch will
	compute the size of the data reoresented by the DMR and print out that value.

	Co-authored-by: The-Robot-Travis <npotter@opendap.org>

2021-05-06  The-Robot-Travis  <npotter@opendap.org>

	Added a description of the build-number scheme to trigger-bes-build.sh
	[skip ci]

2021-05-05  The-Robot-Travis  <npotter@opendap.org>

	Travis.yml now uses libdap_VERSION

	Updated the trigger_bes_build.sh script

	VERSION is version on OSX and that's an issue for the 11.3.1 compier
	Fixed: VESION.in --> libdap_VERSION.in

2021-03-29  James Gallagher  <jgallagher@opendap.org>

	Only trigger the BES build for master, not for PRs (#152)
	Only trigger the BES build for master, not for PRs

2021-03-24  The-Robot-Travis  <npotter@opendap.org>

	Adding build numer to bes trgger

2021-03-23  James Gallagher  <jgallagher@opendap.org>

	Build number option (#151)
	Modify the build so that the source and rpm distributions include build numbers

	We've adopted a x.y.z-build version/build number scheme. Automate that so that
	the build number part of the version/build number is incremented automatically
	with every build of the master branch. To do this, I added a file name VERSION
	that holds the number, a new option -with-build to the configure script and mods
	to the .travis.yml, build-rpm.sh, and Makefile.am files.

2021-03-12  kyang2014  <kyang2014@users.noreply.github.com>

	HK-726, Don't make DAP4 empty container attribute fail. (#150)
	* HK-726, Don't make DAP4 empty container attribute fail.

	* HK-726, edit the comments to make the github check pass.

2021-03-11  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4

	Modified main.yml workflow to use updated $PATH

2021-03-10  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/OPENDAP/libdap4

	Removed special invokation of HttpConnectTest [skip ci]

2021-03-10  The-Robot-Travis  <npotter@opendap.org>

	Again, names

	Fixed incorrect stage name [skip ci]

	Added names to travis stages.

	Adding an after_deploy trigger to build the BES

2021-03-04  ndp-opendap  <ndp@opendap.org>

	Rewind

	Merge branch 'master' of https://github.com/opendap/libdap4

	Bump for ci

2021-03-01  James Gallagher  <jgallagher@opendap.org>

	Minor change to the main GH workflow - removed some debugging code.
	Thsi will also serve to force the Travis CI/CD system to build
	new deployments, which we need since hyrax-dependencies has just
	been updated.

2021-02-23  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #149 from OPENDAP/HK-724
	Hk 724

2021-02-23  Kent Yang  <myang6@hdfgroup.org>

	Merge branch 'HK-724' of https://github.com/opendap/libdap4 into HK-724

	The memory for the string object allocated by build_typed_instance in expr.h needs to be released.

2021-02-23  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #148 from OPENDAP/HK-724
	HYRAX-315,HK-724, add a boolean flag that indicates if the DAP4 expre…

	Remvoed Debian package build; added const qualifier back to get_ce_empty().

	Debugging the Travis build - removed const from DMR::get_ce_empty()

2021-02-23  Kent Yang  <myang6@hdfgroup.org>

	Add another empty line. Another try for pull request to make travis check go through

2021-02-22  Kent Yang  <myang6@hdfgroup.org>

	HK-724,HYRAX-316, the check at github somehow doesn't get passed. Add an empty line to see if this is an incident.

	HK-724,HYRAX-316, add a const for get_ce_empty() function.

	HYRAX-315,HK-724, add a boolean flag that indicates if the DAP4 expression constriant is empty in DMR. Add/update relevant methods

2021-01-28  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #146 from OPENDAP/actions-test
	Actions test

	Removed debugging from centos 7 rpm workflow

	Removed som eleftover debugging from the workflows. Added upload of the source distribution.

	Added a seconf 'check' target to run HTTPConnectTest in debug mode
	I'm tracking down an error that has appeared in code that has not
	changed in 16 years and happens only sporadically. The errors may
	be in Travis itself since our GH Action CI builds don't show any
	of these issues. But, it's a poor carpenter that blames tools.

2021-01-27  James Gallagher  <jgallagher@opendap.org>

	Hacked check target.

	Merge pull request #144 from OPENDAP/debug-http-test
	Debug http test

	Force HTTPConnectTGest to build before running check-local

	Why does HTTPConnectTest.cc fail on travis?

	Merge branch 'master' of https://github.com/opendap/libdap4

	Merge pull request #143 from OPENDAP/feature/test-buildout
	Feature/test buildout

	Merge pull request #141 from OPENDAP/configure-coverage-fix
	Added test to --enable-coverage to see if gcov is present.

2021-01-26  blackone-sudo  <ogieeweka007@gmail.com>

	workflow clean up before merge to master

	update source dist package

	update source dist package

2021-01-25  blackone-sudo  <ogieeweka007@gmail.com>

	change s3 cred

	change s3 cred

	change s3 cred

	change s3 cred

	change s3 cred

	change s3 cred

	branch clean up

2021-01-22  blackone-sudo  <ogieeweka007@gmail.com>

	current commit working

2021-01-11  ndp-opendap  <ndp@opendap.org>

	Fixed HttpConnectTest by adding new etag for test-304.html

2020-12-29  ndp-opendap  <ndp@opendap.org>

	Added libdap-3.20.7 DOI to README.md [skip ci]

2020-12-29  James Gallagher  <jgallagher@opendap.org>

	Added test to --enable-coverage to see if gcov is present.

2020-12-29  ndp-opendap  <ndp@opendap.org>

	Changing REVSION and resetting AGE

	Updating for release of libdap-3.20.7

2020-12-18  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4

	Fixed a comment on the --emable-coverage configure option
	Also added a gcovr report.
	[skip ci]

	Merge pull request #140 from OPENDAP/code-coverage
	Report now built using gcovr, and a small syntax fix

	Report now built using gcovr, and a small syntax fix
	The gcovr report might show different detatils than the reports
	from sonarscan.

2020-12-16  blackone-sudo  <ogieeweka007@gmail.com>

	Merge branch 'actions-test' of https://github.com/OPENDAP/libdap4 into feature/test-buildout

2020-12-16  James Gallagher  <jgallagher@opendap.org>

	Added caching to the centos 7 docker build

	Syntax error fixed

	Added caching of the bison build

2020-12-15  James Gallagher  <jgallagher@opendap.org>

	Fixed syntax error in the build.yml

	Build the bison dependency

2020-12-01  James Gallagher  <jgallagher@opendap.org>

	Syntax fix

	Try building hyrax-deps and then libdap4

	Fixed name of action build env from 'xenial' to '16.04'

	Switched to ubuntu xenial from latest

	Travis should now package the code
	Added a CMakeLists.txt to keep CLion from complaining.
	Moved the error buffer libcurl call so it's run before
	all of the setopt calls.

	Reorder code to see if that placates sonarscan

	Merge pull request #139 from OPENDAP/curl-init-fix
	Fixed an issue with curl_easy_init

	Fixed an issue with curl_easy_init

	Merge pull request #138 from OPENDAP/enable-coverage
	Enable coverage

	Fixed an issue. Coverage computed and gcovr working. Not SonarScan
	No idea why sonarscan is not working. However, we get a report and
	maybe codecov will come to the rescue.

	Added coverage collection to the scan step
	Not doing anything with the coverage data, however

	Updated to hopefully work on Ubuntu. Works on OSX

	Working on teh odd segmentation fault on Ubuntu

	limit this branch travis build to a scan

	Try Ubuntu focal

	Try Ubuntu bionic

	Drop back to xenail - Maybe this will fix the missing FlexLexer.h issue

	Try turning off virtual memory randomization

	Let's try bionic, using acontainer

	Try gcovr ...

	Try removing the second 'addons' section to squash the missing cppunit bug

	Arrrgh bionic won't work with the flex/bison versions we use

	Coverage working using gcovr to process the gcov files.

	Next step is to get SonarScan to use the gcovr report.

	More work on gcovr - now it's excluding the test code

	Now the gcov reports might be used by sonarscan

	They are copied to a single directory and the sonarscan tool
	is configured to look there for the reports.

	Started adding support for

	Another fix for the coverage files

	Both cp and mv won't copy files on top of other files in the same
	command (so --force and --backup won't help). I suppressed copying
	the stack.hh.gcov, etc., files from the d4_ce and d4_function
	directory. The mv/cp commands were failing and thus so was the build.

	Set the sonar.coverage.jacoco.xmlReportPaths prop to gcov-reports

	Another try at getting the coverage reports to work.

	Remove ls -lR as it doesn't seem to be doing much.

	We have coverage data, but it's not getting into sonarcloud.
	Time for user support.

	Edited travis.yml coverage lines - cleaned up old comments

	Fixed coverage so there's no error?

2020-11-29  James Gallagher  <jgallagher@opendap.org>

	Fix the osx/brew good - no sudo

	Fix the build.yml actions workflow

	Fix to the osx and ubuntu builds using github actions

2020-11-28  James Gallagher  <jgallagher@opendap.org>

	Update to build.yml action

	Change the github actions build file. Include CentOS7.

2020-11-18  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' into enable-coverage
	 Conflicts:
		Makefile.am
		d4_ce/Makefile.am
		d4_function/Makefile.am

	Removed tests and unit-tests from the coverge collection target

2020-11-18  James Gallagher  <jimg@localhost.localdomain>

	Added better 'coverage' target that will recurse
	It's a little rough, but it works OK.

	Added coverage.mk file

2020-11-17  James Gallagher  <jimg@localhost.localdomain>

	Coverage data collected, but no gcov files
	The recursive gcov/coverage rule doesn't work correctly

2020-11-13  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #136 from OPENDAP/sonarscan-test
	If the SonarScan Quality gate fails, fail the PR

	Merge pull request #137 from OPENDAP/distcheck-fix
	fix for distcheck on autoconf 2.69

	fix for distcheck on autoconf 2.69

	If the SonarScan Quality gate fails, fail the PR

	Merge pull request #135 from OPENDAP/d4dimension-size-fix
	Changed the size of a D4Dimension 'size' to unsigned long long

2020-11-12  James Gallagher  <jgallagher@opendap.org>

	Changed the size of a D4Dimension 'size' to unsigned long long
	size_t can vary between 16 and 64 bits, long long has to be
	64 bits.

	Merge pull request #134 from OPENDAP/vector-string-fix
	Fixed the set_vector() method

	Fixed the set_vector() method
	I introduced a fix that was based on a missunderstanding
	of the code. This backs that change out.

2020-11-06  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #132 from OPENDAP/vector-string-fix
	Back-out the bad Vector of string mistake

	Merge branch 'vector-string-fix' of https://github.com/opendap/libdap4 into vector-string-fix

	Back-out the bad Vector of string mistake

	Backout the bad Vector or string mistake

2020-11-02  James Gallagher  <jgallagher@opendap.org>

	Fixed the build-gh-pages.sh script.
	[skip-ci]

	Added new docs

	Merge pull request #130 from OPENDAP/string_vector_bug
	String vector bug

	Merge pull request #129 from OPENDAP/switch-to-xenial
	Changed .travis.yml to use xenial (from trusty)

	Updated this branch. I think it's ready for a merge.

	Merge branch 'master' into string_vector_bug

	Changed .travis.yml to use xenial (from trusty)

2020-10-25  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #121 from OPENDAP/sonarcloud-suggestions
	Sonarcloud suggestions

	Merge pull request #128 from OPENDAP/remove-c6
	Removed the CentOS 6 build from .travis.yml

2020-10-23  James Gallagher  <jgallagher@opendap.org>

	Removed the CentOS 6 build from .travis.yml

2020-09-27  ndp-opendap  <ndp@opendap.org>

	Fixed bug in string handling in Vector

2020-09-23  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #126 from OPENDAP/error-fix
	Fixed an issue in Error

	Fixed an issue in Error
	The what() method was returning a pointer to a temporary object.

2020-08-31  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #125 from OPENDAP/configure-fix
	Complete revert of configure.ac to the old xml config code

	Complete revert of configure.ac to the old xml config code

2020-08-28  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #124 from OPENDAP/configure-fix
	Fix for pkg-config code for libxml2

	Fix for pkg-config code for libxml2

2020-08-26  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' into sonarcloud-suggestions

	Fix for CentOS 6
	Shell scripts with empty 'then' clauses fail with whatever bash
	version is part of CentOS 6.

	Better support for CLion so it can find functions

2020-08-25  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #122 from OPENDAP/xml2-lib-build-fix
	Added better support for libxml2 in configure

	Fix for linux and xml2/configure

	Added better support for libxml2 in configure

2020-07-24  James Gallagher  <jgallagher@opendap.org>

	REmove assert from InternalErr::operator=()

	more fixes

2020-07-23  James Gallagher  <jgallagher@opendap.org>

	Added dtor and op= to D4EnumDef

2020-07-22  James Gallagher  <jgallagher@opendap.org>

	Fixes to enable configure --enable-coverage. Does not work on OSX.

2020-07-15  James Gallagher  <jgallagher@opendap.org>

	added autoreconf

	Create c-cpp.yml

2020-07-07  James Gallagher  <jgallagher@opendap.org>

	Typo in error message.
	[skip ci]

2020-06-30  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #120 from OPENDAP/errors-with-line-nums
	Added file/line info to the libdap::Error class

2020-06-17  James Gallagher  <jgallagher@opendap.org>

	Added file/line info to the libdap::Error class

2020-05-29  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #119 from OPENDAP/chunk-header-fix
	Chunk header fix

	Based on info from Dennis Heimbigner, fixed the DAP4 chunked I/O Stream
	I was sendng the chunk header bytes in host byte-order and not
	network byte order.

2020-05-18  James Gallagher  <jgallagher@opendap.org>

	Comment fix

2020-05-17  James Gallagher  <jgallagher@opendap.org>

	Adopt network byte order for the chunk header

2020-05-06  kyang2014  <kyang2014@users.noreply.github.com>

	Merge pull request #117 from OPENDAP/hk-638
	HK-638, add the buf2val function for 64-bit integer.

2020-05-06  Muqun Yang  <myang6@hdfgroup.org>

	HK-638, add the buf2val function for 64-bit integer.

2020-04-21  ndp-opendap  <ndp@opendap.org>

	Added release DOI to README.md, did some formatting. [skip ci]

	Make release 3.20.6

2020-04-16  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #115 from OPENDAP/error-msg-fix
	Error msg fix

2020-04-15  James Gallagher  <jgallagher@opendap.org>

	Test baselines for ce parser message fixes
	And a few more fixes to the messages.

	Added tests for the DAP4 CE parser error messages

	Added tests for the parser error messages.

2020-04-14  James Gallagher  <jgallagher@opendap.org>

	Additional work on the DAP4 function parser.

	Changes to the CE parser to address a xss attack.

2020-04-04  James Gallagher  <jgallagher@opendap.org>

	Fixed a mistake in an error message in configure.ac
	[skip ci]

2020-02-16  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #113 from OPENDAP/sonarscan-fix
	Fix for travis and sonarscan based on travis support email

2020-02-15  James Gallagher  <jgallagher@opendap.org>

	Fix for travis and sonarscan based on travis support email

2020-02-14  James Gallagher  <jgallagher@opendap.org>

	Fixed CentOS6 pre std=c++0x issues.

	Merge branch 'master' of https://github.com/opendap/libdap4

	Swapped out unique_ptr for auto_ptr because of CentOS6 build fail
	This problem is exacerbated by flex 2.5.35 which fails to build code
	that will compile on C6 using --std=c++0x.

2020-02-13  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #112 from OPENDAP/parser-util-fix
	Switched to faster functions for CE and Attribute value checking.

	Switched to faster functions for CE and Attribute value checking.

	Added README.md to EXTRA_DIST

	Changes that address (I think) issues with the recent rename of README to README.md
	I'm pushing this directly onto master because the CI build on a PR branch
	did not show the issues.

	Merge pull request #111 from OPENDAP/readme-rename
	Renamed README to README.md

2020-02-12  James Gallagher  <jgallagher@opendap.org>

	Added README.md; removed scan from build to test issues with said scan

	Renamed README to README.md
	Also trying to debug the sonarscan issue where travis cannot find
	executable.

	Revert "Merge pull request #109 from OPENDAP/cppunit-build-fix"
	This reverts commit 3f07795a1e6e228802321797728209fce5ee4962, reversing
	changes made to f4672a3fc673ad6e330cad00254bfb813865f8bd.

	Revert "Merge pull request #107 from OPENDAP/cppunit-build-fix"
	This reverts commit 3f07795a1e6e228802321797728209fce5ee4962, reversing
	changes made to f4672a3fc673ad6e330cad00254bfb813865f8bd.

	Merge pull request #109 from OPENDAP/cppunit-build-fix
	This change to configure.ac fixes the build for cppunit 1.14.0

	Merge pull request #108 from OPENDAP/natural_axes
	Natural axes #1

2020-02-11  James Gallagher  <jgallagher@opendap.org>

	Suppres include of unistd.h by the flex sources
	This is an attempt to fix a c++-11 build issue on linux with modern gcc
	versions.

	This change to configure.ac fixes the build for cppunit 1.14.0
	The fix instructs the compiler to use --std=c++-11 or c++-0x which
	enables cpp 1.14.0's use of std::bind.

	Removed geo/Makefile from configure.ac

	Removed geo from SUBDIRS in Makefile.am

	Added #include <memory> for unique_ptr and removed geo includes

	Removed %define api.parser.class from the two DAP4 CE parsers
	This broke bison on Linux

	Merge branch 'master' into natural_axes

	Completed fixes for the DAP2 CE parser refactor.
	I cannot figure out how to make UInt32 the default type for integer
	constants for function arguments. I dropped back to Int32s by default.
	I think this means that if functions are called with args that have
	to be held in UInt32s, those function calls will not work.

2020-02-10  James Gallagher  <jgallagher@opendap.org>

	Fixed broken parse of [*] in an array/grid projection
	The parser was setting the projection to -1:1:-1 when t should have
	set it to 0:1:-1. Also fixed the broken expr-test debug feature.

	ce_expr.yy now handles projections and selections using 'value'
	This code removes the value struct from the ce_expr parser
	and improves processing selection expressions by removing
	unneeded casting operations that were, in some cases, breaking
	valid CEs (because negative values were 'floored' to zero when
	comparing them to a value in an unsigned variable. The old code
	is still present in this commit - wrapped in #if 0 ... #endif.

2020-02-09  James Gallagher  <jgallagher@opendap.org>

	Moved 'value' out of the exprlval union.
	This makes it easier to build correct instances of 'value.'

2020-02-08  ndp-opendap  <ndp@opendap.org>

	Fixed missing centos-* rpms in travis-ci. Renabling fullCI build

	Located and cirrected a copy-pasta problem in travis rules in which BES_BUILD was being test tested and not LIBDAP_BUILD

	Testing RPM build

	Testing RPM build

	Testing RPM build

2020-02-07  James Gallagher  <jgallagher@opendap.org>

	Removed int_list and int_list_list types and functions from the CE parser.
	They are wrapped with #if 0 ... #endif

	New 'slices' code for natural axes subsetting builds and passes existing tests

2020-02-05  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' into natural_axes

2020-02-05  ndp-opendap  <ndp@opendap.org>

	Added DOI to README

	debian changelog

2020-02-04  ndp-opendap  <ndp@opendap.org>

	Updating libdap4 project files for 3.20.5 release.

2020-01-09  ndp-opendap  <ndp@opendap.org>

	updating aws keys for travis

2019-12-13  kyang2014  <kyang2014@users.noreply.github.com>

	Merge pull request #105 from OPENDAP/hk-532
	HK-532, set the parent pointer of vars to NULL when transforming DAP4…

2019-12-12  Muqun Yang  <myang6@hdfgroup.org>

	HK-532, set the parent pointer of vars to NULL when transforming DAP4 to DAP2.

2019-12-06  Sam Lloyd  <slloyd@opendap.org>

	Merge pull request #104 from OPENDAP/HK-50
	Hk 50

2019-12-06  Samuel Lloyd  <slloyd@localhost.localdomain>

	12/6/19 - HK-50 - master merge

2019-12-05  James Gallagher  <jgallagher@opendap.org>

	Removed unneeded include directories
	[skip ci]

	Added local CMakeLists.txt to streamline work with CLion.
	[skip ci]

2019-12-04  slloyd  <slloyd@localhost>

	12/4/19 - HK-50 - (In Progress) returns changed

2019-12-03  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #103 from OPENDAP/HK-459
	11/26/19 - HK-459 - (Awaiting Review) suppressed .yy error messages

2019-11-27  James Gallagher  <jgallagher@opendap.org>

	Prepare for merge

	Set custom condition for ci_test

	Testing 'test deployment'

	Modified ci_test stage

	Reset keys

	Test new AWS keys

2019-11-26  slloyd  <slloyd@localhost>

	11/26/19 - HK-459 - (Awaiting Review) suppressed .yy error messages
	suppressed error messages thrown from libdap4/*.yy files to the standard
	out

2019-11-01  James Gallagher  <jgallagher@opendap.org>

	My update of the Ubuntu container failed; modified the deb-build script.
	The script now loads the awscli code. It would be better to fix the
	docker container, but I don't have easy access to the Dockerfile.

	Updated the ubuntu 14 container so it has the aws cli.

	Modified build-deb.sh to use the aws cli.
	This change was needed because the travis.build bucket is no longer
	public.

2019-10-31  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #102 from OPENDAP/dap4-function-null-args-support
	Added support for null argument lists to the DAP4 function parser.

	Added support for null argument lists to the DAP4 function parser.

2019-10-30  James Gallagher  <jgallagher@opendap.org>

	Fix for the deb-to-package-dir.sh script.

	Merge pull request #101 from OPENDAP/travis
	Travis

	Added srcdist to the travis build

2019-10-29  James Gallagher  <jgallagher@opendap.org>

	More clean up and configured to build on the travis branch

	Clean up the travis.yml

2019-10-01  James Gallagher  <jgallagher@opendap.org>

	Changed scan stage so sonarcloud is an 'object'

2019-09-30  James Gallagher  <jgallagher@opendap.org>

	Changed name-prefix to api.prefix

2019-09-25  James Gallagher  <jgallagher@opendap.org>

	Syntax fixes in travis.yml and a new target in Makefile.am for CLion
	To make CLion work with our code I used the compiledb tool to make
	a data base of built files. I added a target to the Makefile.am to
	support that.
	[skip ci]

2019-09-08  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #99 from OPENDAP/dmr-test-fix
	Dmr test fix

2019-09-04  slloyd  <slloyd@localhost>

	9/4/19 - HK-411 - (Awaiting Review) implemented remaining DMRTest fixes

2019-08-27  Nathan Potter  <ndp@opendap.org>

	Fixing broken naming of rpm's, again.

	Fixing the missong devel and debuginfo snaps

	Testing snapshot gen in travis, tweaking target names

	Testing snapshot gen in travis

	Testing snapshot gen in travis

	Merge branch 'master' of https://github.com/opendap/libdap4

	Testing snapshot gen in travis

2019-08-26  Kodi Neumiller  <kneumiller@mtech.edu>

	Merge pull request #98 from OPENDAP/authorization_fix
	Cleanup and Verbose

	Made it easier to set the verbose for HTTPConnect and added a very verbose option.

	Merge pull request #97 from OPENDAP/authorization_fix
	Fixed netrc authorization

2019-08-23  James Gallagher  <jgallagher@opendap.org>

	more edits to ce_expr.yy

2019-08-23  Kodi Neumiller  <kneumiller@mtech.edu>

	Took out the curlopt_username and curlopt_password

	Fixed netrc authorization

2019-08-22  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' into natural_axes

	Modified CE parser. It now contains stubs for range-based subsetting

2019-07-08  James Gallagher  <jgallagher@opendap.org>

	Added DOI
	[skip ci]

2019-07-03  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4
	Resolved Conflicts: chunked_istream.cc

2019-07-02  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #96 from OPENDAP/header-byte-order-hack
	Hacked chunked_i/ostream.cc using HEADER_IN_NETWORK_BYTE_ORDER

	Revert "Fixes to ntohl() use and auto_ptr --> unique_ptr."
	This reverts commit c8c427b01dd95ff2f0da820630ffc8133d77d0aa.

	Hacked chunked_i/ostream.cc using HEADER_IN_NETWORK_BYTE_ORDER
	This is an attempt to revert edits made to correct the calls
	to htonl() adn ntohl(). Most thought is needed.

2019-07-01  James Gallagher  <jgallagher@opendap.org>

	ChangeLog, etc., for version 3.20.4

	Merge pull request #95 from OPENDAP/scan-fixes
	Fixes to ntohl() use and auto_ptr --> unique_ptr.

	Fixes to ntohl() use and auto_ptr --> unique_ptr.
	Will this pass the CentOS 6 build?

2019-06-21  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #94 from OPENDAP/libdap-leak-fix
	DMRParser leak fix

	DMRParser leak fix

2019-06-20  Nathan Potter  <ndp@opendap.org>

	Code tidying

	Merge pull request #93 from OPENDAP/dmr_chunking_parser
	Dmr chunking parser

	Dropping conditional termination of the DMR parse operation.

	Minor changes for readability

	Updated baselines to account for modified parse error messages and whitespace alterations

	Merge branch 'master' into dmr_chunking_parser

	chunking improvement

2019-06-20  James Gallagher  <jgallagher@opendap.org>

	Start of fixes to the DMRTest.at file
	The logic for the --baselines feature needs to be fixed.

	Merge pull request #92 from OPENDAP/dmr-test-mem-leak
	Dmr test mem leak

2019-06-19  James Gallagher  <jgallagher@opendap.org>

	One small edit for D4Attributes - remove unused code.

	Added a DMR that intentionally includes a forward reference error
	EnumDMR_1.6

	Found that a malformed DMR breaks the parser in a very odd way
	No error message or exception. The error is to have a forward
	reference for a dimension defined in a Group.

2019-06-19  Nathan Potter  <ndp@opendap.org>

	Merge branch 'master' into dmr_chunking_parser

	first pass at chunk reading parser

2019-06-19  James Gallagher  <jgallagher@opendap.org>

	Memory leak fix for XMLWriter.
	The libxml2 macro LIBXML_TEST_VERSION leaks 40 bytes.

	Merge pull request #91 from OPENDAP/HK-403.1
	Hk 403.1

2019-06-19  Cloud User  <centos@ip-172-31-23-170.ec2.internal>

	Used auto_ptr<> in DmrToDap2Test.cc.

	Memory leak fixes in DMR.cc and D4Group.cc

2019-06-19  Nathan Potter  <ndp@opendap.org>

	Minor output change for D4ParserSax2Test. New baselines with newline chars

2019-06-19  James Gallagher  <jgallagher@opendap.org>

	Reduced method count in D4Group and DMR.

	Spelling in a comment (AttrTable.cc)

	Formatting in D4Attributes.cc

	More work - tests still pass on OSX.
	I'm working in removing more code in D4Attributes, load_AttrTable()
	is removed and get_AttrTable() is only used by D4Group.

	Fixes for HK-403 (the HK-403.1 branch). Tests pass on OSX.

2019-06-18  Cloud User  <centos@ip-172-31-23-170.ec2.internal>

	checkpoint HK-403.1 Work on attribute transfer.

2019-06-18  James Gallagher  <jgallagher@opendap.org>

	Minor edit to D4Attributes.g - formatting only.

	Minor edits to the Array.cc file. In connection with HK-403
	[skip ci]

	Found part of HK-403 fixes that doesn't break tests - added back in.

2019-06-17  James Gallagher  <jgallagher@opendap.org>

	More fixes - Marked two tests in DmrToDap2Test as expected to fail.

	Another hack to fix DDSTests added.
	[skip ci]

	I found that some of the CI test failures are 'fixed' by including code in Array.cc
	That is, some of the code that was removed because it caused leaks was,
	apparently, doing more than causing leaks. I'm commiting this because,
	while it's a WIP, I'm on the road and don't know when I can look at it
	again.

2019-06-13  Nathan Potter  <ndp@opendap.org>

	Cleaning up

2019-06-12  Nathan Potter  <ndp@opendap.org>

	Improved error/memory management for DmrToDap2Test

2019-06-11  Nathan Potter  <ndp@opendap.org>

	Fixed memory leak in DMR::getDDS()

	Fixed copying problem in Array::transform_to_dap2(). Fixed memory leak in DmrToDap2Test.cc

2019-05-30  Nathan Potter  <ndp@opendap.org>

	Memory leak patch.

2019-04-19  James Gallagher  <jgallagher@opendap.org>

	checkpoint

2019-04-19  Nathan Potter  <ndp@opendap.org>

	Merge pull request #89 from OPENDAP/d4_to_d2_attr_err_msg
	Added more fine grained error handling in get_dap2_AttrType()

	Added Enum and Opaque to d4->d2 attribute conversion.

	Added more fine grained error handling in get_dap2_AttrType()

2019-04-18  James Gallagher  <jgallagher@opendap.org>

	Added nascent geodap library to libdap4

	Reverted the D4 parser/scanner to master; saved natural_axes versions
	DAP4 tests were failing - I'll work on the natual axes hack for DAP2
	and, if that seems promising, look at the DAP4 code.

2019-04-05  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #88 from OPENDAP/c++11-bison-hack
	Modified the build so that --std=c++-1x works on CentOS 6

	Modified the build so that --std=c++-1x works on CentOS 6
	The issue was that the bsin code failed to build. The fix is
	to not use the --std=... flag for it. Since it's generated code
	we're not using any C++ 2011 stuff. If that changes, it _will_
	build with 2011++, but not the 0x implementation found on CentOS 6.

2019-03-26  James Gallagher  <jgallagher@opendap.org>

	Arrgh. C++-11 on centos 6 is broken or our code stresses it.
	Dropping back to, either we find c++11 support or we don't. Use
	CXX11_FLAG is non-zero to if it was found (and if so, how to get the
	compiler to use it).

	This runs under autoconf 2.63, but there's another hitch. Potential fix...

	Potential fix for centos 6 and the new c++11 test.

	Merge pull request #87 from OPENDAP/c++11-test-use
	Added a test for either c++11 or c++0x and its use by the Makefiles

2019-03-25  James Gallagher  <jgallagher@opendap.org>

	Parsing works for the ERDDAP syntax for DAP2 CEs.
	DAP4 is still hosed and breaks some tests.

	Resolved conflicts in D4ConsrtaintEvaluator.cc

	Merge branch 'master' into natural_axes

	Added cxx_flags_check macro for configure.ac

2019-03-22  James Gallagher  <jgallagher@opendap.org>

	Added a test for either c++11 or c++0x and its use by the Makefiles
	No code changes. The idea is to see if this makes it through CI/CD.
	C++0x is the prequel to C++11. The '0x' version is supported on
	CentOS 6 by gcc/++ 4.4.x

2019-03-20  James Gallagher  <jgallagher@opendap.org>

	Fixed comments.
	[skip ci]

2019-02-15  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #86 from OPENDAP/leak_test
	HK-87. Fixed libdap memory leak for Ubuntu.

2019-02-15  Slav Korolev  <slav.korolev@nasa.gov>

	HK-87. Fixed libdap memory leak for Ubuntu.

2019-02-15  James Gallagher  <jgallagher@opendap.org>

	fixed debian/changelog

	Bumped up the version in denian/changelog

2019-02-14  James Gallagher  <jgallagher@opendap.org>

	Forgot the libdap spec file for the RPM

	Version 3.20.3 source release

2019-02-12  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #85 from OPENDAP/sonar-travis
	Sonar travis

	I think we're done - it works. Moving the scan to follow the builds
	[skip ci]

	Might work!

	one last try

	Another try...

	Run just the scan to test if that works.

	test sonar via travis

2019-02-11  James Gallagher  <jgallagher@opendap.org>

	Added multi-thread option to the sonar properties file
	[skip ci]

2019-02-08  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #84 from OPENDAP/rpm-aws-cli
	RPM aws cli

	Modified build-rpm.sh to work with the CentOS 6 docker image
	It has the aws cli tools buried in an odd place.

	Modified the RPM CI build to use aws cli and not curl

	Merge branch 'master' of https://github.com/opendap/libdap4 [skip ci]

	Merge pull request #83 from OPENDAP/sonar
	Sonar

	Added to gitignore for sonarscan
	[skip ci]

	minor edit to the sonar-project.properties file

	Sonar Scan changes

2019-02-06  James Gallagher  <jgallagher@opendap.org>

	Changes based on sonar scan

2019-02-05  Nathan Potter  <ndp@opendap.org>

	Fixed incorrect delete (changed to delete[]) in chunked_istream.h

	Repaired incorrect 'throw new ...' calls.

2019-01-30  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #82 from OPENDAP/travis-aws
	Modified the .travis.yml to use aws and not curl.

	Modified the .travis.yml to use aws and not curl.
	The idea here is that maybe this will be a bit more robust and thus
	cut down on spurious build errors. Testing here before in the bes.

2019-01-29  Nathan Potter  <ndp@opendap.org>

	Fixed typo [skip ci]

2019-01-02  Kodi Neumiller  <kneumiller@mtech.edu>

	Merge pull request #81 from OPENDAP/debian
	Debian

	Merge branch 'master' into debian

	Travis passed, took out unnecessary code. Also changed the branch to "if branch = master"

	Re-added the travis_build_dir

	Checkpoint..

	Checkpoint.

	Changed directory to $prefix/

	Forgot the / in /root

	Trying to mv the deb package from /root/

	Realized that the build-deb.sh file has a different value for $prefix

2018-12-31  Kodi Neumiller  <kneumiller@mtech.edu>

	Changed the directory the db package is put to $prefix/debbuild

	I think the deb package is being place in root

	Merge pull request #80 from OPENDAP/debian
	Changed where travis looks for the libdap deb package

	Trying to pinpoint libdap deb package...

	Instead of trying to put the libdap deb build in a different directory, will try to locate the deb package the docker build generates.

	Testing to see where libdap4 is put

	Forgot "--env"...

	Renamed the traivs dir

	Added the TravisBuildDir environment

2018-12-27  Kodi Neumiller  <kneumiller@mtech.edu>

	Changed it so that the deb packgage is made in the Travis_build_dir

	Merge pull request #79 from OPENDAP/debian
	Reverted the directory back to $TRAVIS_BUILD_DIR/../

	Reverted the directory back to $TRAVIS_BUILD_DIR/../

2018-12-21  Kodi Neumiller  <kneumiller@mtech.edu>

	Merge pull request #78 from OPENDAP/debian
	Changed the name of the directotry for deb build.

	Changed the name of the directotry for deb build.

	Merge pull request #77 from OPENDAP/debian
	Debian docker build

	Moved debian packages to Dockerfile

2018-12-21  Kodi Neumiller  <kodi@Udays-MacBook-Pro.local>

	Forgot to set permissions for .sh file

	Had the wrong name for the docker repository...

	libdap debian docker build.

2018-12-20  James Gallagher  <jgallagher@opendap.org>

	Updated comments
	[skip ci]

2018-12-19  Kodi Neumiller  <kodi@Udays-MacBook-Pro.local>

	Merge branch 'master' into debian

2018-12-06  James Gallagher  <jgallagher@opendap.org>

	Added DOI for 3.20.2
	[skip ci]

2018-12-05  James Gallagher  <jgallagher@opendap.org>

	Updated version numbers and Documentation for 3.20.2

2018-11-29  Slav Korolev  <slav.korolev@nasa.gov>

	Corrected comments.

2018-11-28  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #76 from OPENDAP/rename_dim
	Rename dim

2018-11-20  Slav Korolev  <slav.korolev@nasa.gov>

	HK-247. Removed unneeded include.

	HK-247. Added Array function rename_dim.

2018-11-19  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #75 from OPENDAP/version-3.20.1
	Version 3.20.1

	Updated debian changelog (which includes the version)

	Modified travis.yml for builds and packages on version-* branches

	Release versions and files updated

2018-10-24  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'travis'
	[skip ci]

	Updated travis build so that the build-rpm.sh script is accessible

2018-10-23  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'travis' of https://github.com/opendap/libdap4 into travis
	# Conflicts:
	#	.travis.yml

	Added c6 to deply list

2018-10-22  James Gallagher  <jgallagher@opendap.org>

	Updated the containers to tag 1.1

2018-10-20  James Gallagher  <jgallagher@opendap.org>

	Container tags from 1,latest to 1.0

	Removed old files

	Merge branch 'travis' of https://github.com/opendap/libdap4 into travis

	As with hyrax deps, container tag change from 1 to 1.0

2018-10-17  James Gallagher  <jgallagher@opendap.org>

	Added centos6 build

	replace mv with cp - maybe the user is not root
	That is, a non-root user cannot mv because that implies delete/write
	privileges and group and other have only read privileges.

2018-10-16  James Gallagher  <jgallagher@opendap.org>

	Debug broken mv

	Another try at debugging the mv problem

	More debugging of the mv bug.

	Debug package move error.
	Also, changed to $HOME from /root in both travis yml and build-rpm.sh

	Fixed paths in build-rpm.sh

	Missed a /home in the centos7 RPM build

	Changed /home to /root inside the docker container.
	This should enable the rpms to be accessed by Travis. Also, changed the
	branch restrictions on the deployment so the Travis branch will run the
	before_deploy code (deploy itself won't run for a PR).

	Corrected error in build-rpm.sh - was missing call to configure

	Fixed container spec; hacked yml to test only the RPM build

	Hacked Travis to run the new RPM build. checkpoint

	Changed rpm-build.sh to use 'make rpm' and added some instrumentation

2018-10-15  James Gallagher  <jgallagher@opendap.org>

	Initial version of a Travis-based RPM build. checkpoint

2018-10-11  James Gallagher  <jgallagher@opendap.org>

	Revert "Revert "--enable-coverage added to configure.ac and Makefile.am""
	This reverts commit fea75b3260c99e4edcd9b01de6aa446025a6a889.

	Revert "--enable-coverage added to configure.ac and Makefile.am"
	This reverts commit 726f30bbf743a9fc2213f3a2c7d28a7cb2df3174.

	--enable-coverage added to configure.ac and Makefile.am

	Added initial version of docker bootstrap script
	[skip ci]

	Added the new docker command - it didn't get committed previously

	# WARNING: head commit changed in the meantime
	Added docker as a 'service,' named the package build stage.
	This is a test to see if I can get the docker container to load and run

2018-09-13  James Gallagher  <jgallagher@opendap.org>

	Debian package build fail was a version number error
	Changed the distribution back to 'trusty'

	There are errors reported by debian lintian - change dist to UNSTABLE

	Modified the debian/changelog to indicate the package was built on trusty

	Updated the debian package build changelog

2018-09-13  James Gallagher  <jgallagehr@opendap.org>

	Fixed spec file changelog date [skip ci]

2018-09-13  James Gallagher  <jgallagher@opendap.org>

	Release files updated for 3.20.0

	Merge branch 'centos6-build-fixes'

2018-09-12  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #74 from OPENDAP/ddx-fix-2
	DDX fix 2

	Now the code builds DAP3.2 DDX reposnes by default.

2018-09-11  James Gallagher  <jgallagher@opendap.org>

	Baselines for DAP2 DDXs (*.dap2.xml)
	The DAP 3.2 baselines end in .xml.

	Merge branch 'ddx-fix-2' of https://github.com/opendap/libdap4 into ddx-fix-2

	The configure script now sets DAP2 or DAP3.2 DDX reposes.
	DAP2 DDX's in this commit. Tests are switched automatically.

	The configure script now sets DAP2 or DAP3.2 DDX reposes.
	Tests are switched automatically.

	This is the alternative DDX fix - compile-time choice of DAP2 or 3.2 DDX
	With DAP2 DDX, all but a handful of BES tests pass, with DAP3.2, many
	more tests fail.

2018-09-10  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #73 from OPENDAP/ddx-3.2-only
	The DDS::print_xml and print_xml_writer now only return a '3.2' DDX

	The DDS::print_xml and print_xml_writer now only return a '3.2' DDX
	There is an issue in the BES where, for unknown reasons, a DAP2 or
	DAP3.2 DDX will be returned. The DDX response should only be '3.2'.
	Since there is no used for DAP2 DDX, I've removed it. This doesn't
	address the underlying problem, however (why the version number in
	the DDS object do not match those set by the BES's client).

2018-08-29  James Gallagher  <jgallagher@opendap.org>

	centos6 edits

2018-08-22  James Gallagher  <jgallagher@opendap.org>

	Fixed commands in the before_deploy section of the travis yaml

	try moving two packages to S3

2018-08-22  Kodi Neumiller  <kodi@Udays-MacBook-Pro.local>

	Added || in the condition section.

	Took out = main

	Fixed the directory to send the .deb file.

	Got rid of /debian

2018-08-22  Kodi Neumiller  <kneumiller@mtech.edu>

	Merge pull request #71 from OPENDAP/debian
	Debian. Should move the created deb package to s3.

2018-08-22  James Gallagher  <jgallagher@opendap.org>

	Fix for DDS::has_dap2_attributes

2018-08-22  Kodi Neumiller  <kodi@Udays-MacBook-Pro.local>

	Took out the ls ../ -l after make deb -j7.

	Uncommented the different jobs. Also made it so that the deb package is grabbed from the directory above.

	Looking at a directory above the current one.

2018-08-22  James Gallagher  <jgallagher@opendap.org>

	Modified travis for coverity
	[skip ci]

2018-08-22  Kodi Neumiller  <kodi@Udays-MacBook-Pro.local>

	Added ls -l to see where the debian package is.

	Took out the condition "$LIBDAP_BUILD = main"

	Added the debian branch to the list of branches to be built. Also commented out the other jobs that aren't debian.

2018-08-21  Kodi Neumiller  <kodi@Udays-MacBook-Pro.local>

	Made it so that the debian package is moved to s3.

	Added debhelper package.

2018-08-20  James Gallagher  <jgallagher@opendap.org>

	Added the fakeroot package for debian pkg builds on Travis

	Added devscripts build-essential lintian for debian pkg build

	Modified travis.yml to trigger a debian package build.

	Merge branch 'master' into debian

	Fixed comments in MarshallerThread.h
	[skip ci]

	Merge branch 'master' into debian

2018-07-31  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #70 from OPENDAP/dds_test_fix
	DDS test fix

2018-07-30  James Gallagher  <jgallagher@opendap.org>

	Made a corresponding change to dds-test:test_class() re: mem leak

	Changed BaseTypeFactory in dds-test:test_parser() fixing a memory leak.

2018-07-25  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #68 from OPENDAP/travis
	Added a new parallel build for the asan checks

	Added a new parallel build for the asan checks

2018-07-10  Ubuntu  <ubuntu@ip-172-31-6-46.ec2.internal>

	Updated the copyright file. It may need to be looked at to ensure it is formated correctly.

2018-07-06  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #67 from opoplawski/libtirpc
	Use libtirpc

	Merge pull request #66 from OPENDAP/debian
	deb packaging

2018-06-24  Orion Poplawski  <orion@cora.nwra.com>

	Use libtirpc

2018-06-19  Ubuntu  <ubuntu@ip-172-31-6-46.ec2.internal>

	The makefile now has an option (make deb) to build the debian package for libdap.

2018-06-18  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #65 from OPENDAP/debian
	Debian Packaging

2018-06-13  Ubuntu  <ubuntu@ip-172-31-6-46.ec2.internal>

	Deleted generated files.

	Finished adding the appropriate files to build a debian package. The libdap directory was added after the debian package was installed.

2018-06-11  Ubuntu  <ubuntu@ip-172-31-6-46.ec2.internal>

	Edited the Makefile in unit tests so that it included the missing test files.

2018-06-07  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #64 from OPENDAP/print_das_fix
	Print das fix

	Merge pull request #58 from OPENDAP/keyword-refactor
	Keyword refactor

2018-05-25  James Gallagher  <jgallagher@opendap.org>

	Fixed the last two tests for the print_das() fix.

	Merge branch 'print_das_fix' of https://github.com/opendap/libdap4 into print_das_fix

	Merge branch 'master' into print_das_fix

2018-05-25  Nathan Potter  <ndp@opendap.org>

	Merge pull request #62 from OPENDAP/hyrax-730
	Fixed DDS::has_dap2_attributes() so that Grids are handled, eliminated printing MAP vectors in Grid from print_var_das()

	Dropped Grid Map arrays from Grid container in DAS (Flatten Grids man)

2018-05-25  James Gallagher  <jgallagher@opendap.org>

	Switched print_das() so that it uses get_das() and then prints. WIP.

2018-05-25  Nathan Potter  <ndp@opendap.org>

	Merge branch 'master' into hyrax-730

2018-05-24  James Gallagher  <jgallagher@opendap.org>

	Switched print_das() so that it uses get_das() and then prints. WIP.

	Added a note about HYRAX-766: bes/dapreader issue.
	The proble is due to a change in the DAS objects are printed when they
	are built using a DDS or DMR.

	[skip ci]

2018-05-23  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4

	Changes to comments and some instrumentation in DmrRoundTripTest.cc
	No functional/operational changes except some of the instrumentation
	output in the DmrRoundTripTest unit test.

2018-05-22  Nathan Potter  <ndp@opendap.org>

	Fixed DDS::has_dap2_attributes() so that Grids are handled by evaluating only the GRid Array and ignoring the Maps.

2018-05-21  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #61 from OPENDAP/hyrax-730
	Hyrax 730

	Update DDS.cc

2018-05-21  Nathan Potter  <ndp@opendap.org>

	Fixed DDS::print_das() so thatv it makes special the Gridness

	Make DDS::get_das() work recursively on Constructor types

2018-05-18  Nathan Potter  <ndp@opendap.org>

	Revert "Adding metadata to Grid and to Grid Array now."
	This reverts commit b16ede3e866ea55daff0ad28d87bd43f3ff834da.

	Adding metadata to Grid and to Grid Array now.

	Patch to DAP4->DAP2 metadata assignment for Grid type problem.

2018-05-15  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #60 from OPENDAP/url_fix
	Url fix

	Merge branch 'master' into url_fix

2018-05-07  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #59 from ryandesign/configure-CC
	Use quotes when testing $CC

2018-05-06  Ryan Schmidt  <git@ryandesign.com>

	Use quotes when testing $CC
	This avoids the error "test: too many arguments" appearing in the
	configure output if CC contains multiple words, such as "ccache cc".

2018-05-04  James Gallagher  <jgallagher@opendap.org>

	More old code removed from Url.h

	Removed unused internal storage in Url.h

2018-04-11  James Gallagher  <jgallagher@opendap.org>

	Removed Keywords2 unit test code (to old/)

	Removed keywords from DDS. The class is still in the library

2018-04-09  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #57 from OPENDAP/dmrpp-dap2
	Dmrpp dap2

2018-04-07  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'dmrpp-dap2' of https://github.com/opendap/libdap4 into dmrpp-dap2

	Protect against infinite loop in get_unique_top_level_global_container_name().

	Added code to ensure a unique top-level table is used but DDS::get_das()
	When that is needed - when there are top-level attributes in a DMR - make
	new top-level container for those attributes. This new code makes sure
	those attributes go in a container with a unique name. The code will fail
	if there are more than MAX_INT top-level tables.

2018-04-07  Nathan Potter  <ndp@opendap.org>

	sync

2018-04-06  James Gallagher  <jgallagher@opendap.org>

	DDS::get_das(): Added a test and fix for top-level 'value' attributes
	It's possible to have a DMR or DDS that has top-level attributes that
	are not in a container. These work in the DMR or DDS object, but not
	in the DAS (which can only have containers at the top-level). The
	'orphan' attributes are put in the DAP4_GLOBAL container, since these
	almost certainly come from DMR objects. We might revisit this name
	choice...

	Added tests for DDS::get_das() and get_das(DAS *).
	Also edited the implementaiton just a bit to test for global attributes
	that are not containers.

2018-04-06  Nathan Potter  <ndp@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4

	Added some (much needed) get_das() methods to DDS

2018-04-02  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #53 from captainkirk99/ck_valgrind
	change valgrind invocation, also fixed some memory leaks in unit-tests

	Merge branch 'master' into ck_valgrind

2018-03-31  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #56 from captainkirk99/ck_fix_more_2
	fixed tests

2018-03-31  Ed Hartnett  <37277297+captainkirk99@users.noreply.github.com>

	fixed tests

2018-03-29  James Gallagher  <jgallagher@opendap.org>

	Changed D4Enum::set_is_signed() so it doesn't call abort()
	This 'fixed' an issue with testing where abort() fails hard and stops
	the tests right away. The next line throws an exception, which is really
	good enough and makes it possbile to test the error case. I also fixed
	up the comments for D4Enum::transform_to_dap2().

2018-03-28  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #55 from captainkirk99/ck_fix_big_endian
	fixed tests for big-endian

2018-03-28  Ed Hartnett  <37277297+captainkirk99@users.noreply.github.com>

	fixed tests for big-endian

2018-03-25  Ed Hartnett  <37277297+captainkirk99@users.noreply.github.com>

	fixed memory leak in D4FilterClausetest

	added macro file

	change valgrind invocation, also fixed some memory leaks in unit-tests

2018-03-24  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #48 from captainkirk99/ck_tests_1
	added some tests

2018-03-24  Ed Hartnett  <37277297+captainkirk99@users.noreply.github.com>

	added new tests to .gitignore

	more tests

2018-03-19  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #52 from OPENDAP/print-das-fix
	Print das fix

	Merge branch 'master' into print-das-fix

	DDS:print_das() fixes and test baseline edits.

	Changed DDS::print_das() so it's more in line with DAS::print()
	But, tests fail.

2018-03-18  Ed Hartnett  <37277297+captainkirk99@users.noreply.github.com>

	more tests

	more testing

	fixed problem with code coverage changes

	changing the way test coverage is computed

2018-03-17  Ed Hartnett  <37277297+captainkirk99@users.noreply.github.com>

	fixing inadvertant whitespace changes

	fixing inadvertant whitespace changes

	fixing inadvertant whitespace changes

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	attempting to fix second problem with travis

	more changes to fix header problem

	more changes to fix header problem

	more changes to fix header problem

	more changes to fix header problem

	trying to fix header issue

	more tests

2018-03-16  James Gallagher  <jgallagher@opendap.org>

	Use curl to read the hyrax-deps build tar ball
	This should fix the issue with PRs from outside our GitHub space.

2018-03-14  Ed Hartnett  <37277297+captainkirk99@users.noreply.github.com>

	fixed test

	more testing

	merged

2018-03-14  James Gallagher  <jgallagher@opendap.org>

	Removed now unused ecr_credentials.sh script
	We can just use the AWS_SECRET_ACCESS_KEY and AWS_ACCESS_KEY_ID
	environment variables from within travis.

	[skip ci]

	Modified aws operations to get the hyrax-dependencies - trying to fix the build

2018-03-13  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #49 from OPENDAP/travis
	Modified aws operations to get the hyrax-dependencies - trying to fix…

	Removed now unused ecr_credentials.sh script
	We can just use the AWS_SECRET_ACCESS_KEY and AWS_ACCESS_KEY_ID
	environment variables from within travis.

	[skip ci]

	Modified aws operations to get the hyrax-dependencies - trying to fix the build

2018-03-12  Ed Hartnett  <37277297+captainkirk99@users.noreply.github.com>

	added some tests

2018-03-06  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #47 from OPENDAP/header-refactor
	Added #include "DapIndent.h" as I try to remove nested headers

	Added #include "DapIndent.h" as I try to remove nested headers

2018-03-02  Nathan Potter  <ndp@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4

	Added doxygen link to README

2018-02-24  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #46 from OPENDAP/travis
	Travis: $prefix set to $HOME/install

	added some comments

	testing

	testing

2018-02-23  James Gallagher  <jgallagher@opendap.org>

	testing

	testing

	more travis hacking

	Merge pull request #45 from OPENDAP/travis
	Travis

	travis test

	travis fixed?

	travis testing

	travis testing

	travis testing

	travis testing

	travis testing

	travis test

	travis testing

	travis testing

	travis testing

	travis test

	travis test

	Test travis

	Merge branch 'travis' of https://github.com/opendap/libdap4 into travis

	Test travis changes

	Test new travis build

2018-02-09  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4

	Minor tweak to --with-curl
	The configure.ac script needs more work to simplify it and replace
	raw shell commands with AS_IF, etc.

2018-02-08  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #44 from OPENDAP/asan
	Hacked configure so developer and asan are separate and both are used…

	Hacked configure so developer and asan are separate and both are used by travis

	Merge pull request #43 from OPENDAP/asan
	Asan

2018-02-07  James Gallagher  <jgallagher@opendap.org>

	Repaired d4_function/D4FunctionEvaluator.cc (See HYRAX-247)
	I used std::set which is supposed to preserve order, but apparently
	does not with gcc 4.8 and some levels of optimization.

	Found and fixed a memory error in tests/D4TestFunction.cc
	The $Byte() special form was being used to build an argument to
	the test function 'scale()' but the code i D4TestFunction assumed
	the argument was a TestArray instance (when it was/is an Array).

2018-02-06  jgallagher59701  <jgallagher@opendap.org>

	Fixed memory error in D4UnMarshallerTest.

2018-02-06  James Gallagher  <jgallagher@opendap.org>

	Added test for Address Sanitizer option

	Merge pull request #42 from OPENDAP/asan
	Added Asan (address sanitizer) to the --enable-developer option

	Added Asan (address sanitizer) to the --enable-developer option
	All the tests pass using this option on OSX.

	Minor hacks to the DAP2 CE grammar

2018-02-02  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #41 from OPENDAP/hyrax-598
	Fixed a memory error that could be triggered by passing bad XML to ...

2018-02-02  jgallagher59701  <jgallagher@opendap.org>

	Fixed a memory error that could be triggered by passing bad XML to the DAP4 DMR parser.
	vsnprintf() could be called with a tainted format string.

2018-01-31  James Gallagher  <jgallagher@opendap.org>

	Removed html dir from the master branch - it's still on the gh-pages branch
	Use 'make gh-docs' to build the online docs.

2018-01-30  James Gallagher  <jgallagher@opendap.org>

	Updated build-gh-docs.sh to use add --force since 'html' is on gitignore

	Added new docs

2018-01-28  James Gallagher  <jgallagher@opendap.org>

	Modifications to the DAP4 CE parser for the Natural Axes subset syntax - still fails tests

	The parser now accepts the [(float)] syntax. Sort of...
	Only floating point values work and other parts of the parser
	might be broken because a new lexeme (FLOAT) can be returned by
	the scanner. The issue is the WORD does not contain a dot (.) so
	it cannot represent float values the way people expect/need.

2018-01-27  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'natural_axes' of https://github.com/opendap/libdap4 into natural_axes

2018-01-12  James Gallagher  <jgallagher@opendap.org>

	travis

	travis

	travis

	travis

	travis

	travis

	travis

	travis

	travis

	travis

	travis

	travis

	travis

	travis

2018-01-11  James Gallagher  <jgallagher@opendap.org>

	travis

	travis

	travis

	more travis

	travis

	more travis tweaks

	travis syntax fixes

	Travis hacks

2018-01-09  James Gallagher  <jgallagher@opendap.org>

	More hacking on the new natural axes subsetting. Still nowhere near working.

2018-01-02  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #38 from OPENDAP/crypto-fix
	Fixed the libcrypto link error on OSX 10.13

2018-01-01  James Gallagher  <jgallagher@opendap.org>

	Fixed the libcrypto link error on OSX 10.13

	More hacks for natural_axes projections

2017-12-29  James Gallagher  <jgallagher@opendap.org>

	Started on the implementation of 'natrual axes' projections
	Based on the syntax developed by Bob Simons for ERDDAP. See
	http://upwell.pfeg.noaa.gov/erddap/griddap/documentation.html

2017-09-25  James Gallagher  <jgallagher@opendap.org>

	Source release 3.19.1

2017-08-25  James Gallagher  <jgallagher@opendap.org>

	Added a comment to my HTTPCacheTest change...
	[skip ci]

	Removed a test for block_size in HTTPCacheTest that failed on Fedora ppc64le system with XFS system

	Merge pull request #32 from OPENDAP/hyrax390
	Hyrax390

	Marked two of the Dmr Round Trip Tests as failing.
	This matched the results of the master branch. Thus we can merge
	the hyrax390 branch and move on to either fix those issues or
	accept the behavior as 'good enough.'

	Merge branch 'master' into hyrax390

	Merge pull request #36 from OPENDAP/gnulib-update
	Updated gnulib and added mkstemps() to avoid portability issues.

	Added malloca.valgrind

	Added more in gl

	Added more ...

	Added more still more

	Added more files in gl

	Added gl/gettimeofday.c

	Added more gnulib m4 files

	Updated gnulib and added mkstemps() to avoid portability issues.

	Added comments to DMR.h

2017-07-18  James Gallagher  <jgallagher@opendap.org>

	Fixed a warning in D4EnumTest and CppUnit usage in DmrRoundTripTest

	Merge branch 'master' of https://github.com/opendap/libdap4.git

	Added --disable-dependency-tracking to configure in travis.yml
	Will it build faster? Also, fixed a comment in D4Maps.h

2017-05-31  Slav Korolev  <slav.korolev@nasa.gov>

	Ticket #390. Cleaned 4 files.

	Ticket #390. Cleaned 4 files.

2017-05-22  ndp-opendap  <ndp@opendap.org>

	Updated versions, ChangeLog and News

2017-05-22  Nathan Potter  <ndp@opendap.org>

	Merge pull request #29 from OPENDAP/hyrax390
	Task #390. The CppUnit unit tests in libdap4 should all support runni…

	Merge pull request #31 from OPENDAP/hyrax-400
	Hyrax 400

2017-05-19  James Gallagher  <jgallagher@opendap.org>

	Fixed vec_resize() in Vector.
	I was mixing cpacity() and resize() and that leads to some odd
	behavior - I'm not sure I really understand it, but comments in
	Vector::vec_resize() are a stab at an explanation. The bottom line
	is that the fix is to use size() with resize() and not capacity().

	I also modified TestArray so that its read() method allocates
	enough space for a vector of Structures before it starts writing
	to it, just to demonstrate good behavior.

2017-05-19  Slav Korolev  <slav.korolev@nasa.gov>

	#390. More changes

2017-05-18  James Gallagher  <jgallagher@opendap.org>

	Checkpoint

	Checkpoint - run using valgrind on centos

2017-05-18  Slav Korolev  <slav.korolev@nasa.gov>

	Merge branch 'master' into hyrax390

2017-05-17  James Gallagher  <jgallagher@opendap.org>

	I edited the ByteTest.cc file so it compiles and works.

2017-05-17  Nathan Potter  <ndp@opendap.org>

	Merge pull request #30 from OPENDAP/attr_bug
	Attr bug

2017-05-17  ndp-opendap  <ndp@opendap.org>

	Dropped references to missing files.

2017-05-17  Slav Korolev  <slav.korolev@nasa.gov>

	"Task #390."

2017-05-16  ndp-opendap  <ndp@opendap.org>

	instrumentaiton

2017-05-12  ndp-opendap  <ndp@opendap.org>

	Fixed possible null pointer deref

	Dropped unused file

2017-05-11  Nathan Potter  <ndp@opendap.org>

	Merge pull request #26 from OPENDAP/dmr2dds
	Dmr2dds

2017-05-11  ndp-opendap  <ndp@opendap.org>

	Changed return value of transform_to_dap4() to void.

2017-05-10  Nathan Potter  <ndp@opendap.org>

	Merge branch 'master' into dmr2dds

2017-05-09  ndp-opendap  <ndp@opendap.org>

	Fixed bad implmentations of transform_to_dap4 in Test classes. Instrumenttion

	Fixed bad implmentations of transform_to_dap4 in Test classes. Instrumenttion

2017-05-08  ndp-opendap  <ndp@opendap.org>

	Reworked transform_to_dap4() implmentation so that they all (in libdap4) return NULL and populate the container passed in. Next will be to change the return from BAseType* to void

	Reworked transform_to_dap4() implmentation so that they all (in libdap4) return NULL and populate the container passed in. Next will be to change the return from BAseType* to void

	First pass at fixing the duplicate variables bug in DMR::build_using_dds() and Grid::transform_to_dap4()

2017-05-06  ndp-opendap  <ndp@opendap.org>

	Patched DMR tests to use the new CppUnit test pattern.

2017-05-05  ndp-opendap  <ndp@opendap.org>

	Repairing baselines

	Fixed Grid::transform_to_dap4() so maps have correct names (FQN names)

	Fixed Grid::transform_to_dap4() so maps have correct names (FQN names)

	Fixed namespace issue in tests that prevented individual tests from being run byt command line parameters.

2017-05-04  ndp-opendap  <ndp@opendap.org>

	Alternate Array assignment in Grid::transform_to_dap4()

	sync

	Stuff

2017-05-04  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #27 from OPENDAP/new_docs_target
	New docs target

2017-05-04  ndp-opendap  <ndp@opendap.org>

	A stab at correcting the FQN issue described in Hyrax-389

2017-05-04  James Gallagher  <jgallagher@opendap.org>

	Removed unused tests.
	Grid::transform_to_dap4() had used dynamic_cast<>() but now uses
	static_cast<>(), so it no longer needs to test for null returns from
	the cast operator.

2017-05-04  ndp-opendap  <ndp@opendap.org>

	Supressing warnings

	Merge branch 'master' into dmr2dds

2017-05-04  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #28 from OPENDAP/dmr_parser_fix
	Fixed fixed length line limit in the DMR Sax parser

2017-05-04  ndp-opendap  <ndp@opendap.org>

	Added some DAP4 related TODO items.

	Added some DAP4 related TODO items.

	Merge branch 'master' into dmr2dds

	unwinding small change

2017-05-04  James Gallagher  <jgallagher@opendap.org>

	Changed class field names so they start with 'd_'
	modified:   D4ParserSax2.cc
	modified:   D4ParserSax2.h

2017-05-03  James Gallagher  <jgallagher@opendap.org>

	Fixed fixed length line limit in the DMR Sax parser
	modified:   D4ParserSax2.cc

2017-05-03  ndp-opendap  <ndp@opendap.org>

	Updated .gitignore for new test executables

	Adding two more working DMR to Grid tests. Failing test still fails.

	Checking in new dmr2Grid test which fails because the supplied DMR fails to parse, despite the fact that it was generated by Hyrax 1.13.3

	Added new dmr2dds with Grid test.

	Added new dmr2dds with Grid test.

	Updating comments etc.

	Updating comments etc.

2017-05-02  ndp-opendap  <ndp@opendap.org>

	Ooops. Forgot test baseline

	Silencing more debug chatter.

	Silencing more debug chatter.

	First cut at extracting dap2 Grid objects from dap4 Arrays with maps.

	First cut at extracting dap2 Grid objects from dap4 Arrays with maps.

	Turned off compiled in debug.

	Refactored the transform_to_dap2() aip. woot.

2017-05-02  James Gallagher  <jgallagher@opendap.org>

	Modified Makefile.am to use the new build-gh-docs.sh script.
	This seems to work, although I think it might be fragile.

	A better way to build the docs and push them to gh-pages new file:   build-gh-docs.sh

	Working on using a script instead of makefile targets modified:   Makefile.am

	modified:   .gitignore

	Fixed spaces/tabs in Makefile.am

	deleted:    doxy_private.conf

	Modified doxy.conf.in so it writes output to 'html'
	It used to write output to docs/html.

	I added the new docs targets to the Makefile.am
	These will build and commit/push doxygen docs to github.io via gh-pages.
	The gh-pages branch has to be made first and should be empty.

2017-04-28  ndp-opendap  <ndp@opendap.org>

	Weekend update baby... More tests working. Need to sort out Groups next.

	Refactored DMR test suite, add round-trip and dmr_to_dap2 test suites.

2017-04-26  James Gallagher  <jgallagher@opendap.org>

	Added -g3 to the coverage flags

	Removed generated docs

	Deploy to GitHub Pages

2017-04-26  ndp-opendap  <ndp@opendap.org>

	Still dorting tests

2017-04-25  ndp-opendap  <ndp@opendap.org>

	Merged master to dmr2dds branch

	Structures now transfer attributes correctly

	Space indented BAseType (why was it not before?)

	Structures now transfer attributes correctly

2017-04-24  ndp-opendap  <ndp@opendap.org>

	Structures now transfer attributes correctly

	Structures now transfer attributes correctly

	sync

	Provisional patch to DMR.print_das()

2017-04-23  ndp-opendap  <ndp@opendap.org>

	Provisional patch to DMR.print_das()

2017-04-21  ndp-opendap  <ndp@opendap.org>

	Created DMR specific testsuite. Migrated exisiting DMR tests from dds-testsuite.

	TEst draft (broken)

2017-04-20  ndp-opendap  <ndp@opendap.org>

	sync

2017-04-18  James Gallagher  <jgallagher@opendap.org>

	Added comments to Connect and mime_util regarding tainted data

	Fixed minor issue in D4ParserSax2.
	The namespace prefix could be null and was passed directly to
	std::string's ctor

	Fixed for potential issue in D4ConstraintEvaluator.
	The pointer 'dim' could be dereferenced when it was null.

2017-02-17  James Gallagher  <jgallagher@opendap.org>

	Travis should work now...
	We need a better way to test changes to this process

	Removed codecov.io from the build.
	Debug on CentOS and stop hacking at Travis...

	Added libgcov a an attempt to fix the travis build.

	Turn on coverage in travis.yml

2017-02-16  James Gallagher  <jgallagher@opendap.org>

	more travis hacks

	travis hacks for code cov io

	more travis hacks

	another tack for travis and codecov...

	tedious... (still travis debugging)

	travis test...

	travis.yml fix for codecov.io

	Mods for codecov.io (https://codecov.io/gh/OPENDAP/libdap4)

	Added code coverage to travis.yml

	Merge branch 'master' of http://github.com/opendap/libdap4

	Added code coverage script (get_code_cov.sh)

2017-02-08  James Gallagher  <jgallagher@opendap.org>

	Hacked up gitignore for various build stuff [ci skip]

2017-01-06  James Gallagher  <jgallagher@opendap.org>

	Version 3.18.3

	Modified etags for the files at the new test.o.o site.

2016-12-08  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #25 from OPENDAP/chunked_istream_bug
	Fixed a memory issue in chunked_istream.h

	Fixed a memory issue in chunked_istream.h (new[] mis-matched with delete)

2016-11-18  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #24 from OPENDAP/dmr++
	Dmr++

	Merge pull request #23 from OPENDAP/D4Group_ptr_duplicate_fix
	Fix fir D4Group::ptr_duplicate(). It was not returning BaseType*

2016-11-17  James Gallagher  <jgallagher@opendap.org>

	Fix fir D4Group::ptr_duplicate(). It was not returning BaseType*
	Instead, it returned D4Group. There may have been a good reason,
	But I think consistency is better. ...maybe

2016-11-16  ndp-opendap  <ndp@opendap.org>

	DMR parser will now ignore and XML not in the DAP4 namespace. woot.

2016-11-15  ndp-opendap  <ndp@opendap.org>

	XML namespace thing sorted. DMR parser will now ignore all elements that are not in DAP4 namespace. woot.

	Still working the namespace thing

	Still working the namespace thing

	Still working the namespace thing

	Still working the namespace thing

2016-11-15  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4.git

2016-11-15  ndp-opendap  <ndp@opendap.org>

	Trying to get name space centralization class working. ugh. Static methods

2016-11-15  James Gallagher  <jgallagher@opendap.org>

	Added comment for dmr_start_element()

2016-11-05  James Gallagher  <jgallagher@opendap.org>

	Corrected the file: URL in HTTPConnectTest - I think ...

	Merge branch 'master' of http://github.com/opendap/libdap4

2016-11-04  James Gallagher  <jgallagher@opendap.org>

	Another try at fixing the travis build

	Trial fix of test_config.h error on Travis.

	Stopped running the tests using multiple jobs on Travis.
	This might have been the cause of failures there.

2016-11-03  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of http://github.com/opendap/libdap4

2016-11-02  James Gallagher  <jgallagher@opendap.org>

	Updated the library version info for version 3.18.2

	Version 3.18.2

2016-11-01  James Gallagher  <jgallagher@opendap.org>

	Formatting Grid.cc

2016-10-20  James Gallagher  <jgallagher@opendap.org>

	Fixed type in tests/DMRTest.at - names_with_spaces3.dmr

	Fixed Hyrax-267
	The DAP4 ce parser was not removing double quotes or the %<hex>
	escaping, so names that needed those were not 'found' in the
	dataset. Also, the grammar used by the parser had a syntax error
	in it where /s in the id name were turned into dots and the
	resulting names could not be found. The result was a valid names
	were being rejected.

2016-10-12  James Gallagher  <jgallagher@opendap.org>

	Corrected a comment in Vector.h

2016-08-30  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #22 from sharkcz/getopt
	type fix for getopt

2016-08-30  Dan Horák  <dan@danny.cz>

	type fix for getopt
	The getopt() function uses int as return type and using char for a variable storing
	teh return value makes problem on platform where char is unsgined by default.

	http://www.arm.linux.org.uk/docs/faqs/signedchar.php

	Fix by Orion Poplawski <orion[at]cora.nwra.com> for https://bugzilla.redhat.com/show_bug.cgi?id=1366787

2016-08-26  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #21 from sharkcz/dmr-bigendian-2
	add missing big endian baselines

2016-08-26  Dan Horák  <dan@danny.cz>

	add missing big endian baselines

2016-08-22  James Gallagher  <jgallagher@opendap.org>

	Added main_page.doxygen to gitignore

2016-07-14  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4

	Added libuuid to the requirements listed in INSTALL.
	Also added a comment and fixed error message text in util.cc for
	void extract_double_array(Array *a, vector<double> &dest)

2016-06-09  James Gallagher  <jgallagher@opendap.org>

	Fixed a compiler warning when USE_POSIX_THREADS is not def'd in XDRStreamMarshaller

2016-06-08  James Gallagher  <jgallagher@opendap.org>

	Removed generagted file since it's causing grief on Travis

	Updates for the source dist and unit-tests

2016-05-31  James Gallagher  <jgallagher@opendap.org>

	Version 3.18.0

2016-05-25  James Gallagher  <jgallagher@opendap.org>

	Fixed ugly DBG2() macro calls

2016-05-18  James Gallagher  <jgallagher@opendap.org>

	Merge remote-tracking branch 'origin/Hyrax-98'
	Conflicts:
		D4Connect.cc
		d4_ce/D4ConstraintEvaluator.cc
		d4_ce/d4_ce_parser.yy

2016-05-17  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #19 from OPENDAP/response_cache
	Response cache

2016-05-16  James Gallagher  <jgallagher@opendap.org>

	Added recursive Sequence::rest_row_number() and comments

2016-05-15  James Gallagher  <jgallagher@opendap.org>

	Minor edits after testing specializing read_row() for the ResponseCache
	See bes/dap CachedSequence and CacheTypeFactory for more info.

2016-05-13  James Gallagher  <jgallagher@opendap.org>

	Checkpoint - Nathan's hack for Sequence plus debugging

	Added comments for the hacked set_send_p() and set_read_p() methods

	Added a (potential) fix for Vector::set_send_p()

2016-05-12  James Gallagher  <jgallagher@opendap.org>

	Hacks for the bes branch 'response_cache'

2016-05-10  James Gallagher  <jgallagher@opendap.org>

	Changes for Coverity
	[ci skip]

	Comments

2016-05-09  James Gallagher  <jgallagher@opendap.org>

	Coverity edits - both minor
	[ci skip]

	Removed extraneous include

2016-05-06  James Gallagher  <jgallagher@opendap.org>

	Added parser-util.cc back in after deleting it by mistake.

	Minor patches for issues found by Coverity Changes to be committed: 	modified:   Connect.cc 	deleted:    parser-util.cc

2016-05-05  James Gallagher  <jgallagher@opendap.org>

	Improved error checking for the DDX parser.
	When text is feed into the parser and its not valid xml, the parser
	was just ignoring that. No more...

	Arrg. baselines were not int he last commit...

	Moved the newest tests' baselines to the 'universal' directory
	It's time to switch the new DMR tests to ones that don't have to
	have a separate set of baselines for bin- and little-endian
	machines. It takes too long to build up the big-endian test
	baselines (get a b-e VM, etc.) and we have a good set of baselines
	for each arch so if issues pop up on one or the otehr arch,
	it should be easy to catch them.

	Merge pull request #18 from OPENDAP/jg_filters
	Jg filters

	Merge branch 'master' into jg_filters
	Conflicts: D4Sequence.h

	Added 'universal' tests for DMRTest
	The DMR includes a checksum when it's built from received data and
	that checksum is a function of word order of the sender. This made
	building baselines for the DMR tests a pain. We've built a number of
	tests for both big- and little-endian machines - from now on new
	tests should use 'universal' baselines (built by removing the checksum
	using sed).

2016-05-04  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #17 from OPENDAP/D4Sequence_value_ref
	Added a new method to D4Sequence

2016-05-03  James Gallagher  <jgallagher@opendap.org>

	Cosmetic editing

	Optimized the read_sequence_values() code.
	Child sequences do not have copies of the filter clauses. These are not
	needed by them since they have already been filtered.

	Added tests for complex CEs involving nested seqeunces

	Inner sequence filter issue resolved
	The code still needs tests and there is a potential optimization and
	the syntax needs to be documented because the way fields in a
	sequence can be referenced is less general than other places in the CE.

	Fixed the issue with child sequences in DAP4

2016-05-02  James Gallagher  <jgallagher@opendap.org>

	Partial fix for Hyrax-182
	https://opendap.atlassian.net/browse/HYRAX-182

2016-04-29  James Gallagher  <jgallagher@opendap.org>

	More test baselines

	Scanner fix

	Fixed the numeric constant error with the filter code
	Numeric constants were showing up as the value '1.' The checking_*()
	functions were the culprit. In the process I added missing methods in
	the FilterClause code and debugging in a number of places.

	Added tests for the new filter code. Not all of the tests pass...
	There is some work to be done with parsing the != and ~= operators
	and also mixing int and float arguments. There may be issues with
	filed references as well, but we'll have to check the spec for that.

2016-04-25  James Gallagher  <jgallagher@opendap.org>

	Fixed the issue with <constant> <op> <var> not working.

	Fixed three operand filter clauses in the CE evaluator, but...
	they still don't work correctly. There seems to be a problem with the
	parsing of constants.

2016-04-24  James Gallagher  <jgallagher@opendap.org>

	Removed debugging statements; Using the 'ND' operator is an error.

	The parser now builds filter clauses and binds them to a D4Sequence.
	Some by-hand tests show not everything works, but mostly it's a problem
	with relops and String variables or constants.

2016-04-23  James Gallagher  <jgallagher@opendap.org>

	Parser tweaks - relops now are returned as strings

	Fixed a problem with the TestByte, ..., classes when used for 'series values'
	Some of the classes had the odd behavior that the series of values
	was per-process and not per object instance. So, TestStr's value
	would not repeat until a new process was started, it instead kept
	increasing "... 1", "... 2", etc., across different instances of
	the class. Fixing this made it easy to fix the TestD4Sequence code.

2016-04-22  James Gallagher  <jgallagher@opendap.org>

	Added tests for D4Sequences, including filter clause evaluation

	Added D4SequenceTest

	D4Sequence now supports evaluating a FilterClauseList.
	Added tests too. I have only tested D4Sequence::intern_data(),
	not serialize().

	D4FilterClauseList now used by D4Sequence::serialize()

	Eh, I rewrote the relops operator code.
	It now uses the same approach that I used for DAP2 - a method
	for each type (Byte, ...).

	Added D4FilterClauseTest

	Fixed a bug in the was D4Function was used
	In the ServerFunctionList and d4_function_parser.yy, I should
	have been using a poiter to D4Function and not the object itself.
	Now the DMRTests for functions pass

2016-04-21  James Gallagher  <jgallagher@opendap.org>

	Hacks to the D4FilterClause code
	This also includes fixes to D4RValue and tests for the filter clause
	code. Two minor changes to the parsers.

2016-04-20  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' into jg_filters

	Added a new method to D4Sequence
	D4SeqValues &D4Sequence::value_ref(): Returns a reference to the
	internal data held by a D4Sequence instance.

2016-04-20  Nathan Potter  <ndp@opendap.org>

	Updated doxygen version number

	Merge branch 'master' of https://github.com/opendap/libdap4

	Added debugging statements to various Sequence items.

2016-04-18  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4

	Version 3.17.3

	Version 3.17.2; Fixed a soname error
	Adding a const constructor seems to have *removed* the old constructor
	as far as some code is cncerned (it's still there, but with a
	different mangled name).

2016-04-15  James Gallagher  <jgallagher@opendap.org>

	Version 3.17.2

	Merge branch 'master' into Hyrax-98
	Conflicts:
		tests/DMRTest.at

	Removed use of a const iterator in D4Maps' remove_map method

	Merge pull request #15 from sharkcz/cppunit
	fallback to pkg-config if cppunit-config is not available

	Fixed an error in the script related to Coverity support
	The env var COVERITY_SCAN_BRANCH should have been quoted.

	Merge pull request #13 from sharkcz/dmr-bigendian
	add missing big endian baselines

2016-04-15  Dan Horák  <dan@danny.cz>

	fallback to pkg-config if cppunit-config is not available
	Recent version of cppunit packages do not distribute the cppunit-config script
	and expect the usage of pkgconfig file.

2016-04-14  Dan Horák  <dan@danny.cz>

	remove the condition because we added the missing baselines

	add big endian baseline files for new tests

2016-04-13  James Gallagher  <jgallagher@opendap.org>

	Added tests for Hyrax-98 issues.
	These tests cover requests for an Array w/o including the Map and
	requests that use local dimension slices. The test dataset is has
	only one dimension/map.

	Fix for Hyrax-98: Requests for Arrays with Maps fail sometimes
	There are two cases where the request for an Array that contains Maps
	was failing: The request didn't also name the Maps, or the request
	used 'local dimension slices'. The latter case is fairly complex and
	the fix here (actually both fixes here) may need revision once we
	look at how the specification should be clarified when these kinds of
	CEs are used. Here is the ticket:
	https://opendap.atlassian.net/browse/HYRAX-98

2016-04-08  James Gallagher  <jgallagher@opendap.org>

	Added comments to D4 parser code.

2016-04-06  James Gallagher  <jgallagher@opendap.org>

	Added dump() methods for D4Attribute and D4Attributes.

2016-04-01  James Gallagher  <jgallagher@opendap.org>

	Version 3.17.1

	Added #include <string> to D4RValue.h to fix an issue over in the BES

2016-03-22  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #11 from OPENDAP/d4-threads
	D4StreamMarshaller now uses the double buffering code for transmission

2016-03-18  James Gallagher  <jgallagher@opendap.org>

	Added #include <cstring> for linux

	D4StreamMarshaller now uses the double buffering code for transmission of vector and opaque data.

	Merge branch 'master' of https://github.com/opendap/libdap4

	Possible fix for the memory issue in Hyrax-152.
	Push this to github and test on linux.

2016-03-01  Nathan Potter  <ndp@opendap.org>

	Updated getdap4 usage statement to better reflect the new behavior of the application.

2016-02-29  Nathan Potter  <ndp@opendap.org>

	Fixed BES-102 in which getdap4 was bumbling the DAP4 CE.

2016-02-26  Nathan Potter  <ndp@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4

	Removed timing code fro MarshllerThread using our friend #if 0

2016-02-24  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #9 from sharkcz/endian
	fix big endian detection

2016-02-22  James Gallagher  <jgallagher@opendap.org>

	Edit Int8::print_val() so that Int8 values always print as numbers.

2016-02-20  Dan Horák  <dan@danny.cz>

	fix big endian detection
	Currently there is a endian detection during configure, but the code relies
	on non-portable __BIG_ENDIAN__ define. The default actions in AC_C_BIGENDIAN
	break setting the correct value for WORD_BIGENDIAN.

	See also https://bugzilla.redhat.com/show_bug.cgi?id=962091#c48

2016-02-18  James Gallagher  <jgallagher@opendap.org>

	Added long-needed const constructor and operator=()
	This was done to support some experiments with memory caching,
	but it's a long-overdue fix in general.

	Zero-length array support: Vector::serialize() traps calls when length() == 0
	This is part of a series of changes to support netCDF files
	that use zero-length arrays as arbitrary attribute containers.

	Removed old code that was commented out.

	Replaced fgets() > 0 with fgets() != 0 in the parser's main loop
	A suggestions from David Binderman.

2016-02-12  James Gallagher  <jgallagher@opendap.org>

	Patch for gcc 6 from Orion Poplawski

2016-02-02  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #8 from OPENDAP/BES-97
	Bes 97

2016-01-29  James Gallagher  <jgallagher@opendap.org>

	Modified Vector::val2buf() in support of zero-length arrays
	val2buf() was throwing an InternalErr when called with a null data
	pointer. I modified it so that if the pointer is null and the length()
	of the vector/array is zero, it returns zero. The exception is still
	thrown if the pointer is null and the length() is not zero.

	Removed #define DODS_DEBUG

	Tests for empty DAP2 Structures

	Tests for empty structures added.

2016-01-28  James Gallagher  <jgallagher@opendap.org>

	Zero-length arrays now work with libdap, with caveats
	I have implemented and tested zero-length arrays of the
	cardinal types for DAP2 and 4. There's more to be done and
	no testing outside of libdap has been done.

	Added documentation comments in crc.h

	Spelling fixes in the ChangeLog, ...

2016-01-26  James Gallagher  <jgallagher@opendap.org>

	ChangeLog, et al., updated Version 3.17.0

2016-01-20  James Gallagher  <jgallagher@opendap.org>

	Removed #if 0 in the D4Function/ConstraintEvaluator::error() methods

2016-01-19  James Gallagher  <jgallagher@opendap.org>

	Found one more place in the DAP4 CE and Function parser where errors did not result in an exception.

2016-01-13  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #6 from OPENDAP/BES-87
	BES 87

2016-01-12  James Gallagher  <jgallagher@opendap.org>

	Added comments re how the Error object codes map to HTTP codes

	Added mapping between libdap and HTTP codes (suggestions)

	Added a code to Error; made sure Error was used consistently
	Changes to mesh with those in the OLFS. Error(unknown_error, ...)
	maps to an HTTP 400, internal_error --> 500, not_impelemented -->501,
	etc.

	DAP2 and 4 scanners now throw Error(malformed_expr, <msg>)
	They were writing to stderr...

	DAP2 CE parser uses no_such_identifier where apropos

2016-01-11  James Gallagher  <jgallagher@opendap.org>

	Added codes Error response in the DAP2 parser
	There were only a handful since most of the Error throws were well
	behaved.

	Modified the DAP4 ce and function parsers to include code w/Errors
	See https://opendap.atlassian.net/browse/BES-87.

2016-01-05  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' into bes-40

2016-01-04  James Gallagher  <jgallagher@opendap.org>

	Modified the CRC32 byte-order change so that it's not included by default

	Popped old changes for Connect; fix for Makefile.am; etc.

2015-12-31  James Gallagher  <jgallagher@opendap.org>

	Hacks for doxygen.
	The Makefile works now (rebuilds doxy.conf when needed) and the docs
	are better. I stopped including docs for methods w/o doc comments
	and those are now listed in the doxygen_warnings.txt file.
	[ci skip]

2015-12-30  James Gallagher  <jgallagher@opendap.org>

	Tried CLion; added CMakeLists.txt to gitignore

	Removed the calls to DDS:timeout_{on,off}
	This code is no longer used. The timeout feature of the BES is far
	better.

2015-12-08  James Gallagher  <jgallagher@opendap.org>

	Removed commented-out code

	Merge branch 'master' of https://github.com/opendap/libdap4

	Float32 attributes mis-coded as Byte in the DMR

2015-12-03  Nathan Potter  <ndp@opendap.org>

	Travis install check

	Travis install check

2015-11-30  Patrick West  <pwest@vsto.tw.rpi.edu>

	Missing xml2 libraries in unit-tests build
	Added $(XML2_LIBS) to the Makefile.am in unit-tests so that tests would
	build. On Ubuntu 14.04.

2015-11-13  James Gallagher  <jgallagher@opendap.org>

	I removed the deploy lines from the travis.yml file
	These seem broken - I have to investigate how to handle
	deployment of RPMs out of travis

2015-10-22  James Gallagher  <jgallagher@opendap.org>

	Fixed error in printing of child groups.
	The child group values were printed twice.

2015-10-21  James Gallagher  <jgallagher@opendap.org>

	Source release version, ChangeLog, News, ... for 3.16.0

2015-10-19  James Gallagher  <jgallagher@opendap.org>

	Fixes #1

	Merge branch 'master' into jg_filters
	Conflicts:
		BaseType.cc

	Added changes to exit when 'report_errors' (-r) is true

	Fix for the missing 'child groups' in getdap4's output
	And some minor mods to XMLWriter - clean up the includes a bit.

2015-10-15  James Gallagher  <jgallagher@opendap.org>

	Merge pull request #5 from OPENDAP/intern_no_crc32
	Intern no crc32

	Merge pull request #4 from OPENDAP/endian_fixes
	Endian fixes

2015-10-14  James Gallagher  <jgallagher@opendap.org>

	Some of the DAP4-only types were not setting is_dap4
	This casued the DMR output code to throw an error (Unknown Type) in
	cases where those types were used.
	See https://opendap.atlassian.net/browse/HR-63

2015-10-13  James Gallagher  <jgallagher@opendap.org>

	fixed a warning in dmr-test - /* in a comment

2015-10-13  jgallagher59701  <jgallagher@opendap.org>

	Added test baselines for intern_data with no checksum
	I dropped computing the checksum in the intern_data() method,
	so the baselines for the tests had to be updated.

2015-10-13  James Gallagher  <jgallagher@opendap.org>

	Now the intern_data() method used with DAP4 does not compute the checksum
	It is only computed by the code that serializes the response - sends it
	to a remote client. I added baselines specifically for the intern tests
	on little endian machines. Will add ones for big endian next...

	Merge branch 'intern_no_crc32' of https://github.com/opendap/libdap4.git into intern_no_crc32

	Removed crc32 generation from intern_data()
	This seems better - I htink computing the CRC code
	when interning values is not necessary. Those should
	only be computed when the server is going to send values.

2015-10-12  James Gallagher  <jgallagher@opendap.org>

	Completed changes to D4UnMarshallerTest.cc
	This copy of the tests hould work on both little- and big-endian
	hosts.

	More changes to D4UnMarshallerTest.cc

2015-10-12  jgallagher59701  <jgallagher@opendap.org>

	Partial fix for D4UnMarshallerTest.cc

2015-10-12  James Gallagher  <jgallagher@opendap.org>

	Changed WORDS_BIGENDIAN to __BIG_ENDIAN__

2015-10-07  jgallagher59701  <jgallagher@opendap.org>

	One step closer to the tests working on big endian machines
	D4MarshallerTest now works

	Update to D4Marshaller/UnMarshaller tests - added baselines for big-endian
	...There's still an issue, however.

2015-10-07  James Gallagher  <jgallagher@opendap.org>

	D4UnMarshallerTest also needs two sets of baselines. Added little-endian ones.

	D4MarshallerTest need two sets of baselines...
	One for big- and one for litte-endian machines. I made the little
	endian set.

2015-10-07  jgallagher59701  <jgallagher@opendap.org>

	Changed to D4EnumTest to support changes for big-endian machines.

2015-10-07  James Gallagher  <jgallagher@opendap.org>

	The change to D4Enum::compute_checksum() was correct.
	This fixes the last of the issues with Enum on big-endian machines.
	The problems we caused by the assumption that 64-, 32-, 16- and 8-bit
	integers would align on the LSB, which is the case for little-endian
	machines (but not big...). In several places where reinterpret_cast<>()
	was used I first assigned the Enum _value_ to a temp variable of the
	correct size and then passed the address of that to the checksum calculation
	function. High cost in one sense, but really, scalar Enum variables will
	be rare and Arrays of Enums are handled differently. I also have dropped
	the overly-complex design that used a union. It eliminated some casts,
	but was based on the erroneous assumption regarding alignment.

	Test change in computing checksum for big-endian machines.

	Debugging big-endian issues still..

2015-10-07  James Gallagher  <jimg@idoru.local>

	Merge branch 'endian_fixes' of https://github.com/opendap/libdap4 into endian_fixes

	Cleanup of a version of this that should work on big and little-endian machines.

2015-10-06  jgallagher59701  <jgallagher@opendap.org>

	Baselines for Enum tests on big endian machines
	Now only the tests 54 and 55 fail on the big enian machines...

2015-10-06  James Gallagher  <jimg@idoru.local>

	Removed union in the D4Enum implementation
	This is an attempt to fix the issues found on big endian machines.

2015-10-01  James Gallagher  <jgallagher@opendap.org>

	The DMR tests now work on little endian machines, mostly
	There is an issue with D4Enum that causes some tests to fail.

2015-10-01  jgallagher59701  <jgallagher@opendap.org>

	Fixes for function/ce tests modified:   tests/DMRTest.at

2015-09-30  jgallagher59701  <jgallagher@opendap.org>

	Baselines for a big endian machine.

2015-09-30  James Gallagher  <jgallagher@opendap.org>

	Fail: fixed a syntax error that got pushed.

	Added capability to build baselines that's sane

	Continue with fixes for data + ce tests

	DMRTest is dependent on word order - this is a trial fix.

2015-09-29  James Gallagher  <jgallagher@opendap.org>

	Fixed an issue in HTTPCacheTest; version number bump.
	In HTTPCacheTest, a quirk of RCReader meant that when the tests
	were run as part of distcheck they would fail if the user has set
	USE_CACHE to 1 in their ~/.dodsrc. Version numbers bumped to 3.15.1.

2015-09-23  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4

	Fixed a syntx error in cgi_util.h
	... and added comentary to MarshallerThread.cc

2015-09-20  James Gallagher  <jgallagher@opendap.org>

	Version 3.15.1

2015-09-18  James Gallagher  <jgallagher@opendap.org>

	Added empty Coverity model file

	Fixed a bug in the DAP4 CE evaluator
	The DAP4 CE evaluator was using just the stop index value
	as the size of a dimension when testing if the stride value
	was valid. When a dimension of length 1 (i.e., [0:0]) was
	found, it's length was '0' and a stride of '1' was invalid.
	I fixed this and the test now uses stop-start +1 for the
	dimension length.

2015-09-17  James Gallagher  <jgallagher@opendap.org>

	HTTPCacheTable uses verbose errors
	... instead of obscure error codes

	Modified configure.ac to fail if uuid.h is not found.

2015-09-16  James Gallagher  <jgallagher@opendap.org>

	Added #error if uuid.h is not found modified:   DODSFilter.cc modified:   tests/ResponseBuilder.cc

	Fixed a syntax error modified:   tests/ResponseBuilder.cc

	An attempt to fix the uuid.h header issues.
	I added a test to test for uuid.h in addition to uuid/uuid.h
	in the hope that it'll find something and compile. I may have to
	work on this a bit more since it's caused such a hassle on the
	different build systems.

2015-09-15  James Gallagher  <jgallagher@opendap.org>

	Minor issue in D4EnumDefs.cc with range checking

	Added #include <cerrno> where needed

2015-09-14  James Gallagher  <jgallagher@opendap.org>

	Minor fix for precision in Float64

	CID 81430

	CID 81412

	CID 81409

	CID 81405

	CID 81402

	CID 81401

	CID 81397

	formatting

	CID 81389

	CID 81382

	CID 81377

	CID 81375

	CID 81373

	CID 81370

	CID 81363

	CID 81362

	CID 81361

	CID 81360

	CID 81359

2015-09-10  James Gallagher  <jgallagher@opendap.org>

	Updated files for the release of 3.15

2015-09-09  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' into parallel_io

	An error introduced in March has been fixed; Freeform tests now pass
	Commit 6b005387 introduced a change where set_read_p() no longer
	tested the state of the is_synthesized property. Before, if the property
	was set the method would not change the state of is_read. The change
	made it so the is_read propery was changed regardless of the state of
	is_synthesized. This broke the 'projection functions' in the FreeForm
	handler. I have reverted to the old libdap behavior, and the tests now
	pass.

2015-09-04  James Gallagher  <jgallagher@opendap.org>

	Removed the old serialize_no_release() method

2015-09-02  James Gallagher  <jgallagher@opendap.org>

	Now has a special class for RAII on the lock in the child thread.

2015-08-31  James Gallagher  <jgallagher@opendap.org>

	Cleaned out more dead code from Vector.cc

2015-08-28  James Gallagher  <jgallagher@opendap.org>

	Updated the versio number to 3.15
	This because of the parallel IO code and pipelining support.

	Removed old code from MarshallerThread refactor.

	Moved the pthread code from XDRStreamMarshaller
	It's now in MarshallerThread and used by XDRStreamMarshaller via the
	'pointer to an implementation' pattern. This means that the pthread.h,
	which configure looks for but may not find, is not included in XDR-
	StreamMarshaller's header anymore.

2015-08-27  James Gallagher  <jgallagher@opendap.org>

	Added support for put_vector_part() to D4StreamMarshaller

	Refactor: CLEAR_LOCAL_DATA and USE_POSIX_THREADS
	We found that we could call clear_local_data() right after variables
	were serialized and get a much flatter memory profile. However, putting
	those calls in serialize() changed its behavior. I've moved them to
	bes/dap/ResponseBuilder - but that is controllable using a comple-time
	directive. Similarly, the compile-time switch USE_POSIX_THREADS
	can be used to turn off that feature (#undef). See XDRStreamMarshaller.

	Refactor: Parallel I/O methods
	I refactored the three new parallel I/O methods back into the matching
	put_vector() methods of the same/similar names. This cuts down on the
	naming mess and means that other classes like XDFFileStream don't have
	to include hacked methods that throw exceptions. This commit also
	includes changes tha wrap the clear_local_data() calls in #ifdef
	CLEAR_LOCAL_DATA. Lastly, this refactor will also require a matching
	edit to ncml_module.

2015-08-24  James Gallagher  <jgallagher@opendap.org>

	Patch/fix/hack for XDRStreamMarshaller
	This class' header requires pthread.h but that makes for issues since
	we cannot put an include of config.h in a .h file that is installed.
	To get on with testing, I'm checking in this version that just includes
	it; later on I may modify the class to encapsulate the pthreads stuff.

	Fix for clear_local_data() race condition
	Took advantage of the current XDRStreamMarshaller impl that copies
	data before writing it out. This means our code can delete the original
	data held by the object right after the thread used to send that data
	hass been called (actually, it could delete it _before_ starting the
	thread, but doing so afterward keeps that feature out of the marshaller
	class, which may come in handly later on...). Later on we may switch
	to reference counted pointers and then this issue will go away.

	Removed call to clear_local_data() in Vector::Serialize()
	This was colliding with the call to clear_local_data() in the thread
	when put_vector_thread() was called. This showed up as a 'sometimes'
	failure of expr test #21. The bug happens only when serializing an
	array of strucutre that contains arrays.

2015-08-22  James Gallagher  <jgallagher@opendap.org>

	Corrected a spelling mistake with 'serialize_no_release'

	I've added synchronization code to the XDRStreamMarshaller dotr
	This causes the XDRStreamMarshaller dtor to block on the d_out_mutex
	until the child thread (possibly) writing to the output stream
	completes.

2015-08-21  James Gallagher  <jgallagher@opendap.org>

	Added parallel_io to the set of branches Travis will build.

	Now threads in XDRStreamMarshaller are created detached state

	Added the new put_vector_thread methods to Marshaller
	I made them have a default implementation so that child classes
	won't break. I'm not sure if that's the best way to go...
	Also dropped the new *_thread() methods into Vector::serialize(),
	but they don't work so those are turned off by using #undef
	USE_POSIX_THREADS

	Parallel I/O for vector data maybe working
	I have coded put_vector_thread() and put_vector_part_thread() and
	they are passing unit tests.

2015-08-18  James Gallagher  <jgallagher@opendap.org>

	Removed some of the TODOs in libdap
	[ci skip]

2015-08-17  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4

	Modified Vector::get_buf() so it can be used in the ncml handler

2015-08-17  Nathan Potter  <ndp@opendap.org>

	Merged the new (template-less) version of Vector inot master branch

2015-08-17  James Gallagher  <jgallagher@opendap.org>

	Completed DAP2 put_vector_part() and associated methods.

2015-08-14  Nathan Potter  <ndp@opendap.org>

	Typo

2015-08-14  James Gallagher  <jgallagher@opendap.org>

	Partial Vector/Array serialization partly working!
	Must still implement the parts for Arrays of int16, ..., types;
	only byte arrays work now.

	Checkpoint: Adding methods to allow serailization of Vectors in parts.
	Missing methods in D4StreamMarshaller, XDRFileMarsahller and parts of
	methods in XDRStreamMarshaller.

	Added three protected accessors to Vector
	These provide access to the underlying data held in a Vector/Array
	and are accessible to descendant classes only.

2015-08-14  Nathan Potter  <ndp@opendap.org>

	Replaced template methods in Vector.cc with more pedantic implmentations. Made the templted methods private and used them in the implementations of the new pedantic methods.

2015-08-10  James Gallagher  <jgallagher@opendap.org>

	Bumped up the version number to 3.14.2

	Bumped up the version (and SO numbers). This is 3.14.2

	Merge branch 'serialize_n_release'

	Added a serialize_no_release() method
	This rounds out the serialize_n_release branch. The new behavior of
	freeing the dynamic memory is very desireable, so it's the default,
	but if some code wants to serialize, do something else and then delete
	the storage, the new serialize_no_release provides that option. All
	of our libdap and bes/module tests pass. This will be merged to the
	master branch once the latter has been tagged.

2015-08-07  James Gallagher  <jgallagher@opendap.org>

	Fixed overwriting commit for Vector::serialize()
	We decided to make the serialize and release code real, but in the
	process that collided with changes to BaseType::name() (making it
	a virtual method). One line was broken, but since it was the call to
	clear_local_data() in Vector::serialize(), it was an important line!

2015-08-06  James Gallagher  <jgallagher@opendap.org>

	distcheck works locally

	Fix for distcheck and getdapTest

	make check now supports parallel execution
	Modified test/Makefile.am so that autotest parallel tests work. Run
	make check with TESTSUITEFLAGS=-jN

2015-08-05  Nathan Potter  <ndp@opendap.org>

	pulled from github and merged conflicts

	Refactored use of the name() method in BaseType so that it is now overrideable

2015-08-05  James Gallagher  <jgallagher@opendap.org>

	Added BaseType::clear_local_data()
	The clear_local_data() method is used to free just the parts of a
	BaseType (child of, really) that hold large amounts of data. It applies
	to only a handful of the variable types (Vector, Sequence, D4Opaque and
	D4Sequence). It is used to free memory right after data values are
	sent to the client using serailize(). This means that data are no longer
	held by the variable objects once serialize() returns - at least for
	Array, Sequence, ... Other types like Byte, Int16, ..., will retain
	their values because those values are not held in dynamically allocated
	storage.

2015-08-04  James Gallagher  <jgallagher@opendap.org>

	Hacked the marshT unit-test
	I modified this so that it no longer relies on data being present after
	serialize() has been called. It seems that none of the handlers use
	this 'feature' and we can change the code so that memory is freed right
	after the bits are sent fir each variable. This means that only one
	variabe's data are in memory at any given time.

2015-08-03  Nathan Potter  <ndp@opendap.org>

	Checking in change to _always_ release array memory after serialization. This causes the Marshaller test for Structure to seg fault.

2015-07-15  James Gallagher  <jgallagher@opendap.org>

	Removed the bisong version print out
	...I think this is working fine now
	[ci skip]

2015-07-13  James Gallagher  <jgallagher@opendap.org>

	Added distcheck to travis

	travis caching
	Modified travis.yml and install_libdap4_source_deps.sh so that
	the bison source build is cached.

	Another fix: added '/bin' to $HOME/bison in $PATH

	Removed odd ^S from install_libdap4_source_deps.sh

	More travis hacks - addes sudo: false back in; remove tabs

	travis: The build was not triggered with the last push...
	... so try removing 'sudo: false'

	Switched travis to use docker/containers

2015-07-09  James Gallagher  <jgallagher@opendap.org>

	Added .NOTPARALLEL: back to the C++ parser Makefile.am files
	We need this because stack.hh, ..., are built in one shot by
	bison.

	Updated the library version

	Grammar fixes - for flex and its C++ scanner code.
	There is a conflict between the defined return type of
	FlexLexer::LexerInput. Some versions of flex define that
	method as returning an int and some a returning a size_t.
	Including generated code using one will break when a build
	machine uses the other. I used dist-hook to just 'rm' those
	generated lex.*.cc files  from d4_ce and d4_function - the
	other generated scanners are OK. This is really a work-around
	since we should be able to include the generated scanners
	and then drop the build requirement for both bison and flex.

2015-07-07  James Gallagher  <jgallagher@opendap.org>

	Added absolute-header-m4 and removed .gitignore
	I think the .gitignore is from the gnulib source
	and is fine for their git repo, but not for clients
	of the library.

	Changed the tag for non-master travis builds to _travis
	... from -travis. Minor, but it bugged me.

	Modified travis.yml so that branches ending in -travis will be built.

	Updated gnulib code - this may affect the coverity results

2015-07-02  James Gallagher  <jgallagher@opendap.org>

	Coverity fix in dds.yy
	Fixed a potential leak where storage allocated is overwritten.
	An unlikely bug, but not a big deal to fix.

	Issues found using coverity fixed

2015-06-29  James Gallagher  <jgallagher@opendap.org>

	Fixed cppunit package for travis.yml

	Fixed a memory leak in dds.y

2015-06-26  James Gallagher  <jgallagher@opendap.org>

	Minor syntax error in TestArray; Travis now includes cppunit tests

	Memory leak in TestArray.cc plugged

	More changes WRT coverity and travis
	...in the travis.yml. Removed the before_build_command
	stuff from the coverity scan addon section since it seems
	to be redundant.

	Added coverity scan to travis CI

2015-06-25  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4.git

	Issues found in D4ParserSax2, DAS and DDS using Coverity.

2015-06-20  James Gallagher  <jgallagher@opendap.org>

	Finally fixed...?
	Using autoconf 2.69 make dist is building a tar-gz that includes the
	BUILT_SOURCES, which would be great for builders without bison 3. I'm
	not sure if that will work with autoconf 2.63.

	Move the D4 Function parser to its own directory.
	This is an attempt to really fix the stack, position and location.hh
	problem for once and for all. The Travis build is working, but maybe
	we're just lucky because a build from the tar.gz made using make dist
	was still failing.

2015-06-19  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4.git

2015-06-19  Ubuntu  <ubuntu@ip-172-31-34-168.ec2.internal>

	Modified build-deb-pkg.sh so that dap-config matches the installed files.

2015-06-19  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4.git

	Try using NOTPARALLEL with the libdap build - another travis hack.

2015-06-19  Ubuntu  <ubuntu@ip-172-31-34-168.ec2.internal>

	Modified DEBIAN/control to use libcurl4-openssl-dev as a dependency.
	Not sure why this was not working before.
	[ci skip]

	Merge branch 'master' of https://github.com/opendap/libdap4

	Added hackery script to DEBIAN directory.
	This will help with my simple deb file used for the bes build.

2015-06-18  James Gallagher  <jgallagher@opendap.org>

	Modified Makefile.am and d4_ce/... so bison is called only once
	This should stop the semi-random build fails for libdap4 on Travis
	and for other people.

	Added .NOTPARALLEL to d4_ce/Makefile.am for the grammar files
	I hope this fixes the odd issue with the generated grammar files
	breaking hte build in a random fashion. The error may be do to parallel
	builds running bison several times for each of the generated files, all
	at the same time.

	Cleaned up the d4_ce code
	The Makefile.am had leftover parts from the attempt to make the build
	work when bison 3 was not present. That may have been the cause of the
	seemingly random build errors I see on Travis CI

2015-06-17  James Gallagher  <jgallagher@opendap.org>

	Added dpkg -l to travis.yml
	This is part of debugging the bes travis build - I cannot seem to sort
	out the libcurl dependency since my Ubuntu AMI is a 14.x but the build
	is using 12.x

	travis bison hack...

2015-06-17  Ubuntu  <ubuntu@ip-172-31-34-168.ec2.internal>

	Merge branch 'master' of https://github.com/opendap/libdap4

	Changed DEBIAN/control arch to amd64

2015-06-17  James Gallagher  <jgallagher@opendap.org>

	travis.yml edits
	Now uses deploy section only for tagged pushes; removed unneeded
	--force-yes with apt-get; and will build tags in addition to the
	master branch.

	Fixed build-deb-pkg.sh and added 'deploy' section to travis.
	Not sure about the deploy bit...

2015-06-16  James Gallagher  <jgallagher@opendap.org>

	Use newly built bison 3
	Added /usr/local/bin to PATH...

	Build bison from source (circling back)
	Travis-CI is currently using ubuntu 12 which using bison 2; Ubuntu 14
	has bison 3 in its package system.

	More tweaks to the simple deb package build
	This is a deb package for use with travis-ci when we get a bes CI
	build working

	Added debian package build to travis.yml
	...also tried using --force-yes to get bison to load with apt-get
	[ci skip]

2015-06-16  Ubuntu  <ubuntu@ip-172-31-34-168.ec2.internal>

	Added the build-deb-pkg.sh script.

	Added DEBIAN/control
	Use this along with dpkg-deb --build libdap_<version> to make a
	debian package.

2015-06-16  James Gallagher  <jgallagher@opendap.org>

	Another change to the travis.yml file
	It now uses bison installed using apt-get

2015-06-08  James Gallagher  <jgallagher@opendap.org>

	travis-ci error fixed
	I left --prefix=... on the configure of bison but $prefix's definition
	was moved to a later step.

	Reorganization of the travis.yml script.

2015-06-07  James Gallagher  <jgallagher@opendap.org>

	clang...

	...another try at clang support

	...another try at clang

2015-06-06  James Gallagher  <jgallagher@opendap.org>

	minor tweak to 'make install' with sudo -i

	fix for clang

	more travis ci changes - learning what this can do...

	Added some package installs to travis ci

	travis ci fix

	travis ci: added install of libdap

	travis ci change: install bison 3 using sudo

2015-06-05  James Gallagher  <jgallagher@opendap.org>

	Travis CI updates

	Added an initial .travis.yml file

2015-06-01  James Gallagher  <jgallagher@opendap.org>

	Added DBG2N - no line number version of DBG2

2015-05-24  James Gallagher  <jgallagher@opendap.org>

	Fixed comment

2015-05-23  James Gallagher  <jgallagher@opendap.org>

	D4FilterClause fixes

	Formatting and ctor warnings fixed

	Added D4FilterClause unit test
	... and removed ancient dejagnu tests

2015-05-14  James Gallagher  <jgallagher@opendap.org>

	Added a new function to make a temp file using mkstemps()
	This new function returns the temp file's name and a C++ fstream
	object that is opened to the temp file. This change adds to the
	libdap API.

2015-05-12  James Gallagher  <jgallagher@opendap.org>

	Fixed missing <string> include. Patch from O. Poplawski.

	Fix getopt() use. Patch from O. Poplawski

	Broke --enable-developer; now fixed.

	Fixed issues in configure and Makefiles reported by O. Poplawski.
	--enable-coverage and --enable-valgrind were broken.
	Setting CXXFLAGS to nothing broke builds on fedroa 21

	Added coverage file to gitignore

2015-05-01  James Gallagher  <jgallagher@opendap.org>

	Formatting, old code removeal, doxygen updates

2015-04-05  James Gallagher  <jgallagher@opendap.org>

	Bison 3 is required for the build.
	This might change, but for the next release (April 2015) it is a
	requirement for building the code. It will be possible to get the
	devel rpm and, however, and develop code that uses libdap w/o
	needing bison 3.

2015-04-03  James Gallagher  <jgallagher@opendap.org>

	Bumped up the library versions
	Each of libdap, libdapclient and libdapsever likely have new interfaces
	but the old interfaces are intact, so CURRENT and AGE are increased,
	and REVISION is reset to 0.

	Various changes as needed for the release.

2015-03-31  James Gallagher  <jgallagher@opendap.org>

	Added to gitignore

	Hacked more for the FlexLexer.h kludge...

	Resurrected the D4*Scanner.h files

	Modified the FlexLexer.h scheme
	Now it fits more with the way I'm handling the other generated
	files. The header is in the generated files dir and is only
	copied out when bison 3 is not found. It's still a kludge...

	Added FlexLexer.h
	This might be a mistake - remove if this fails on linux, etc.

2015-03-30  James Gallagher  <jgallagher@opendap.org>

	Rest of changes for template grammar files
	Now if bison 3.0+ is not found, the build will use
	template versions of the generated grammar files. This
	removes the dependence on bison 3.0 for most source
	builds. Of course, if you want to modify the D4 grammar
	you need bison 3.

	Added generated grammar sources
	When a machine does not have bison 3, it's a pain to install it, esp.
	at a site that doesn't let the builder do that! The work-around is to
	provide a backup set of sources that can be copied by the Makefile in
	lieu of the real thing.

2015-03-25  James Gallagher  <jgallagher@opendap.org>

	Added support 'match' to D4FilterClause

	Added commentary and some English fixes
	...to Operators.h and RValue

	Added D4FilterClause.
	This will be used to evaluate the DAP4 filter expressions.
	...in progress.

	Merge branch 'master' of https://github.com/opendap/libdap4

	Dropped the autoconf required version to 2.63
	This accommodates RH/CentOS 6. I also had to change the AT_ARG_OPTION_ARG
	calls so that multi-word options used underscores and not dashes.

	Change to libdap.spec
	I've added the dist info to the RPM and fixed up some of the
	description, too.

2015-03-20  James Gallagher  <jgallagher@opendap.org>

	Started implementing DAP4 filters

2015-03-17  James Gallagher  <jgallagher@opendap.org>

	Edited comments and reformatted.
	Also added a new method to Sequence that I subsequently removed
	from the code using the preprocessor. ...it might come in handy
	some day.

	Refactored TestCommon
	Now TestCommon.cc is not used; the constructors, etc. are now
	in TestCommon.h. In the future this class could be modified so
	that the 'series_values' property was accessible from TestCommon
	and not just the individual type classes.

	Change a comment emmited by configure less convoluted.

2015-03-16  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4

	Changes to build and to the Test* classes.
	Now configure tests for the uuid/uuid.h header (before it tested only
	for the library which meant that installing the libuuid package and
	not the needed libuuid-devel package would pass configure but fail
	during the build). I also removed some unused code from the Test* classes.
	The TestCommon.cc file was not needed.

	rpm target fixes
	Added getdap4 to the files list for RPM and fixed distclean/distcheck
	where some DMR tests are marked xfail (expected fail). With autotest,
	xfail leaves some cruft behind in the DMRTest.dir directory that
	./DMRTest --clean should remove (see the clean-local makefile target).
	However, because a space was added to the names in the Makefile.am,
	those --clean calls were not being made. Fixed. Somewhat exasperating...

2015-02-27  James Gallagher  <jgallagher@opendap.org>

	Merge branch 'master' of https://github.com/opendap/libdap4

2015-02-26  James Gallagher  <jgallagher@opendap.org>

	Added convenience function to util
	The new function extracts doubles from numeric arrays using a vector
	to cu down on memory management complexity (at the cost of an addition
	to the interface).

2015-02-21  James Gallagher  <jgallagher@opendap.org>

	Fixed GetOpt.cc includes
	This code used old includes (string.h, etc.) and was missing
	stdio. I added <cstdio> and changed stdlib.h and string.h to
	cstdlib and cstring. Removed a duplicate header. Build now works
	on AWS Centos 6.

2015-02-19  James Gallagher  <jgallagher@opendap.org>

	More Cleanup
	I re-indented TestSequence and removed some old code
	as part of my work on the aggregation server (which
	may not make it into the BES, another story...)

	Cleanup
	I removed unused code from Sequence, DDS.cc and AttrTable.cc

2015-02-09  James Gallagher  <jgallagher@opendap.org>

	Tweaked D4Sequence for BES function's tabular()
	The d_length field is now set when set_values()
	is called.

2015-02-02  James Gallagher  <jgallagher@opendap.org>

	Removed incorrect comment in Vector.h

2015-01-14  James Gallagher  <jgallagher@opendap.org>

	Added a type_name() function to util.cc/h
	In the merge with DAP4, type_name() split into D2type_name() and
	D4type_name(). That removes the symbol 'type_name()' from the library.
	I added a function with that name that first tries to apply D4... and
	then D2. If both fail, an exception is thrown. This provides forward
	looking backward compatibility.

	Fixed an issue with String constant arguments to DAP4 functions.
	The function parser for DAP4 was including the double quotes that
	delimit string constants in the value itself. I modified the parser
	to eliminate those.

2015-01-07  James Gallagher  <jgallagher@opendap.org>

	HTTPCacheTest was failing; fixed.
	The test assumed that the number of headers for a cached response
	would equal the headers in a response. This might not be the case.
	For example, the received response might include a Keep-Alive header.

	Error in D4Maps copy ctor fixed.
	This addresses an error in the DMRTest.cc unit test for the DMR
	class. DMR's copy ctor was failing to copy the maps from Arrays
	in the src object to the dest object because of an error in the
	D4Maps m_duplicate method.

	Corrected some comment text in DMR.cc

2015-01-05  James Gallagher  <jgallagher@opendap.org>

	Minor changes to the Makefile.am files

2014-12-31  James Gallagher  <jgallagher@opendap.org>

	Merge remote-tracking branch 'origin/dap4'
	Conflicts:
		unit-tests/HTTPConnectTest.cc

2014-12-12  James Gallagher  <jgallagher@opendap.org>

	Added eclipse meta files to gitignore.

	Merge branch 'master' of https://github.com/opendap/libdap

	comment change in main_page.doxygen

2014-12-03  James Gallagher  <jgallagher@opendap.org>

	Added files  left over from a full build to gitignore

2014-11-19  James Gallagher  <jgallagher@opendap.org>

	Added .gitignore and hacked up Makefile.am so that it uses subdir-objects.

2014-10-21  James Gallagher  <jgallagher@opendap.org>

	Added a valgrind 'suppressions' file for OSX 10.9. Not sure where this is going, but valgrind for unit tests and regression tests is probably a good thing.

	Fixed to the Makefile.am in d4_ce so that the grammar for DAP4 builds correctly.

2014-10-20  James Gallagher  <jgallagher@opendap.org>

	Changed HTTPConnect.cc on the release branch and then copied here. Minor fix in the test baseline to accommadate a change in the test host (etag changed with a change in the Apache server version).
	M    unit-tests/HTTPConnectTest.cc

2014-10-16  James Gallagher  <jgallagher@opendap.org>

	Fixed ticket 2260 - The issue where the DMR copy ctor built a DMR that would subsequently cause a segfault has been fixed. The problem was in Array::update_dimension_pointers(). The D4Dimension objects were not copied correctly between the old and new set of D4Dimensions in the Groups in the source and dest DMRs

2014-10-14  James Gallagher  <jgallagher@opendap.org>

	Leak fix in the D4CE code - both the CE and Functions parser leaked memory - fixed. Tests HTTPCacheTest and HTTPConnectTest fixed - there were two issue with the new test.o2 server. Array.h - removed the D4Dimensions.h include.

	Bug fix in ServerFunction: The setFunction setters in ServerFunction were setting other function pointers to null so that the ServerFunction object could hold only one kind of function for any given name. If we want linear_scale, e.g., to work for both DAP2 and DAP4, the class has to be able to support a btp_func and D4Function. I fixed the ctors and setters so that works.

2014-09-17  James Gallagher  <jgallagher@opendap.org>

	Renamed the bison 'Driver' classes to be D4ConstraintEvaluator and D4FunctionEvaluator. Added an eval() method to the latter so that the BES can evaluation DAP4 Functions in a some sort of a sane way. I also moved the old and crufty D4ResponseBuilder code out of the libdap dir; there's a class with the same name in tests, but it does different (and more sane) things.

	Comments and changed template type from 't' to 'T'.

	Comments...

2014-09-12  James Gallagher  <jgallagher@opendap.org>

	Fixed FQN() for Constructors that hold arrays.

2014-09-11  James Gallagher  <jgallagher@opendap.org>

	I removed the DMR& parameter to BaseType::intern_data(). This seems to be a relic from DAP2 (where it may not have actually been used either) and it makes employing delegation somewhat harder in the 'transmitter' handlers I'm working on porting over to DAP4.

	Modified to use the new 'DMR-free' version of intern_data(). Also fixed the help message.

	Added a DMR that holds a nested sequence so this can be tested - currently does not work and is not part of the tests.

2014-09-08  James Gallagher  <jgallagher@opendap.org>

	Marked four tests a xfail. See ticket #2244
	M    tests/DMRTest.at

	I added specializations for transform_to_dap4() to TestStructure and TestSequence so that, among other things, the dapreader code can build DAP4 data responses using DAP2 response files.

2014-09-05  James Gallagher  <jgallagher@opendap.org>

	Fixed hiccup in Makefile.am that prevented the D4Connect.h header from being installed - it was not listed in pkginclude_HEADERS. Added subdir-objects to the options list in the Makefile.am too. Fixed an error message in getdap4 - text change only.

2014-09-04  James Gallagher  <jgallagher@opendap.org>

	Added a FQN() method that will return the FQN for any variable, including the group part. Also added a decent comment on the D4Group::find_var() method. Unit tests added to the D4GroupTest unit test.

2014-09-03  James Gallagher  <jgallagher@opendap.org>

	Removed duplicate code in Sequence and Structure for the transform_to_dap4() method; moved the common code to Constructor.

2014-08-27  James Gallagher  <jgallagher@opendap.org>

	Added an update of the weak pointers held by Array so that the DMR::m_duplicate() method can use D4Group::ptr_duplicate(). This was useful when porting the gdal_handler code to DAP4.

2014-08-21  James Gallagher  <jgallagher@opendap.org>

	Change to Constructor::serialize(). It now calls read(). This was removed because it broke the behavior of D4Sequence - at least in the test code (it still does). More work needs to be done on this, but the FreeForm handler, which builds sequences is working with D4Sequence (DMR/DAP4 Data via the DDS --> DMR hack). I will need to revisit this...

2014-08-19  James Gallagher  <jgallagher@opendap.org>

	Now has a separate method to 'blend in' variables from a DDS into the DMR. This is used by the DDS-ctor for DMR but it can also be called on an existing DMR like the ones built by the BES. This was done so that information set when the BES builds the DMR won't be lost.

	Changes to the transform_to_dap4() method - both Sequence and Structure have implementations that work for tests and clients, but not most servers. Array should be pretty general and may work for most handlers.

2014-08-18  James Gallagher  <jgallagher@opendap.org>

	Removed unused code - part of an aborted attempt to add a factory class as a param to BaseType::transform_to_dap4(...). Instead, it's likely better to subclass that method in the types like FFSequence (in the handlers). In the process I found a fair amount of old code that was commented out and removed it.

2014-08-15  James Gallagher  <jgallagher@opendap.org>

	Fixed an issue in Array where D4Dimensions made using the 'transform dap2 to dap4 code' with the same name but different sizes could be made. This was bad; I changed the code so that when a name conflict is found, the D4Dimension  will have a different name (made using the orig dimension name and the variable name). In this case, the fist D4Dimension gets to use the name exactly as it appears in the Array while the second D4Dimension gets a more cumbersome, but unique, name.

	Fixed the order of printing of attributes and variables for constructor types when working with DAP2 responses (i.e., the DDX). The order (attr; vars) is reversed in DAP4.

2014-08-14  James Gallagher  <jgallagher@opendap.org>

	Patch for getopt applied
	_M   .
	M    unit-tests/DDSTest.cc
	M    unit-tests/DDXParserTest.cc
	MM   unit-tests/SequenceTest.cc
	M    unit-tests/ServerFunctionsListUnitTest.cc

	Patch from Orion Poplawski to fix some of the getopt calls in the unit-tests
	M    unit-tests/DDSTest.cc
	M    unit-tests/DDXParserTest.cc
	M    unit-tests/SequenceTest.cc
	M    unit-tests/ServerFunctionsListUnitTest.cc

2014-08-11  James Gallagher  <jgallagher@opendap.org>

	Changes from H 1.9.9 on the trunk

2014-08-09  James Gallagher  <jgallagher@opendap.org>

	Merge from the trunk to include changes for Hyrax 1.9.9
	_M   .
	M    RValue.cc
	M    XMLWriter.h
	M    configure.ac
	M    ChangeLog
	M    main_page.doxygen
	M    INSTALL
	M    libdap.spec
	M    README
	M    Makefile.am
	M    NEWS
	M    ce_expr.yy
	M    unit-tests/HTTPConnectTest.cc
	M    doxy.conf

2014-08-08  James Gallagher  <jgallagher@opendap.org>

	Version 3.13.3
	M    ChangeLog
	M    INSTALL
	M    NEWS
	M    README
	M    configure.ac
	M    doxy.conf
	M    libdap.spec
	M    main_page.doxygen

	Fixed a leak in RValue.cc using a patch from Aron (ADB)

2014-08-01  James Gallagher  <jgallagher@opendap.org>

	Release checklist steps for 3.13.2
	M    ChangeLog
	M    INSTALL
	M    NEWS
	M    README
	M    configure.ac
	M    doxy.conf
	M    libdap.spec
	M    main_page.doxygen

2014-07-30  James Gallagher  <jgallagher@opendap.org>

	Second fix for ticket 2240 - SCAN_STR from the CE scanner was leaking because the parser did not delete the reutrned string. I also modified the first fix so that a local tmp string was used instead of new dynamic storage.
	M    ce_expr.yy

	Fixed a memory leak reported by Aron.Bartle@mechdyne.com. See ticket 2240.
	M    ce_expr.yy

	I added a comment about a potential memory leak to ce_expr.yy

2014-05-07  James Gallagher  <jgallagher@opendap.org>

	spelling

	Fixed a test baseline in HTTPConnectTest so that it will work with the new headers returned by H 1.9.3 (which include so things from DAP4).

2014-05-05  James Gallagher  <jgallagher@opendap.org>

	namespace libdap addex
	M    XMLWriter.h

2014-05-02  James Gallagher  <jgallagher@opendap.org>

	Minor edit to Makefile.am for builds on centos 5 - there libgl builds a copy of unistd.h that doesn't work with flex generated cc files. So I pulled -I./gl from CPP flags for the parsers library.

	Merged code from the trunk - this effectively merges changes from the Hyrax 1.9.3 release.

2014-04-22  James Gallagher  <jgallagher@opendap.org>

	Updated for 3.13
	M    INSTALL
	M    README
	M    configure.ac

2014-04-15  James Gallagher  <jgallagher@opendap.org>

	Updates to NEWS, ChangeLog to match the bump in the vesion number.

2014-04-11  James Gallagher  <jgallagher@opendap.org>

	Added comment info to abi_checker.xml.in so we'll remember how to use the abi checker.

	path fix/typo

	Added abi_checker.xml.in file for the perl-based abi checker. Seems to work only with gcc.

2014-03-29  James Gallagher  <jgallagher@opendap.org>

	typo...

	Unified the DMR() constructors so they all initialize the fields in essentially the same way.

2014-03-28  James Gallagher  <jgallagher@opendap.org>

	Fixed forward declarations in the D4 parser code.

2014-03-26  James Gallagher  <jgallagher@opendap.org>

2014-03-24  James Gallagher  <jgallagher@opendap.org>

	Commentary

2014-03-22  James Gallagher  <jgallagher@opendap.org>

	Removed the const iterator methods from DDS since they broke gcc on OSX 10.7.

	DDS --> DMR Grid working and tested.

2014-03-21  James Gallagher  <jgallagher@opendap.org>

	More changes for Grid in the DDS --> DMR code. It's not quite working, but the other types work. One test fails.

	Starting on Grid for the DDS to DMR code...

2014-03-20  James Gallagher  <jgallagher@opendap.org>

	more DDS --> DMR tests

	DDS --> DMR attribute merge/transform tests added.

2014-03-19  James Gallagher  <jgallagher@opendap.org>

	DDS --> DMR: Attribute transform method added to D4Attributes and wired up the BaseType::transform_to_dap4(). Not tested.

	DDS --> DMR; everything works except Grid and Attributes.

	DDS --> DMR: Datasets with Structures now work. Tested.

	commentary

2014-03-18  James Gallagher  <jgallagher@opendap.org>

	Changed the transform_to_dap4() method so that it will work with constructor types. Not implemented yet for them, however.

	Two tests for the DDS to DMR code.

	Little bit of the DDS --> DMR solution. No tests.

	Initial fix for shared dimensions and Enumerations in function results - this code (in dmr-test.cc) depends on the original DMR remaining intact until the function result is serialized. To fix this, either change how D4Dimension and D4EnumDef objects are stored or use reference counted pointers.

2014-03-17  James Gallagher  <jgallagher@opendap.org>

	Added

	Added all the $<type> special forms for the DAP4 numeric types along with tests to the DAP4 Function expression parser.

2014-03-14  James Gallagher  <jgallagher@opendap.org>

	The $<type> special form works and the argument length 'hint' optimization is working too. I made a template function that will shorten the rules in the parser so that each kind of simple type can be used with this ($Byte, $Int16, ...) but only implemented $Byte. Added a test.

2014-03-14  Nathan Potter  <ndp@opendap.org>

	libdap: Renaming intenral variables to clearly indicate when things are using DAP2 ce's and DAP4 ce's

	libdap: Renaming intenral variables to clearly indicate when things are using DAP2 ce's and DAP4 ce's

	libdap: Renaming intenral variables to clearly indicate when things are using DAP2 ce's and DAP4 ce's

	libdap: Renaming intenral variables to clearly indicate when things are using DAP2 ce's and DAP4 ce's

2014-03-14  James Gallagher  <jgallagher@opendap.org>

	Need to include both the .cc and .hh files for the parsers in the Makefile.am

	Added

	Initial version of the function parser with $<type> special forms (untested). The code compiles and passes existing tests.

2014-03-13  James Gallagher  <jgallagher@opendap.org>

	Marked some tests as xfail - because the function evaluation code does not deal with names dimensions correctly.

	more tests for server functions; composition is working

	Function parsing and evaluation working; initial set of tests added.

2014-03-12  James Gallagher  <jgallagher@opendap.org>

	Starting on function evaluation.

	Added a DAP4 server function - modified TestFunction to make D4TestFunction that includes both a DAP2 and DAP4 scale() function. The parser recognizes this function and seems to work. Not quite ready for a complete set of tests yet...

	initial cut of the tests for function parsing - it can figure out that a function has not been registered.

	Added initial tests for the Function parser; reorganized the CE parser tests in dmr-test.cc

2014-03-12  Nathan Potter  <ndp@opendap.org>

	lobdap: Fixed compile issue

2014-03-12  James Gallagher  <jgallagher@opendap.org>

	Added...

	Working on tests for the D4 function parser... Removed use of ConstraintEvaluator in intern_data() and other places for DAP4.

2014-03-11  James Gallagher  <jgallagher@opendap.org>

	First cut at the DAP4 function parser

	new stuff added for DAP4 functions and the parsing of the same

	Removed unneeded includes; switched to forward class declarations; cleaned up the namespace std stuff (this is a header file so it should not contain 'using namespace std').

	Removed unneeded includes; switched to forward class declarations; cleaned up the namespace std stuff (this is a header file so it should not contain 'using namespace std').

	Removed unneeded includes; switched to forward class declarations; cleaned up the namespace std stuff (this is a header file so it should not contain 'using namespace std').

	Added namespace std:: stuff to the RValue.h file to remove a 'using namespace std' line from a header. Made sure the header did not depend on other code's #includes.

	Added support for the D4Function typedef and DAP4 functions in the ServerFunctionsList class and friends.

2014-03-07  James Gallagher  <jgallagher@opendap.org>

	Merged the trunk code to the dap4 branch

	Removed cruft from HTTPResponse.h

2014-03-05  Nathan Potter  <ndp@opendap.org>

	libdap: Added stylesheet support to D4AsyncUtil along with associated tests

2014-02-28  Nathan Potter  <ndp@opendap.org>

	libdap: Incremental ci for team sync

2014-02-19  Nathan Potter  <ndp@opendap.org>

	libdap: Added D4AsyncUtil (xml document generation)  and DapXmlNamespaces classes. Unit tests for former.

2014-02-05  James Gallagher  <jgallagher@opendap.org>

	Merged a tiny change to SequenceTest from the trunk

	Fixed the SequenceTest 'baseline' regex.
	M    unit-tests/SequenceTest.cc

2014-02-04  James Gallagher  <jgallagher@opendap.org>

	Merged with the trunk on 2/4/14

	Minor changes for OSX 10.9. Also, move tests/ResponseBuilder to D4ResponseBuilder so that the DAP2 function caching test code won't collide with it when I merge the trunk into this branch.

	Unit test updates after the OS upgrade from OSX 10.8 to 10.9. There seems to be an issue with the sizeof(std::string) and also with libxml2 and/or my code to read from a C++ stream and have libxml2 parse text/xml. For now I'm removing these tests... but will return to the libxml2 issue later (the sizeof(std::string) maybe a bad idea since that could be pretty variable between  libstdc++ versions - I might just drop that test).

2014-01-02  James Gallagher  <jgallagher@opendap.org>

	Added

	Added and/or corrected the creation date in the comments.

2013-12-31  James Gallagher  <jgallagher@opendap.org>

	Added test DMRs for/from the vol_1 spec from the CE chapter. (added more of them)

2013-12-30  James Gallagher  <jgallagher@opendap.org>

	Added test DMRs for/from the vol_1 spec from the CE chapter.

2013-12-27  James Gallagher  <jgallagher@opendap.org>

	Added test baseline

	Sequence arrays that hold arrays now work.

	collected hacks that were lost in the system restore made on 12/27/13

2013-12-23  James Gallagher  <jgallagher@opendap.org>

	Added tests for sequences that hold arrays and sequence arrays that hold arrays. Not all pass...

	Added tests for Sequences and arrays of sequences used with various CEs that project various things and/or slice the sequence array. Works. No filters yet.

	Structure arrays that hold arrays can now be constrained as can their fields. With tests.

	CEs that slice arrays that are fields of structures now work.

	Added a note about CEs like "a" when a is a strcuture that contains arrays. The array has to be 'marked' as such. The simple set_send_p code won't do.

	Structures with fields that are arrays now print using the DAP4 syntax

	Added. Simple structures that contain arrays are broken - their print rep is teh DAP2 print rep.

	Added. Structures of arrays that contain arrays segfault at this point.

2013-12-22  James Gallagher  <jgallagher@opendap.org>

	Added support for the 'fields' syntax where a structure s can have some/all of its fields projected using the suntax s{f1;f2;...}. This will provide a way to slice a structure array and  yet ask for a subset of its fields without a confusing syntax. Tests added too.

2013-12-21  James Gallagher  <jgallagher@opendap.org>

	Added test baseline for one of the new CE tests.

	Now shared dimensions are shown in a CDMR only if they are used by a projected (array) var.

2013-12-20  James Gallagher  <jgallagher@opendap.org>

	Structure field projection using the dot operator now works as does slicing of array of structure. Two tests fail; see #2041.

2013-12-08  James Gallagher  <jgallagher@opendap.org>

	Added 5 tests for array slicing CEs

	removed some cruft from the slicing/CE stuff for Arrays. Removed 'local_constriant' state from Array.

	Array and sdim slices now work. No tests.

2013-12-04  James Gallagher  <jgallagher@opendap.org>

	Added (partial) support for sdim slices; See Array::add_constraint() for what needs to be completed.

	Adding stuff to the CE Parser for DAP4 to handle shared dimension slices. ...in progress

2013-12-03  James Gallagher  <jgallagher@opendap.org>

	Added D4CEDriver::slice_dimension() to process shared dimension slices in the modified CE syntax we now have.

2013-12-02  James Gallagher  <jgallagher@opendap.org>

	libdap distcheck works now

	Fixed distcheck issue in d4_ce

	Updated baselines to accommodate new print order for dims, enums, ...

	Reordered the print order of DAP4 stuff in Groups, vars, arrays and Constructors to match what Dennis and I agreed on.

	Changed order of Groups' printing stuff (dims, etc.) and changed TestStr so that it does not change values unless 'series_values' is on.

	Added comment about stack/store BaseTypes and indexes as they are parsed

2013-11-29  James Gallagher  <jgallagher@opendap.org>

	Renamed testall to test_escaped_paths. Does not parse correctly.

	Enumerations are included in the CDMR only if they are used; media types are correct for the dods_data_ddx response (used for responnse caching); The D4 CE parser now clears the d_index vector before starting a new array slicing CE; added a test file (but not a test... see Trac) to check that the Enumerations really are being elided correctly.

	Fixed the content-description values (added dods_data_ddx back in since it's used for the response caching by the bes).

	Makefile,ams now make DMR xmls

	Compile libtest-types using -fPIC for linux now that it's used by a handler (dapreader

	Added include string.h to D4ParserSax2.h for memset on linux

2013-11-28  James Gallagher  <jgallagher@opendap.org>

	All tests work with the new install of D4CEDriver - the interface for the DAP4 CE parser.

	Added D4CEDrvier to the libdap headers that are installed; tweaked the local copy of ResponseBuilder so it more closely matches the code used by teh BES in DapResponseBuilder.

	fixes for AWS (ConetOS6) build

2013-11-27  James Gallagher  <jgallagher@opendap.org>

	Removed FlexLexer.h and hacked Makefile.am to clean the .hh files.
	D    d4_ce/FlexLexer.h
	M    d4_ce/Makefile.am

	initial version of code that suppresses shared dims in the CDMR when a 'local' slicing operator is applied to an array with shared dims. The Array's dims are demoted to anonymous dims.

	local slicing CEs work after a fashion...

	Dennis clarified the spec WRT chunk headers and modified his code. I changed mine back to 1 in bit 2 of the MSB means Little Endian byte order. It all works.

2013-11-26  James Gallagher  <jgallagher@opendap.org>

	Changed the chunked encoding so that bit 2 of the MSB of the chunk is set to indicate big endian hosts. Easy to swap back in the 'set if little endian' logic. Also added code to D4CEDriver to set CEs for Arrays. The serialization of values works but the CDMR is hosed when the Array has shared Dimensions.

	Added basic error response for the case where a variable was not found in the data set.

2013-11-25  James Gallagher  <jgallagher@opendap.org>

	Added mark_variable() method to D4CEDriver; this can be used to shorten the action section of the other projection rules RHS.

	Removed lame ctor from D4CEDriver: only pass an expression in via the parse() method. For the offending ctor, the expression was ignored. There was no need for the extra ctor.

	fixed minor issue with dmr-test: received DMRs should not be printed with 'constrained' set.

	Fixed teh DAP4 CE parser - simple projections now work.

	cleaning up...

	Added -c option to dmr-test - CE evaluation is not yet working.

	dmr-test linked to D4CEDriver - not tested yet

	Integrated d4_ce parsers to the libdap build

	removed @todo comment in chunked_istream.cc

	Added a bytes_in_buffer() method to chunked_istream. This can be used with read_next_chunk to gobble up the remain bytes in the buffer before they are dumped by the read next call.

	chunked io code passes tests.

	checkpoint - more chunkied I/O hacks. Now the byte order flag from only the first chunk is used. The flag is set in all the chunks by the sender.

2013-11-24  James Gallagher  <jgallagher@opendap.org>

	checkpoint - adopting the 'byte order in chunk header' version of the chunked protocol.

2013-11-22  James Gallagher  <jgallagher@opendap.org>

	spelling

	hacked tests and baselines so that the DMR Value element will be parsed (was value - lowercase 'v').

	Fixed value --> Value inthe XML
	M    unit-tests/D4-xml/D4Attributes_1.xml
	M    unit-tests/D4-xml/D4Attributes_2.xml
	M    unit-tests/D4-xml/D4Attributes_3.xml
	M    unit-tests/D4-xml/D4Attributes_assignment.xml
	M    unit-tests/D4-xml/D4Attributes_assignment_2.xml
	M    unit-tests/D4-xml/D4Attributes_copy_ctor.xml
	M    unit-tests/D4-xml/D4Attributes_values_1.xml
	M    unit-tests/D4-xml/D4Group_everything.xml
	M    unit-tests/D4-xml/D4Group_named_with_scalars_and_stuff.xml
	M    unit-tests/D4-xml/D4Group_with_scalars_and_stuff.xml
	M    unit-tests/D4-xml/DMR_0.1.xml
	M    unit-tests/D4-xml/DMR_0.1_baseline.xml
	M    unit-tests/D4-xml/DMR_0.xml
	M    unit-tests/D4-xml/DMR_0_baseline.xml
	M    unit-tests/D4-xml/DMR_1.xml
	M    unit-tests/D4-xml/DMR_2.1.xml
	M    unit-tests/D4-xml/DMR_2.xml
	M    unit-tests/D4-xml/DMR_3.1.xml
	M    unit-tests/D4-xml/DMR_3.1_baseline.xml
	M    unit-tests/D4-xml/DMR_3.2.xml
	M    unit-tests/D4-xml/DMR_3.3.xml
	M    unit-tests/D4-xml/DMR_3.3_baseline.xml
	M    unit-tests/D4-xml/DMR_3.xml
	M    unit-tests/D4-xml/DMR_4.xml
	M    unit-tests/D4-xml/DMR_5.1.xml
	M    unit-tests/D4-xml/DMR_5.1_baseline.xml
	M    unit-tests/D4-xml/DMR_5.xml
	M    unit-tests/D4-xml/DMR_6.1.xml
	M    unit-tests/D4-xml/DMR_6.1_baseline.xml
	M    unit-tests/D4-xml/DMR_6.2.xml
	M    unit-tests/D4-xml/DMR_6.2_baseline.xml
	M    unit-tests/D4-xml/DMR_6.xml
	M    unit-tests/D4-xml/DMR_7.1.xml
	M    unit-tests/D4-xml/DMR_7.2.xml
	M    unit-tests/D4-xml/DMR_7.3.xml
	M    unit-tests/D4-xml/DMR_7.4.xml
	M    unit-tests/D4-xml/DMR_7.5.xml
	M    unit-tests/D4-xml/DMR_7.xml
	M    unit-tests/D4-xml/DMR_8.xml

	value --> Value for the name of the element
	M    dmr-testsuite/test_array_1.xml.trans_base
	M    dmr-testsuite/test_array_10.xml
	M    dmr-testsuite/test_array_10.xml.trans_base
	M    dmr-testsuite/test_array_11.xml
	M    dmr-testsuite/test_array_11.xml.trans_base
	M    dmr-testsuite/test_array_2.xml.trans_base
	M    dmr-testsuite/test_array_3.xml.trans_base
	M    dmr-testsuite/test_array_4.xml.trans_base
	M    dmr-testsuite/test_array_5.xml.trans_base
	M    dmr-testsuite/test_array_6.xml.trans_base
	M    dmr-testsuite/test_array_7.xml.trans_base
	M    dmr-testsuite/test_array_8.xml.trans_base
	M    dmr-testsuite/test_simple_1.xml.trans_base
	M    dmr-testsuite/test_simple_10.xml.trans_base
	M    dmr-testsuite/test_simple_2.xml.trans_base
	M    dmr-testsuite/test_simple_3.xml.trans_base
	M    dmr-testsuite/test_simple_4.xml
	M    dmr-testsuite/test_simple_4.xml.baseline
	M    dmr-testsuite/test_simple_4.xml.send_base
	M    dmr-testsuite/test_simple_4.xml.trans_base
	M    dmr-testsuite/test_simple_5.xml.trans_base
	M    dmr-testsuite/test_simple_6.xml.trans_base
	M    dmr-testsuite/test_simple_7.xml.trans_base
	M    dmr-testsuite/test_simple_8.xml.trans_base
	M    dmr-testsuite/test_simple_9.1.xml.trans_base
	M    dmr-testsuite/test_simple_9.xml.trans_base

2013-11-19  James Gallagher  <jgallagher@opendap.org>

	checkpoint - adding the DAP4 parser. nascent...

2013-11-14  James Gallagher  <jgallagher@opendap.org>

	Removed some old, duplicate code

2013-11-13  James Gallagher  <jgallagher@opendap.org>

	UInt64 array bug fixed

	Tested Enum array support - Works. AUInt64 array test is failing, however.

	Tested Enum array support - Works. AUInt64 array test is failing, however.

	Added support for Arrays of Enum in TestArray.

	Modified Vector so that set_value()/value() can be used with enum arrays. Code has to be savvy about the Enum type, however. In the process, made these methods along with the value(indices, array) methods templates with explicit instantiation.

	checkpoint on the way to enum arrays

	Added a first crack at templated value() method for Vector.cc.

2013-11-12  James Gallagher  <jgallagher@opendap.org>

	Fixed issues in D4Connect related to media types; Added media_types.h; Added tests (pretty limited) for Char; Added parser support for arrays of Enum; added print_dap4() support for arrays of Enum (but the arrays still don't work, only the DMR stuff works).

	Added support for Char; other tests broke as I twidled code for the content type mess. Char untested.

2013-11-11  James Gallagher  <jgallagher@opendap.org>

	Minor fix for the DAP4 media types

2013-11-10  James Gallagher  <jgallagher@opendap.org>

	Client code looks for Content-Type; does not seem to be returned by the OLFS or there's an error in reading the CT header value from curl's internal goo.

	Added client support for the data response (D4Connect and getdap4).

2013-11-08  James Gallagher  <jgallagher@opendap.org>

	There appears to be no Content-Type or Content-Description header in the response document - I hacked D4Connect to decode a 'no type' response as a DMR when request_dmr() is called, for now.

	getdap4 reads DMRs from a server, builds binary DMR objects and prints them out.

	Fixed bug in getdap4 that prevented it from reading from stdin

2013-11-07  James Gallagher  <jgallagher@opendap.org>

	Repaired the mime types errors - now DDX is refferred to as 'dods-ddx' and 'dods-data-ddx' while the dap4 things are dap4-dmr and dap4-data. The multipart code is still in mime_util.cc since it's being used by the function value cache hack, but that could be changed to use the DAP4 responses.

2013-11-05  James Gallagher  <jgallagher@opendap.org>

	Minor formatting changes

2013-10-30  James Gallagher  <jgallagher@opendap.org>

	Errors fixed from machine at home. D4StreamUnMarshaller didn't include dods-datatypes.h; getdap4 call to usage() is ambiguous (not fixed).

2013-10-29  James Gallagher  <jgallagher@opendap.org>

	Get DMR from a file is broken; seg fault.

	Added (untested) support for reading a dmr from a file...

	Added a basic client to libdap for DAP4 - reads DAP4 data response documents from local files only at this point.

	Added a basic client to libdap for DAP4 - reads DAP4 data response documents from local files only at this point.

2013-10-28  James Gallagher  <jgallagher@opendap.org>

	Added new D4Connect class - a work in progress.

2013-10-25  James Gallagher  <jgallagher@opendap.org>

	svn:ignore update

	Added getdap test baseline

	Added a simple test for getdap and generally looked at different ways to write a DAP4 CLI client. Fixed some comment errors along the way...

2013-10-24  James Gallagher  <jgallagher@opendap.org>

	All tests now pass for array projections for server function arguments.

	tests pass for array projections in function arg lists

	Fixed an obscure bug in the test function - for the scalar case it was not reading the arg's value.

2013-10-23  James Gallagher  <jgallagher@opendap.org>

	missed one baseline for the function stuff...

	Added support for array subsetting (projection) in the argument list of a function. Tests need work and there's an issue when the function arg is a scalar not an array. Also, the intern_data() methods don't work, but this may be a larger issue with the hack to the function evaluation scheme added for 'grads syntax' support.

	Opaque arrays now work - they are stored using BaseType pointers (like the constructor types) instead of as a C array of vector<uint8_t>, so they are not optimized. Overhead will be high for large arrays of Opaque, but how often will that happen?

2013-10-22  James Gallagher  <jgallagher@opendap.org>

	D4Opaque::print_val() now works; tests added

	All tests pass - Enums in decent shape.

	Maps and Enums, when referenced should use FQNs. Now the DMR prints this way even though my parser tolerates relative names.

	Error baselines updated
	M    tests/dmr-testsuite/test_simple_3_error_3.xml.baseline
	M    tests/dmr-testsuite/test_simple_3_error_1.xml.baseline
	M    tests/dmr-testsuite/test_simple_3_error_2.xml.baseline

2013-10-21  James Gallagher  <jgallagher@opendap.org>

	More Enum fixes

	More enum tests

	Fix to checksum() for D4Enum - must use just the part of d_buf that matches the type in the enumeration definition.

	Test file added - Both Enum and Opaque need work to pass their tests.

	D4Enum seems to work - dmr-test returns valid stuff.

	Opaque minor fixes and tests added via D4ParserSAX2 unit tests

	Added TestOpaque

	D4Opaque added - no tests yet, but the code builds

2013-10-21  Joe Lee  <hyoklee@hdfgroup.org>

	fixed the bug #2016.

2013-10-21  James Gallagher  <jgallagher@opendap.org>

	Add D4Opaque... checkpoint; not working yet

2013-10-19  James Gallagher  <jgallagher@opendap.org>

	Added tests for Enum

	All tests pass - might look into D4Enum ctors and/or asserts to make sure that both the element type and enum def pointer are set before different kinds of operations. NB: The enum def is needed to print and for some value accesses, but not for reading/writing numeric values.

	Enums close to working - one test in D4AttributesTest fails

	Added test class for D4Enum and set the stage for building valid D4Enums in the DMR parser - it will have to find the matching Enumeration definition in an enclosing group and record that, along with the base type for the enum.

2013-10-18  James Gallagher  <jgallagher@opendap.org>

	Checkpoint - working on Enum's ctor

	Checkpoint - working on Enum's ctor

	Hyrax 1.9.1
	M    configure.ac
	M    ChangeLog
	M    main_page.doxygen
	M    INSTALL
	M    libdap.spec
	M    README
	M    NEWS
	M    doxy.conf

	svn:ignore

2013-10-17  James Gallagher  <jgallagher@opendap.org>

	Manually patched changes to Sequence::read_row and TestSequence::read() from the DAP4 development branch so they work with the newly modified handlers (the DAP4 branch uses _trunk_ copies of the handlers). We will have to document this change before releasing the code!
	M    tests/TestSequence.cc
	M    Sequence.cc

	Added to svn:ignore

	Enums now work (but not arrays of Enums). BaseType::width(bool = false) is now a const method and Array::width() is no more (it didn't do anything that Vector::width() didn't do with fewer lines of code).

	Added D4Maps::operator=()

2013-10-16  James Gallagher  <jgallagher@opendap.org>

	Added support for Map - in the parser, Array and in unit tests. Needs better semantic checks, but first those have to be clarified...

	Added to svn:ignore

	Linux (centos 6.4) changes
	M    chunked_istream.h
	M    chunked_ostream.cc
	M    tests/dmr-test.cc
	M    chunked_istream.cc
	M    unit-tests/chunked_iostream_test.cc
	M    unit-tests/D4ParserSax2Test.cc

	Added to svn:ignore

	Merge from the trunk; this mostly involves a massive-looking change that's really only an edit to the FSF address in the copyright block (and thus just about every cc or h file). But it's only an edit to a comment. Also, I updated the gnulib code because I thought there was an issue there WRT byteswap.h and the distcheck build. Not the case, but the update was not a bad idea all the same. Lastly, some issues crept into new unit-tests that broke distcheck and those have been resolved. The distcheck target now works.
	_M   .
	M    ServerFunctionsList.cc
	M    ServerFunctionsList.h
	M    RValue.cc
	M    DODSFilter.cc
	M    XMLWriter.h
	M    HTTPResponse.h
	M    D4Dimensions.cc
	M    Int32.h
	M    Int16.cc
	M    Structure.h
	M    gridfields_functions.h
	M    error-test.cc
	M    AISResources.cc
	M    Str.h
	M    Sequence.h
	M    SignalHandler.cc
	M    ResponseTooBigErr.cc
	M    SignalHandler.h
	M    ResponseTooBigErr.h
	M    configure.ac
	M    XDRUtils.h
	M    ResponseCache.h
	M    debug.h
	M    UInt64.cc
	M    XDRStreamUnMarshaller.h
	M    Connect.h
	M    escaping.h
	M    fdiostream.cc
	M    D4EnumDefs.h
	M    gridfields_functions.cc
	M    ResponseBuilder.h
	M    DAPCache3.cc
	M    DAPCache3.h
	M    D4ParserSax2.cc
	M    DDXExceptions.h
	M    VCPP/sample/getdap.cc
	M    Keywords2.cc
	M    Resource.h
	M    Error.cc
	M    HTTPCacheDisconnectedMode.h
	M    XMLWriter.cc
	M    UnMarshaller.h
	M    Response.h
	_M   conf
	M    conf/snippet/c++defs.h
	M    conf/snippet/warn-on-use.h
	M    conf/snippet/arg-nonnull.h
	A  + conf/config.rpath
	M    Int16.h
	M    SignalHandlerRegisteredErr.h
	M    ConstraintEvaluator.cc
	M    DAS.h
	M    XDRFileMarshaller.h
	M    DDS.cc
	M    HTTPCacheTable.cc
	M    HTTPCacheTable.h
	M    D4ParseError.h
	M    BaseType.h
	M    Array.cc
	M    tests/TestInt16.h
	M    tests/TestUrl.h
	M    tests/TestArray.cc
	M    tests/TestFloat64.cc
	M    tests/TestFloat64.h
	M    tests/das-test.cc
	M    tests/TestUInt32.cc
	M    tests/TestGrid.cc
	M    tests/TestUInt16.cc
	M    tests/TestCommon.h
	M    tests/TestByte.cc
	M    tests/TestByte.h
	M    tests/ResponseBuilder.h
	M    tests/TestTypeFactory.h
	M    tests/TestArray.h
	M    tests/TestUInt16.h
	M    tests/TestInt32.cc
	M    tests/TestInt16.cc
	M    tests/TestInt32.h
	M    tests/TestStructure.h
	M    tests/TestFloat32.cc
	M    tests/TestSequence.h
	M    tests/TestStr.h
	M    tests/TestGrid.h
	M    tests/expr-test.cc
	M    tests/TestStructure.cc
	M    tests/TestUrl.cc
	M    tests/ResponseBuilder.cc
	M    tests/TestSequence.cc
	M    tests/TestStr.cc
	M    tests/TestTypeFactory.cc
	M    tests/TestFloat32.h
	M    tests/TestUInt32.h
	M    tests/dds-test.cc
	M    HTTPCacheInterruptHandler.h
	M    EventHandler.h
	M    Float64.h
	M    D4ParserSax2.h
	M    AISConnect.cc
	M    UInt16.cc
	M    InternalErr.h
	M    EncodingType.h
	M    DDXParserSAX2.cc
	M    UInt64.h
	M    AlarmHandler.h
	M    Marshaller.h
	M    Byte.cc
	M    Byte.h
	M    GNU/GetOpt.cc
	M    GNU/GNURegex.cc
	M    GNU/GNURegex.h
	M    ResponseBuilder.cc
	M    DataDDS.h
	M    DDS.h
	M    BaseType.cc
	M    XDRUtils.cc
	M    win32/gl/mbchar.h
	M    win32/gl/mbuiter.h
	M    win32/gl/mbchar.c
	M    ServerFunction.h
	M    HTTPCacheResponse.h
	M    Makefile.am
	M    RCReader.cc
	M    Constructor.h
	M    util_mit.h
	M    Keywords2.h
	M    Error.h
	M    DDXParserSAX2.h
	M    D4EnumDefs.cc
	M    Int32.cc
	M    DapObj.h
	M    DODSFilter.h
	M    HTTPCache.cc
	M    DataDDS.cc
	M    HTTPCache.h
	M    parser-util.cc
	M    DapIndent.h
	M    AISResources.h
	M    Float32.cc
	M    ObjectType.h
	M    ServerFunction.cc
	M    PipeResponse.h
	M    util.h
	M    AISExceptions.h
	M    AISDatabaseParser.h
	M    AttrTable.cc
	M    InternalErr.cc
	MM   mime_util.h
	M    Grid.h
	M    XDRStreamUnMarshaller.cc
	M    HTTPConnect.cc
	M    D4BaseTypeFactory.h
	M    AISMerge.h
	M    RValue.h
	M    Structure.cc
	M    Url.cc
	M    Vector.cc
	M    getdap.cc
	M    Int64.h
	M    BaseTypeFactory.h
	M    Str.cc
	M    Sequence.cc
	M    XDRFileUnMarshaller.cc
	M    Float32.h
	M    XDRFileUnMarshaller.h
	_M   gl
	A  + gl/glthread
	M    expr.h
	M    Int8.cc
	M    AttrTable.h
	MM   mime_util.cc
	M    Constructor.cc
	M    UInt32.h
	M    XDRStreamMarshaller.h
	M    AISMerge.cc
	M    D4BaseTypeFactory.cc
	M    parser.h
	M    Url.h
	M    Int64.cc
	M    BaseTypeFactory.cc
	M    Vector.h
	M    DAS.cc
	M    ConstraintEvaluator.h
	M    util.cc
	M    Clause.h
	M    Float64.cc
	M    Ancillary.h
	M    Operators.h
	M    Int8.h
	M    UInt32.cc
	M    XDRStreamMarshaller.cc
	M    Grid.cc
	M    util_mit.cc
	M    D4Maps.cc
	M    Connect.cc
	M    escaping.cc
	M    dods-limits.h
	M    HTTPConnect.h
	M    unit-tests/AISMergeTest.cc
	D    unit-tests/test_small_text_file.txt
	M    unit-tests/DASTest.cc
	M    unit-tests/ThreadTest.cc
	D    unit-tests/test_big_binary_file_2.bin
	D    unit-tests/test_big_binary_file_3.bin
	M    unit-tests/DDSTest.cc
	R  + unit-tests/test_config.h.in
	D    unit-tests/test_text_file.txt
	M    unit-tests/ArrayTest.cc
	M    unit-tests/chunked_iostream_test.cc
	D    unit-tests/test_big_binary_file.bin
	D    unit-tests/test_scalars_1.dat
	D    unit-tests/test_scalars_2.dat
	M    unit-tests/ByteTest.cc
	M    unit-tests/ResponseBuilderTest.cc
	M    unit-tests/AISDatabaseParserTest.cc
	M    unit-tests/ResponseCacheTest.cc
	D    unit-tests/test_opaque_1_bin.dat
	M    unit-tests/D4UnMarshallerTest.cc
	M    unit-tests/RCReaderTest.cc
	M    unit-tests/D4EnumDefsTest.cc
	M    unit-tests/DODSFilterTest.cc
	M    unit-tests/D4DimensionsTest.cc
	D    unit-tests/test_cmp.dat
	M    unit-tests/HTTPCacheTest.cc
	M    unit-tests/AISResourcesTest.cc
	M    unit-tests/SignalHandlerTest.cc
	A    unit-tests/D4-marshaller
	A  + unit-tests/D4-marshaller/test_scalars_2.dat
	A  + unit-tests/D4-marshaller/test_opaque_1_bin.dat.sav
	A  + unit-tests/D4-marshaller/test_vector_1_bin.dat
	A  + unit-tests/D4-marshaller/test_vector_2_bin.dat
	A  + unit-tests/D4-marshaller/test_cmp.dat
	A  + unit-tests/D4-marshaller/test_scalars_1_bin.dat
	A  + unit-tests/D4-marshaller/test_scalars_2_bin.dat
	A  + unit-tests/D4-marshaller/test_opaque_1_bin.dat
	A  + unit-tests/D4-marshaller/test_scalars_3_bin.dat
	A  + unit-tests/D4-marshaller/test_scalars_1.dat
	D    unit-tests/test_opaque_1_bin.dat.sav
	M    unit-tests/AttrTableTest.cc
	M    unit-tests/ancT.cc
	MM   unit-tests/MIMEUtilTest.cc
	M    unit-tests/HTTPConnectTest.cc
	M    unit-tests/ServerFunctionsListUnitTest.cc
	M    unit-tests/DDXParserTest.cc
	D    unit-tests/test_vector_1_bin.dat
	D    unit-tests/test_vector_2_bin.dat
	MM   unit-tests/fdiostreamTest.cc
	A    unit-tests/chunked-io
	A  + unit-tests/chunked-io/test_text_file.txt
	A  + unit-tests/chunked-io/test_small_text_file.txt
	A  + unit-tests/chunked-io/test_big_binary_file.bin
	A  + unit-tests/chunked-io/test_big_binary_file_2.bin
	A  + unit-tests/chunked-io/test_big_binary_file_3.bin
	M    unit-tests/SequenceTest.cc
	M    unit-tests/RegexTest.cc
	M    unit-tests/generalUtilTest.cc
	D    unit-tests/test_scalars_1_bin.dat
	M    unit-tests/D4MarshallerTest.cc
	D    unit-tests/test_scalars_2_bin.dat
	D    unit-tests/test_scalars_3_bin.dat
	M    unit-tests/Makefile.am
	M    unit-tests/Keywords2Test.cc
	M    unit-tests/parserUtilTest.cc
	MM   fdiostream.h
	M    StdinResponse.h
	M    DapIndent.cc
	M    XDRFileMarshaller.cc
	M    Clause.cc
	M    AISDatabaseParser.cc
	M    Array.h
	M    ResponseCache.cc
	M    AISConnect.h
	M    UInt16.h
	M    ce_expr.lex
	M    RCReader.h

2013-10-15  James Gallagher  <jgallagher@opendap.org>

	Added
	_M   gl
	A  + gl/m4/lib-link.m4
	A  + gl/m4/lock.m4
	A  + gl/m4/lib-prefix.m4
	A  + gl/m4/lib-ld.m4
	A  + gl/m4/eealloc.m4
	A  + gl/m4/extern-inline.m4
	A  + gl/m4/threadlib.m4
	A  + gl/wctype-h.c
	A  + gl/unistd.c

	Added
	A    gl/glthread
	A    gl/glthread/threadlib.c
	A    gl/glthread/lock.c
	A    gl/glthread/lock.h

	Added
	AM   config.rpath

	gl partial commit so I can merge again and pick up some missing files

	Added to gl
	A    gl/m4/lib-link.m4
	A    gl/m4/lock.m4
	A    gl/m4/lib-prefix.m4
	A    gl/m4/lib-ld.m4
	A    gl/m4/eealloc.m4
	A    gl/m4/extern-inline.m4
	A    gl/m4/threadlib.m4
	A    gl/wctype-h.c
	A    gl/unistd.c

	Updated gnulib.
	M    XMLWriter.cc
	M    conf/snippet/c++defs.h
	M    conf/snippet/warn-on-use.h
	M    conf/snippet/arg-nonnull.h
	M    Byte.h
	M    XDRUtils.cc
	M    ServerFunction.cc
	M    Url.cc
	M    XDRFileUnMarshaller.cc
	M    gl/m4/fcntl-o.m4
	M    gl/m4/configmake.m4
	M    gl/m4/localcharset.m4
	M    gl/m4/locale_h.m4
	M    gl/m4/sys_types_h.m4
	M    gl/m4/mbrtowc.m4
	M    gl/m4/btowc.m4
	M    gl/m4/longlong.m4
	M    gl/m4/00gnulib.m4
	M    gl/m4/ssize_t.m4
	M    gl/m4/glibc21.m4
	M    gl/m4/localeconv.m4
	M    gl/m4/codeset.m4
	M    gl/m4/alloca.m4
	M    gl/m4/off_t.m4
	M    gl/m4/locale-fr.m4
	M    gl/m4/langinfo_h.m4
	M    gl/m4/wint_t.m4
	M    gl/m4/mbsinit.m4
	M    gl/m4/stdint.m4
	M    gl/m4/gnulib-common.m4
	M    gl/m4/stdbool.m4
	M    gl/m4/malloc.m4
	M    gl/m4/regex.m4
	M    gl/m4/warn-on-use.m4
	M    gl/m4/wchar_h.m4
	M    gl/m4/gnulib-comp.m4
	M    gl/m4/unistd_h.m4
	M    gl/m4/wcrtomb.m4
	M    gl/m4/locale-zh.m4
	M    gl/m4/stddef_h.m4
	M    gl/m4/gnulib-cache.m4
	M    gl/m4/include_next.m4
	M    gl/m4/mbstate_t.m4
	M    gl/m4/wctype_h.m4
	M    gl/m4/nl_langinfo.m4
	M    gl/m4/locale-ja.m4
	M    gl/m4/wchar_t.m4
	M    gl/m4/multiarch.m4
	M    gl/m4/stdlib_h.m4
	M    gl/m4/mbtowc.m4
	M    gl/m4/gnulib-tool.m4
	M    gl/m4/byteswap.m4
	M    gl/m4/extensions.m4
	M    gl/localcharset.c
	M    gl/mbsinit.c
	M    gl/regex_internal.c
	M    gl/malloc.c
	M    gl/byteswap.in.h
	M    gl/localcharset.h
	M    gl/locale.in.h
	M    gl/regex_internal.h
	M    gl/sys_types.in.h
	M    gl/wcrtomb.c
	M    gl/btowc.c
	M    gl/regexec.c
	M    gl/ref-del.sin
	M    gl/mbtowc.c
	M    gl/regcomp.c
	M    gl/mbtowc-impl.h
	M    gl/streq.h
	M    gl/alloca.in.h
	M    gl/langinfo.in.h
	M    gl/ref-add.sin
	M    gl/verify.h
	M    gl/regex.c
	M    gl/config.charset
	M    gl/mbrtowc.c
	M    gl/wchar.in.h
	M    gl/regex.h
	M    gl/stdint.in.h
	M    gl/stdbool.in.h
	M    gl/unistd.in.h
	M    gl/stddef.in.h
	M    gl/localeconv.c
	M    gl/wctype.in.h
	M    gl/nl_langinfo.c
	M    gl/Makefile.am
	M    gl/gettext.h
	M    gl/stdlib.in.h
	M    BaseTypeFactory.cc
	M    XDRStreamMarshaller.cc
	M    escaping.cc
	M    DapIndent.cc
	M    XDRFileMarshaller.cc

	modified configure so that dap4 is enabled by default - this fixes (some but not all) issues with distcheck

	Added compute_checksum() to BaseType and children. Added intern_data() so that the CRC attribute is added to the interned variables. The same baselines for RT transmission tests work with the intern_data tests (including the checksums).

2013-10-14  James Gallagher  <jgallagher@opendap.org>

	Checkpoint - Arrays or Sequences implemented and libdap tests pass; check handlers.

	Array of Sequence tests pass

	D4Sequences work, along with tests and some sembelance of rationale behavior by the read() and read_next_instnace() methods.

	Removed call to read() in D4Group::serialize(). Let the variable's serialize() methods call read() so that constructor types will not break the semantics of the D4Sequence::read() method and so that variable's data lifetime can be controlled more (i.e., only reading in data right before it's needed and freeing it right after it's sent to minimize the memory requirements when lots of data are sent).

2013-10-13  James Gallagher  <jgallagher@opendap.org>

	D4Sequence debugging: for some reason D4Sequence::read is called twice for the first instance and that leads to an off-by-one error in the count of elements since the very first element is never saved and thus not sent. E.G., tehe count will be 4 but there are only three instances sent.

	The Parser now recognizes Sequence.

	Added more of D4Sequence... the parser is still not right...

2013-10-11  James Gallagher  <jgallagher@opendap.org>

	Checkpoint - normalized ::read() and all of the handler tests work too.

2013-10-10  James Gallagher  <jgallagher@opendap.org>

	Checkpoint for the D4Sequence code

2013-10-09  James Gallagher  <jgallagher@opendap.org>

	Added D4Sequence and TestD4Sequence. Also foud the smallest number of files to change and arrive at uniform semantics for BaseType::read(). Now when read() returns true all the data have been read and when it returns false some data were not read. Not sure how this will work for Arrays and streaming data, but at least libdap uses it uniformly. Handlers may need tweaks.

	cleanup/formatting

	cleanup/formatting

	Arrays of Structure work and have regression tests - well, a test.

	Added unit test for Array of Structure parse

	Arrays of Structures parse.

2013-10-08  James Gallagher  <jgallagher@opendap.org>

	checkpoint: debugging arrays of structure. See Vector:: prototype(), D4ParserSax2 Constructor and DMR_7.4.xml.

	...working on Array of Structure

	...working on Array of Structure

	Added tests for the DAP4 integer types

	Removed some instrumentation that made it's way into svn

	Added tests for roundtrip transmission.
	M    tests/DMRTest.at
	A    tests/dmr-testsuite/test_array_5.xml.trans_base
	A    tests/dmr-testsuite/test_simple_1.xml.trans_base
	A    tests/dmr-testsuite/test_simple_3.xml.trans_base
	A    tests/dmr-testsuite/test_simple_5.xml.trans_base
	A    tests/dmr-testsuite/test_array_2.xml.trans_base
	A    tests/dmr-testsuite/test_array_4.xml.trans_base
	A    tests/dmr-testsuite/test_simple_2.xml.trans_base
	A    tests/dmr-testsuite/test_simple_4.xml.trans_base
	A    tests/dmr-testsuite/test_array_1.xml.trans_base
	A    tests/dmr-testsuite/test_array_3.xml.trans_base

	Added binary Data DMR response baselines
	AM   dmr-testsuite/test_array_3_data.bin
	AM   dmr-testsuite/test_array_5_data.bin
	AM   dmr-testsuite/test_simple_1_data.bin
	AM   dmr-testsuite/test_simple_3_data.bin
	AM   dmr-testsuite/test_simple_5_data.bin
	AM   dmr-testsuite/test_array_2_data.bin
	AM   dmr-testsuite/test_array_4_data.bin
	AM   dmr-testsuite/test_simple_2_data.bin
	AM   dmr-testsuite/test_simple_4_data.bin

	Updated baselines and the DMR test driver
	M    tests/DMRTest.at
	M    tests/dmr-testsuite/test_array_2.xml.send_base
	M    tests/dmr-testsuite/test_array_3.xml.send_base
	M    tests/dmr-testsuite/test_array_4.xml.send_base
	M    tests/dmr-testsuite/test_array_5.xml.send_base
	M    tests/dmr-testsuite/test_simple_2.xml.baseline
	M    tests/dmr-testsuite/test_simple_4.xml.baseline
	M    tests/dmr-testsuite/test_array_1_data.bin
	M    tests/dmr-testsuite/test_simple_1.xml
	M    tests/dmr-testsuite/test_simple_2.xml
	M    tests/dmr-testsuite/test_simple_3.xml
	M    tests/dmr-testsuite/test_simple_4.xml
	M    tests/dmr-testsuite/test_simple_5.xml
	M    tests/dmr-testsuite/test_array_5.xml.baseline
	M    tests/dmr-testsuite/test_simple_1.xml.baseline
	M    tests/dmr-testsuite/test_simple_1.xml.send_base
	M    tests/dmr-testsuite/test_simple_3.xml.baseline
	M    tests/dmr-testsuite/test_simple_2.xml.send_base
	M    tests/dmr-testsuite/test_simple_3.xml.send_base
	M    tests/dmr-testsuite/test_simple_4.xml.send_base
	M    tests/dmr-testsuite/test_simple_5.xml.baseline
	M    tests/dmr-testsuite/test_simple_5.xml.send_base
	M    tests/dmr-testsuite/test_array_5.xml
	M    tests/dmr-testsuite/test_array_1.xml.send_base
	M    tests/io_test.cc

	DMRTest now on svn:ignore

	Added baselines for the DMR regression tests.
	A    dmr-testsuite/test_array_2.xml.send_base
	A    dmr-testsuite/test_array_3.xml.send_base
	A    dmr-testsuite/test_array_4.xml.baseline
	A    dmr-testsuite/test_array_4.xml.send_base
	A    dmr-testsuite/test_array_5.xml.send_base
	A    dmr-testsuite/test_simple_3_error_1.xml.baseline
	A    dmr-testsuite/test_simple_3_error_3.xml.baseline
	A    dmr-testsuite/test_simple_2.xml.baseline
	A    dmr-testsuite/test_simple_4.xml.baseline
	AM   dmr-testsuite/test_array_1_data.bin
	A    dmr-testsuite/test_array_1.xml.baseline
	A    dmr-testsuite/test_array_3.xml.baseline
	A    dmr-testsuite/test_array_5.xml.baseline
	A    dmr-testsuite/test_simple_3_error_2.xml.baseline
	A    dmr-testsuite/test_simple_1.xml.baseline
	A    dmr-testsuite/test_simple_1.xml.send_base
	A    dmr-testsuite/test_simple_3.xml.baseline
	A    dmr-testsuite/test_simple_2.xml.send_base
	A    dmr-testsuite/test_simple_3.xml.send_base
	A    dmr-testsuite/test_simple_5.xml.baseline
	A    dmr-testsuite/test_simple_4.xml.send_base
	A    dmr-testsuite/test_simple_5.xml.send_base
	A    dmr-testsuite/test_array_1.xml.send_base
	A    dmr-testsuite/test_array_2.xml.baseline

	DMR tests - first stab at regression tests for the DMR code.

	Added a test for the DMR (DAP4 int types)

	Arrays of Int8, UInt8, Int64, UInt64 all work. All tests pass. Some major reworking of the Test classes to use templates. D4(Un)Marshaller test code fixed to match the edits to those classes based on recent changes to the binary doc spec. Test baselines updated.

2013-10-04  James Gallagher  <jgallagher@opendap.org>

	Fixed up the Marshallers for DAP4 - No more XDR unless a compile-time switch is defined. The code assumes IEEE754 reals

	Bug in integer type serialization fixed; Marshaller code made faster; removed most specail case code for platforms that don't use IEEE754.

	test updates

2013-10-03  James Gallagher  <jgallagher@opendap.org>

	Added more thorough unit tests for arrays - Enums and structures are still broken.

	Added a unit test for array stuff.

	Added support for Arrays of the DAP2 types that have been carried over to DAP4. Some testing of the parser; tests to follow in a subsequent commit.

2013-10-01  James Gallagher  <jgallagher@opendap.org>

	Switched to the print order Dennis uses.

	Updated the FSF address in the copyright headers

	Merge from the trunk: This includes all of the changes made for the H 1.9 release and the change to width(). The code builds and has minimal warnings.

2013-09-30  James Gallagher  <jgallagher@opendap.org>

	This checkin contains a fix for the conflicting definitions of width() in BaseType, Vector and Array, where Array provided a version/definition that clashes with the one in BaseType. BaseType defined width() and Array defined width(bool constrained = true), which shadowed the former. I changed BaseType width so that its signature is width(bool constrained = false) and made that the only version of the method. There are some changes to uses of width() in libdap and the BES, but not in the handlers.

2013-09-27  James Gallagher  <jgallagher@opendap.org>

	misc changes; a minor fix for Array; a fix for the DDX parser; A minor change in the scanners for the Error, DAS, DDS and CE parsers (added %option noinput to suppress a warning); removed -fno-defer-pop from the Makefile.ams.

2013-09-23  James Gallagher  <jgallagher@opendap.org>

	Turned on checksums in D4Group - I had the algorithm correct. dmr-test worked but more testing is going to be needed.

2013-09-20  James Gallagher  <jgallagher@opendap.org>

	Fixed byte order change in dmr-test - it seems to work now

	chunked i/ostream complete. dmr-test and expr-test are failing (expr-test fails soem tests, dmr-test seg faults).

2013-09-19  James Gallagher  <jgallagher@opendap.org>

	xsgetn works, errors and all, most of TODOs have been done.

	All tests now pass

	Removed putBack option/feature since it'll never be used and to support it we need a call to memcopy for every chunk read.

	checkpoint: chunked istream xsgetn() is close to working - only the error case fails the unit tests. The code is pretty hacked up, though.

2013-09-18  James Gallagher  <jgallagher@opendap.org>

	added big_file_2 tests

	more work on the chunked strream io code

2013-09-17  James Gallagher  <jgallagher@opendap.org>

	Added the data files for the chunked iostream tests; ignored result files

	Check point - mostly for the chunk iostream unit test.

	I changed the character used for the Type special form (from # to $, because # is a URL delim. and tomcat was filtering it).

	Fixed svn ignores...

	chunked_istream now takes byte-order info that it uses to correct the chunk header size and type to the host.

	Turned off some debugging code in D4StreamMarshaller and chunked_ostream. ResponseBuilder now uses byte order correctly and dmr-test's read code passes the value into D4StreamUnMarshaller.

	Improved D4 Sax Parser by making char* and string docs parse in two calls instead of using an io stream.

2013-09-16  James Gallagher  <jgallagher@opendap.org>

	checkpoint - unit testing for chunking iostream

	Added - has en embedded CRLF separator as with the data DMR response docs.

	Parser & response fixes

2013-09-13  James Gallagher  <jgallagher@opendap.org>

	More testing for the chunked response - looks like its now working correctly with the dmr-test code.

	Chunking for DAP4 implemented. Needs automated tests and a round of optimization.

2013-09-12  James Gallagher  <jgallagher@opendap.org>

	Added initial version of chunked_ostream. Added changes to the tests directory (and in libdap) to support round-trip serialization of DAP4 variables. ...work in progress

2013-09-09  James Gallagher  <jgallagher@opendap.org>

	Dap4 deserialize close to working.

	DAP4 Responses with checksums now work.

2013-09-06  James Gallagher  <jgallagher@opendap.org>

	Added Test classes for some of the DAP4 types.

	serialize() partly working - CRC32 checksums missing.

2013-09-05  James Gallagher  <jgallagher@opendap.org>

	Merged changes from the trunk made in preparation for the Hyrax 1.9 release. Updated the print rep of the DDS (aka DMR) to match Dennis' form. Fixed the display of Array Dim elements so that Dim names are fully qualified.

2013-09-04  James Gallagher  <jgallagher@opendap.org>

	Removed EVAL from configure.ac; only Sequence (dap2) and Vector/Array (dap4) will ever use that code.

	Arrays of atomic types parse and the resulting DDS can print the DMR.

2013-08-28  James Gallagher  <jgallagher@opendap.org>

	Build/Audit fixes.
	M    libdap/XDRFileUnMarshaller.cc
	M    libdap/XDRFileUnMarshaller.h
	M    bes/dispatch/unit-tests/keysT.cc
	M    bes/functions/Makefile.am

2013-08-27  James Gallagher  <jgallagher@opendap.org>

	Backed out an errant call to fclose()

	Removed errant call to fclose() in XDRFileUnMarshaller. This caused a segfault on Linux.

	audit fixes
	M    libdap/Makefile.am
	M    bes/dispatch/unit-tests/BESCache3Test.cc
	M    bes/functions/tests/functionsTest.at
	M    bes/functions/tests/bescmd/bind_name_4.dods.bescmd.baseline
	M    bes/functions/tests/bescmd/bind_name_2.dods.bescmd.baseline

	Source release info
	M    configure.ac
	M    ChangeLog
	M    INSTALL
	M    README
	M    NEWS

	Audit fixes.
	M    RValue.cc
	M    HTTPCacheTable.cc
	M    Array.cc
	M    DDXParserSAX2.cc
	M    Makefile.am
	M    HTTPCache.cc
	M    XDRStreamUnMarshaller.cc
	M    Structure.cc
	M    Sequence.cc
	M    XDRFileUnMarshaller.cc
	M    XDRFileUnMarshaller.h
	M    mime_util.cc
	M    util.cc
	M    util_mit.cc

	Changed the required bison version number to 2.4 and removed a bogus include from das.yy that breaks bison 2.4.
	M    das.yy
	M    Error.yy
	M    dds.yy
	M    ce_expr.yy

	Removed bad character from the Makefile.am
	M    Makefile.am

	Added the newly hacked grammar files - these along with updated versions of DAS.cc, DDS.cc, ConstraintEvaluator.cc and Error.cc and Makefile.am were copied over from the dap4 branch. A kind of cheap merge operation...
	A    das.yy
	A    Error.yy
	A    dds.yy
	A    ce_expr.yy

2013-08-26  James Gallagher  <jgallagher@opendap.org>

	Chnages so that a newer bison can be used.
	M    Error.lex
	M    Error.cc
	M    ce_parser.h
	M    ConstraintEvaluator.cc
	M    DDS.cc
	M    Makefile.am
	M    dds.lex
	M    Vector.cc
	M    das.lex
	M    Vector.h
	M    DAS.cc
	M    ce_expr.lex

2013-08-22  James Gallagher  <jgallagher@opendap.org>

	Added tests for teh Enum type class.

	Added tests and baselines for Array.

	Support for arrays of cardinal types (excluding Enum). Both named and anonymous dimensions are supported.

2013-08-16  James Gallagher  <jgallagher@opendap.org>

	Fiddled with the URL type (which is called Url in DAP2 and URL in DAP4 - ARRGH). It now seems to work OK since all tests are passing again.

2013-08-15  James Gallagher  <jgallagher@opendap.org>

	Added support for the DAP4 types Int8, UInt8, Int64 and UInt64 to Vector. Along the way I made some more fixes to teh ce_expr.yy and Error.yy parsers and fixed an issue with the BaseTypeFactory class. This code builds, passes its tests and the BES and all of the handlers also build and pass tests when using it.

2013-08-14  James Gallagher  <jgallagher@opendap.org>

	Added %requires "2.5" to all the bison parser sources. Fixed a missing filed initialization in D4ParserSax2.h

	much cleaner use of bison and flex - but this code requires a newer version of bison (2.5)

	Adapted parsers to the new bison 3.0 - all tests pass.

2013-08-13  James Gallagher  <jgallagher@opendap.org>

	TODO Comment done and removed

	spelling and more ignores for generated files.

2013-08-12  James Gallagher  <jgallagher@opendap.org>

	The scanner now does not use the default rule. Better processing of errors for the parser.

	ignore exec in d4_ce

	Hmmm... Something odd happened qith the conf dir getting moved by an accidental mouse click...

	Modified the DAP4 CE parser so that it's scanner won't clash with other scanners by using a parser/scanner specific prefix (d4_ce). Also uncommented an error() method i the D4CEDriver class, although it's not yet used.

	Added the DAP4 CE parser - first version. This code uses the C++ 'modes' of bison and flex, so it will parse anything in an istream. The code does not report locations yet and the scanner does not use a prefix, but that can fixed later if more of these parsers are needed.

2013-07-25  James Gallagher  <jgallagher@opendap.org>

	Merged down from the trunk, which has a bunch of changed developed on the MIIC branch. Those changes include caching code for server functions and modifications to the CE scanner and parser so that large arrays can be passed into constraint expressions (using POST, e.g.). This will require a matching merge of the BES.

2013-07-23  James Gallagher  <jgallagher@opendap.org>

	Removed the openssl/evp.h header because it winds up including des_old.h on OSX 10.5 and that has a conflict with set_key() in BESKeys.h. Also, the code no longer uses the evp.h header...
	M    XDRStreamMarshaller.h

	Manually transferred some fixes from the trunk to these files. I was using malloc() when it wasn't needed (switched to vector<char>) and there were buffers that were not being freed (because I thought xdr_destroy() was calling free() - that's why I used malloc(); it does not call free()).

	Memory leaks fixed in the DAP4 Stream Marshaller classes - but these are in code in the trunk. will check in all the same and make corresponding changes to the code on the dap4 branch (which uses the filename prefix 'D4' instead of 'DAP4').

	Modified ConstraintEvaluator so that it always frees the scanner/parser string buffer when an exception is thrown. I made this change while working on a problem that turned out to be in the scanner (state was not reset when an error was found) but even though this change is not the fix for that - see ce_expr.lex - it seems like a good idea.

	Fixed the rpm build - libtest-types.a was missiing from the spec file.

2013-07-10  James Gallagher  <jgallagher@opendap.org>

	Fixed a bug where a CE with mismatched quotes left the CE parser in the <quote> state, making subsequent requests fail. The fix was in the scanner to reset the parser (technically the scanner's) state to INITIAL when an error was detected. I also added code to catch the Error object thrown by the scanner and delete the parse buffer, although that might be overkill.

	Merged changes from the miic_6.2013 branch. These changes support the new #<type>() special forms that enable big arrays to be use in CEs.
	_M   .
	M    Error.lex
	M    ConstraintEvaluator.cc
	M    Array.cc
	M    tests/expr-test.cc
	A  + tests/ResponseBuilder.cc
	A  + tests/ResponseBuilder.h
	M    tests/Makefile.am
	M    DDXParserSAX2.cc
	M    Makefile.am
	M    ce_expr.y
	M    Error.y
	M    dds.lex
	MM   mime_util.h
	M    XDRStreamUnMarshaller.cc
	M    RValue.h
	M    BaseTypeFactory.h
	M    das.lex
	MM   mime_util.cc
	M    das.y
	M    BaseTypeFactory.cc
	M    util.cc
	D    unit-tests/server-testsuite/geturl.0
	D    unit-tests/server-testsuite/config
	_M   unit-tests/ancT.cc
	M    unit-tests/DDXParserTest.cc
	D    unit-tests/response_cache
	M    unit-tests/Makefile.am
	M    dds.y
	M    Array.h
	M    ce_expr.lex

2013-07-09  James Gallagher  <jgallagher@opendap.org>

	Trunk fixes for the functions module in the libdap andbes spec files. Also a repair to XDRStreamMarshaller.cc

2013-07-08  James Gallagher  <jgallagher@opendap.org>

	Fixed distcheck
	M    tests/Makefile.am

	Fixed some warnings that had been bothering me for a while...

2013-07-06  James Gallagher  <jgallagher@opendap.org>

	Added more special forms for more types (Byte, Int16, UInt16, Int32, UInt32, Float32, and Float64).

2013-07-05  James Gallagher  <jgallagher@opendap.org>

	Added support for a special form that builds an array. This is far faster than the make_array() function in the bes/functions module. Also, I added a new method to Array so that the current shape of the array can be cleared; this is used by the bind_shape() function that can take an array of N elements and set its shape to something with M dimensions.

2013-06-26  James Gallagher  <jgallagher@opendap.org>

	Updates used by the make_array() and bind_name() functions.

2013-06-11  James Gallagher  <jgallagher@opendap.org>

	Removed some of the old dejagnu test stuff.

	Made a copy of ResponseBuilder for the expr-test test program. It's a duplicate of code now in bes/dap, but it seems important to keep the tests here. That might change if all the streaming code moves to bes/dap...

2013-06-06  Nathan Potter  <ndp@opendap.org>

	libdap: new value() methods so that the correct thinmgs are accessed and returned.

2013-06-06  James Gallagher  <jgallagher@opendap.org>

	Branch for MIIC feature development
	A    https://scm.opendap.org/svn/branch/libdap/miic_6.2013

2013-06-06  Nathan Potter  <ndp@opendap.org>

	libdap: Added new 'value' function to Vector that allows you use an subset_index array to retrieve non contiguous values in a single operation

2013-06-05  James Gallagher  <jgallagher@opendap.org>

	Added libdap-* to svn-ignore

2013-05-24  James Gallagher  <jgallagher@opendap.org>

	The Grid map_rbegin and rend methods were not using d_is_array_set correctly. Fixed.

2013-05-22  James Gallagher  <jgallagher@opendap.org>

	Changes/fixes from the merge with the trunk.

	Added
	A    unit-tests/valgrind_suppressions.txt

	Merge results
	D    unit-tests/valgrind_suppressions.txt
	M    unit-tests/DDSTest.cc
	M    unit-tests/ResponseBuilderTest.cc
	M    unit-tests/ResponseCacheTest.cc
	_M   unit-tests/response_cache

2013-05-21  James Gallagher  <jgallagher@opendap.org>

	Fixes for linux
	M    unit-tests/ResponseBuilderTest.cc
	M    unit-tests/ResponseCacheTest.cc

	added valgrind suppressions for stuff in libxml2

	Moved four set_mime_*() methods from ResponseBuilder to mime_util.

2013-05-20  James Gallagher  <jgallagher@opendap.org>

	Modified DDXParser so that it includes an intern_stream() method that takes a cpp istream. Added tests. Also modified ResponseBuilder so that it frees the AlarmHandler allocated when establish_timeout() is called.

	Fixed memory leaks in the DDXParserSax2 code. Other minor edits.

	Test fixes

	Added by merge with the trunk

	added

2013-05-19  James Gallagher  <jgallagher@opendap.org>

	merged code from the trunk - NB the unit-tests/response_cache directory did not get checked in and thus it's not merged and the ResponseCacheTest fails.

2013-05-17  James Gallagher  <jgallagher@opendap.org>

	Added these baseline files for ResponseBuilderTest

	Fixes for ResponseCache - I added tests and have tested most modes. Not tested: how it works with server functions. There are also fixes/modifications for ResponseBuilder that ResponseCache uses. Added a note to ServerFunctionsList that it stores weak pointers. I worked on the ResponseBuilderTests but never got the test for server functions to work completely; the test examines the response document and checks that the metadata part is correct but not the (trivial) data part.

	Added get_next_mime_header() for an istream (the existing version took a FILE*) and moved some of the MIME header methods from ResponseBuilder here.

2013-05-15  Nathan Potter  <ndp@opendap.org>

	libdap: Moving trunk/libdap/unit-tests/ce-functions-testsuite to trunk/bes/functions/unit-tests because that's where the functions are that need the contents of that directory.

2013-05-14  James Gallagher  <jgallagher@opendap.org>

	ResponseCache mostly working...

	We now install the library and *Test headers.

2013-05-14  Nathan Potter  <ndp@opendap.org>

	libdap: Repaired problems with conditional build in ServerFcuntionsList

2013-05-14  James Gallagher  <jgallagher@opendap.org>

	Added HAVE_STDLIB_H and HAVE_ATEXIT to DAPCache3.cc.

2013-05-10  Nathan Potter  <ndp@opendap.org>

	libdap: Instrumentation in Regex. Fixed baseline for ResponseBuilderTest::invoke_server_side_function_test

	libdap: Added life cycle control to DAPCache3 singleton.

	libdap: Added life cycle control to DAPCache3 singleton.

2013-05-10  James Gallagher  <jgallagher@opendap.org>

	(potential) fix for the ResponseBuilder cache bug

2013-05-10  Nathan Potter  <ndp@opendap.org>

	libdap: Updated ResponseBuilderTest to run a server side function.

2013-05-10  James Gallagher  <jgallagher@opendap.org>

	Added A significant refactor of libdap including the start of the DAP4 response object builder class.

	Removed (commented) #define DODS_DEBUG from ServerFunctionsList.

2013-05-10  Nathan Potter  <ndp@opendap.org>

	libdap: Added instrumentation (enabled in this check in) to ServerFunctionsList in an effort to understand the seg fault problem that seems to be associated with server side function calls.

	libdap: Added instrumentation (enabled in this check in) to ServerFunctionsList in an effort to understand the seg fault problem that seems to be associated with server side function calls.

	libdap: Added instrumentation (enabled in this check in) to ServerFunctionsList in an effort to understand the seg fault problem that seems to be associated with server side function calls.

2013-05-09  Nathan Potter  <ndp@opendap.org>

	libdap: Checking in repaired ServerFunctionsList

2013-05-06  James Gallagher  <jgallagher@opendap.org>

	Removed the Ancillary.h file from D4ResponseBuilder

	Removed old code

	DAPCache3 is now in the libdap namespace. The cache-specific methods of ResponseBuilder have been factored out to ResponseCache; RB still makes explicit calls to the cache code, however. The ResponseCache class was added.

2013-05-03  James Gallagher  <jgallagher@opendap.org>

	Added correct copyright headers for the ServerFunctions classes.

2013-05-03  Nathan Potter  <ndp@opendap.org>

	libdap: Attempting to fix memory leaks in ServerFucntionsList - adding unit tests for same.

2013-05-02  James Gallagher  <jgallagher@opendap.org>

	Removed old code in util

	Removed old code from ResponseBuilder

2013-05-01  James Gallagher  <jgallagher@opendap.org>

	Added D4ResponseBuilder and remove the timeout methods from DMR.

2013-05-01  Nathan Potter  <ndp@opendap.org>

	libdap: Change type signature for setter methods in ServerFunction so that they accept const parameters

	libdap: Change type signature for setter methods in ServerFunction so that they accept const parameters

2013-04-29  James Gallagher  <jgallagher@opendap.org>

	Fixed the access to the DODS_CONF environment variable in the RCReaderTest. The same fix should prbably be used in other tests that use putenv() or setenv().

	Added suppressions file for valgrind in the cache-testsuite dir. Made an attempt to fix the RCReader tests, but I think this is past the point where there is much return...

	Added crc.h to the code.

	Fix suppressions in the Makfile and added suppressions. There are still memory issues.

2013-04-27  James Gallagher  <jgallagher@opendap.org>

	Wrapped the two DAP4-only includes in #if DAP4. Those headers are not installed in a regular build and the includes break clients that included the file.
	M    BaseType.h

2013-04-26  James Gallagher  <jgallagher@opendap.org>

	Added a 'suppressions' file for valgrind. This may help with the bogus putenv/setenv reports.

	Added HTTPCacheTest back into the Makefile for unit-tests; the only errors in the unit-tests that remain are leaks reported from putenv() calls (only on OSX?) which are bogus reports since the man page for OSX notes putenv _will_ leak given the BSD definition. Not sure how to deal with this... Maybe suppress the error for putenv?

	Fixed a leak in the DODSFilterTest; Added a call to HTTPCache::delete_instance() in HTTPConnectTest so that some 'leaks' don't show up there.

	Fixed a leak in AttrTable but had to change the behavior of del_attr_table() in the process. That method now deletes the contained table.

	Repaired SignalHandlerTest - now works with valgrind.

2013-04-25  James Gallagher  <jgallagher@opendap.org>

	Fixed leaks in SequenceTest

	Fixed leaks in D4ParserSax2 - leaks that would occur when errors are found in the input (based on leaks in DDXParserSAX2).c

	Fixed leaks in DDXParserSAX2

	Fixed a leak in XDRStreamMarshaller

	More leaks fixed - mostly in ResponseBuilderTest

	Fixed memory leaks found using valgrind with the unit tests.

2013-04-24  James Gallagher  <jgallagher@opendap.org>

	Fixed a memory leak in D4StreamMarshaller.

	Renamed DAP4StreamMarshaller/UnMarshaller classes to use 'D4' prefix.

	Updated the tests for DAP4Marshaller and UnMarshaller

	Modified DAP4StreamMarshaler, it's test and baselines to use CRC32 as the checksum. Working.

	Move Type.h include in BaseType out of the namespace libdap { } and added namespace libdap { } to the Type header itself. Also swapped CRC32 into the DAP4Marshaller code.

2013-04-22  James Gallagher  <jgallagher@opendap.org>

	Added support for valgrind running the unit-tests (this could probably be extended to the autotest tests, too). The changes are in configure.ac (an option) and unit-tests/Makefile.am (see TEST_ENVIRONMENT). Added a small macro in conf for the configure.ac.

	Added he D4Enum variable type even though I'm not sure about its design. revisit this once arrays are in place.

	Hacked D4DimensionsTest so that it using a switch to control debugging output and can run tests by name.

	D4Dimensions now tests for errors when set_size() is called with a string - and the parser D4ParserSax2 does not do the conversion itself but uses the class' code. Added unit tests that illustrate using the CPPUNIT_TEST_EXCEPTION macro.

2013-04-19  James Gallagher  <jgallagher@opendap.org>

	Changed D4Dimension so it can take the dimension size as a string. Needs work on/in the error detection code, however. See set_size().

	Mem leak fix in D4Group

	Removed the unused D4ParserError class from the code; removed unneeded includes in D4ParserSax2.h

	Reworked the error reporting to be more rational. D4ParserError no longer used.

	Added debug switch to the parser's intern() methods

	Removed various preprocessor switches from the DAP4 parser.

	New D4Attributes in the code and all tests pass. Some debugging code still in place and other things to be changed.

2013-04-18  James Gallagher  <jgallagher@opendap.org>

	Added D4Attributes to BaseType.

	Turned off instrumentation; D4Attribtues in BaseType but not compiled yet.

	Fixed memory leaks in the D4Group unit tests

	Added unit tests for D4Attributes find and get methods; fixed a bug in that code.

	Added D4AttributesTest unit-tests and baselines.

2013-04-17  James Gallagher  <jgallagher@opendap.org>

	Added a new Attribute/s class for DAP4. Needs to be tested and integrated into the library (as a field in BaseType?)

	Added tests for DAP4 Attributes in various places like Structures, Groups and simple variables

2013-04-16  James Gallagher  <jgallagher@opendap.org>

	Added tests for Attributes. Have not tested Attributes with variables yet, but they work with the root group.

	Added Attribute code back in; Also, testing having BaseType define print_val(FILE *...)

	Used #if ATTR to remove the old attribute code from the parser.

2013-04-15  James Gallagher  <jgallagher@opendap.org>

	Added support and tests for Groups

	Structures parse - only test code was added/changed since the last commit.

	Parsing all of the simple variable types except enum and opaque.

	Basic DMR and D4Parser round-trip tests now work.

2013-04-13  James Gallagher  <jgallagher@opendap.org>

	DMR Parsing progress

	Tests for D4PaserSax2

2013-04-11  James Gallagher  <jgallagher@opendap.org>

	svn ignore updated for tests

	Changed D4Dimensions so that it is a container for D4Dimension pointers. This mirrors D4EnumDefs & D4EnumDef.

	ignored (for svn) stuff; removed old autogen.sh

	ignored (for svn) stuff

	ignored (for svn) stuff

	... hoping resovlong the conflicts after the copy and switch is the right thing to do.
	R    Type.h
	R    tests/dmr-test.cc
	R    DMR.cc
	R    DMR.h
	R    unit-tests/D4GroupTest.cc
	R    unit-tests/D4-xml/D4Group_with_scalars_and_stuff.xml
	R    unit-tests/D4-xml/D4Group_named_with_scalars_and_stuff.xml
	R    unit-tests/D4-xml/D4Group_with_scalars.xml
	R    unit-tests/D4-xml/D4Group_everything.xml
	R    unit-tests/D4-xml/D4Group_named_with_scalars.xml
	R    unit-tests/D4-xml/D4Group_empty.xml
	R    unit-tests/D4-xml/D4Group_named_empty.xml

	DAP4 development branch, third try...
	A    https://scm.opendap.org/svn/branch/libdap/dap4

2013-04-10  James Gallagher  <jgallagher@opendap.org>

	Made a branch for the dap4 development - replaces the old DAP4 branch
	A    https://scm.opendap.org/svn/branch/libdap/dap4

2013-04-03  James Gallagher  <jgallagher@opendap.org>

	distcheck works on linux now...
	A  + D4ParserSax2.cc
	M    Makefile.am
	D    D4ParserSAX2.cc

2013-04-02  James Gallagher  <jgallagher@opendap.org>

	Added climit include to fix 'UINT/INT_MAX missing' on Linux.
	M    util.cc

2013-04-01  James Gallagher  <jgallagher@opendap.org>

	Added unit tests for D4Dimensions and D4EnumDefs. Removed old code from the AttrTable tests.

	Added D4EnumDefs

2013-03-26  Nathan Potter  <ndp@opendap.org>

2013-03-25  Nathan Potter  <ndp@opendap.org>

	libdap: Disabling cruft code from earlier ugrid work.

2013-02-26  Nathan Potter  <ndp@opendap.org>

	libdap: Comments

2013-02-12  Nathan Potter  <ndp@opendap.org>

	libdap: comments

2013-02-08  Nathan Potter  <ndp@opendap.org>

	libdap: Updated ServerFunction API

2013-02-07  Nathan Potter  <ndp@opendap.org>

	libdap: Added methods to ServerFunctionsList to allow inspection of the list contents.

2013-02-06  Nathan Potter  <ndp@opendap.org>

	libdap: Moved AbstractFunction class to ServerFunction class

	libdap: Added the use of AbstractFunction class.

2013-02-05  Nathan Potter  <ndp@opendap.org>

	team sync

	team sync

2013-02-04  Nathan Potter  <ndp@opendap.org>

	libdap: Adding AbstractServerSideFunction

2013-01-31  James Gallagher  <jgallagher@opendap.org>

	Fixes for bes distcheck
	M    ServerFunctionsList.cc
	M    ServerFunctionsList.h
	M    ConstraintEvaluator.h

2013-01-30  James Gallagher  <jgallagher@opendap.org>

	Distcheck now works; removed more old server function code.
	_M   .
	M    configure.ac
	M    main_page.doxygen
	M    ConstraintEvaluator.cc
	_M   tests
	M    Makefile.am
	D    swath2grid
	D    ugridFunctions
	M    NEWS
	M    ConstraintEvaluator.h
	M    unit-tests/HTTPCacheTest.cc
	M    doxy.conf

	Added stuff to svn:ignore

2013-01-30  Nathan Potter  <ndp@opendap.org>

	libdap: Updating configre.ac for automake-1.13

2013-01-29  James Gallagher  <jgallagher@opendap.org>

	Changed the way functions are registered so that CE does not have to copy all the functions into every instance of the CE class. Now CE uses functions directly from a list in libdap.

	Changed the way functions are registered so that CE does not have to copy all the functions into every instance of the CE class. Now CE uses functions directly from a list in libdap.

	Fixed checkin - I checked in some code with debugging on

	Removing 'basic' server functions.
	_M   .
	M    Keywords2.cc
	M    ConstraintEvaluator.cc
	M    tests/TestArray.cc
	M    tests/EXPRTest.at
	M    Makefile.am
	M    swath2grid/reproj_functions.cc
	M    HTTPCache.cc
	M    util.h
	M    expr.h
	M    util.cc
	M    unit-tests/HTTPCacheTest.cc
	D    unit-tests/ArrayGeoConstraintTest.cc
	RM + unit-tests/ancT.cc
	M    unit-tests/ddsT.cc
	M    unit-tests/ResponseBuilderTest.cc
	D    unit-tests/CEFunctionsTest.cc
	D    unit-tests/GridGeoConstraintTest.cc
	M    unit-tests/Makefile.am
	M    unit-tests/Keywords2Test.cc

	Added stuff to svn:ignore

	Added stuff to svn:ignore

	Added stuff to svn:ignore

2013-01-25  Patrick West  <pwest@opendap.org>

	Removing dependency on DAP4 code for DAP3 responses M    ResponseBuilder.h M    ResponseBuilder.cc M    Int64.h

	Need autoconf 2.61, not 2.62 M    configure.ac

2013-01-18  James Gallagher  <jgallagher@opendap.org>

	Merge of the code from hyrax 1.8 release (version 3.11.7)
	_M   .
	A  + gridfields_functions.h
	M    configure.ac
	M    Connect.h
	M    ChangeLog
	A  + gridfields_functions.cc
	M    ResponseBuilder.h
	M    main_page.doxygen
	A  + DAPCache3.cc
	A  + DAPCache3.h
	_M   OSX_Resources
	M    ConstraintEvaluator.cc
	M    DDS.cc
	M    HTTPCacheTable.cc
	M    Array.cc
	_M   tests
	M    tests/TestGrid.cc
	M    tests/expr-test.cc
	M    tests/TestStructure.cc
	M    INSTALL
	M    DDXParserSAX2.cc
	M    libdap.spec
	M    ResponseBuilder.cc
	M    README
	M    BaseType.cc
	M    DDS.h
	_M   win32/gl
	M    Makefile.am
	AM + swath2grid
	M    DataDDS.cc
	M    ce_expr.y
	M    util.h
	AM + ugridFunctions
	M    XDRStreamUnMarshaller.cc
	M    NEWS
	A  + doxy.conf.in
	M    Vector.cc
	A  + main_page.doxygen.in
	_M   gl
	M    ce_functions.cc
	M    expr.h
	MM   mime_util.cc
	M    GridGeoConstraint.cc
	M    Vector.h
	M    util.cc
	M    Grid.cc
	M    Connect.cc
	_M   unit-tests
	MM   unit-tests/MIMEUtilTest.cc
	M    unit-tests/ResponseBuilderTest.cc
	M    Clause.cc
	M    Array.h
	M    doxy.conf
	M    ce_expr.lex

2012-12-28  James Gallagher  <jgallagher@opendap.org>

	Removed this generated file from SVN
	D    swath2grid/bes.conf

	Checkpoint.
	_M   .

2012-12-20  James Gallagher  <jgallagher@opendap.org>

	checkpoint; make check runs; the s2g test fails but will be fixed later.
	M    swath2grid/Makefile.am
	M    ugridFunctions/tests/ugr2-fvcom-full.bescmd

	Added a unit test (doesn't work yet) for swath2grid. Also some updates to the function.

	Added support for dimension projection 'wildcards' so that i[*], i[n:*] and i[n:m:*] are supported where those project all of the elements and all elements from n to the end of the array, respectively.

2012-12-13  Nathan Potter  <ndp@opendap.org>

	libdap: Adding new urgid function

2012-12-13  James Gallagher  <jgallagher@opendap.org>

	Swath2grid checkpoint and removal of the eclipse . files
	M    configure.ac
	D    .cproject
	M    swath2grid/reproj_functions.h
	D    swath2grid/airs.nc.0.bescmd
	M    swath2grid/DAP_Dataset.cpp
	M    swath2grid/bes.conf
	M    swath2grid/DAP_Dataset.h
	M    swath2grid/BoundingBox.cpp
	A  + swath2grid/airs.nc.0.data.bescmd
	M    swath2grid/bes.conf.in
	M    swath2grid/Makefile.am
	D    .project

	Checkpoint...

2012-12-13  Nathan Potter  <ndp@opendap.org>

	libdap: Incremental checkin of ugrid functions. Compiles but breaks at runtime with 'Symbol not found' error

	libdap: Incremental checkin of ugrid functions. Compiles but breaks at runtime with 'Symbol not found' error

	libdap: Incremental checkin of ugrid functions. Compiles but breaks at runtime with 'Symbol not found' error

	libdap: Incremental checkin of ugrid functions. Compiles but breaks at runtime with 'Symbol not found' error

	libdap: Incremental checkin of ugrid functions. Compiles but breaks at runtime with 'Symbol not found' error

2012-12-12  James Gallagher  <jgallagher@opendap.org>

	Fixed enum forward declaration.

	Changes t fix compile errors in the MeshData and MeshTopology classes.

2012-12-12  Nathan Potter  <ndp@opendap.org>

	libdap: incremental (emphasis on mental) checkin of ugrid functions

	libdap: incremental (emphasis on mental) checkin of ugrid functions

	libdap: incremental (emphasis on mental) checkin of ugrid functions

	libdap: incremental (emphasis on mental) checkin of ugrid functions

	libdap: incremental (emphasis on mental) checkin of ugrid functions

	libdap: Incremental check-in of ugrid functions. Compiles, but may not work.

2012-12-11  Nathan Potter  <ndp@opendap.org>

	libdap: Moved ugrid code to it's own directory

2012-12-10  Nathan Potter  <ndp@opendap.org>

2012-12-10  James Gallagher  <jgallagher@opendap.org>

	comments: questions for Bill

2012-12-10  Nathan Potter  <ndp@opendap.org>

2012-12-10  James Gallagher  <jgallagher@opendap.org>

	checkpoint for swath2grid

2012-12-09  James Gallagher  <jgallagher@opendap.org>

	Supports Swath to Grid - no testing, though.

2012-12-08  James Gallagher  <jgallagher@opendap.org>

	Checkpoint on the way to building a Grid variable from/for projected satellite data.

2012-12-07  Nathan Potter  <ndp@opendap.org>

	libdap: Incremental memory deallocation improvment.

2012-12-06  Nathan Potter  <ndp@opendap.org>

	libdap: Incremental memory deallocation improvment.

2012-12-05  Nathan Potter  <ndp@opendap.org>

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Incremental debugging check-in for ugrid_restrict (ugr2) code.

	libdap: Adding refactored ugrid_restrict that conforms to Ugrid specification.

	libdap: Adding refactored ugrid_restrict that conforms to Ugrid specification.

	libdap: Adding refactored ugrid_restrict that conforms to Ugrid specification.

	libdap: Adding refactored ugrid_restrict that conforms to Ugrid specification.

2012-12-03  Nathan Potter  <ndp@opendap.org>

	libdao: ugrid instrumentation

	libdao: ugrid instrumentation

	libdao: ugrid instrumentation

2012-11-30  Nathan Potter  <ndp@opendap.org>

	libdao: ugrid instrumentation

	libdap: adding ugrid tests

	libdap: adding ugrid tests

	libdao: ugrid instrumentation

2012-11-30  James Gallagher  <jgallagher@opendap.org>

	Added --with-gdal fixes to configure.ac and registered swath2grid when that option is defined (in ConstraintEvaluator.cc).

	Added some testing stuff for the swath2grid function

	Fixed - but minimal testing

2012-11-30  Nathan Potter  <ndp@opendap.org>

	libdap: incremental check of new ugrid_restrict code. Ready for AWS beta

	libdap: incremental check of new ugrid_restrict code. Removed \#if 0 blocks from new implementation.

2012-11-29  Nathan Potter  <ndp@opendap.org>

	libdap: incremental check of new ugrid_restrict code. Removed \#if 0 blocks from new implementation.

	libdap: incremental check of new ugrid_restrict code. Removed \#if 0 blocks from new implementation.

	libdap: incremental check of new ugrid_restrict code. New verion appears correct.

	libdap: incremental check of new ugrid_restrict code. Compiles but is incorrect.

2012-11-28  James Gallagher  <jgallagher@opendap.org>

	Remove NC_GOES code from swath2grid Makefile.am

2012-11-28  Nathan Potter  <ndp@opendap.org>

	libdap: Checking refactored ugrid_restrict that breaks the original code into more understandable functional blocks. Code works and correctly reproduces the output of the original implementation.

	libdap: Checking refactored ugrid_restrict that breaks the original code into more understandable functional blocks. Code works and correctly reproduces the output of the original implementation.

2012-11-28  James Gallagher  <jgallagher@opendap.org>

	function_swath2grid() can return an Array *. Untested/checkpoint.

	checkpoint for swath2grid...

2012-11-28  Nathan Potter  <ndp@opendap.org>

	libdap: Checking in partial ugrid restrict code. Compiles but may not run.

	libdap: Checking in partial ugrid restrict code. Compiles but may not run.

2012-11-27  James Gallagher  <jgallagher@opendap.org>

	Added the start of a swath2grid CE function for Hyrax - this code will be the interface between the constraint evaluator and the GDAL library. It will have to unpack a GDALDataseta and build a DAP Grid to hold the reprojected data.

	Changed svn ignore properties

2012-11-27  Nathan Potter  <ndp@opendap.org>

	libdap: First pass at new ugrid_restrit code. Check in for sharing (code compiles but may not yet work)

2012-11-27  James Gallagher  <jgallagher@opendap.org>

	Fixed teh build when --with-gdal is not used. Minor changes in swath2grid.
	M    .cproject
	M    Makefile.am
	M    swath2grid/DAP_Dataset.cpp

2012-11-26  James Gallagher  <jgallagher@opendap.org>

	checkpoint - swath2data is closer...

	Added comments to the gridfields_functions.cc code. It seems that the ugrid spec has move out from under this code over time and the code needs some tweaks to match the current version of the spec.

2012-11-23  James Gallagher  <jgallagher@opendap.org>

	Began modifying the swath2grid code so it can work with DAP objects.

	Added initial copy of GMU swath2grid lib - an edited copy of a library from their WCS 2.0 code.

2012-11-16  James Gallagher  <jgallagher@opendap.org>

	Removed errant reference to the ugrid tests - the tests are still in the netcdf handler code. There are also tests in the ncml module.

	Removed generated dirs in 'tests'.

	Removed some instrumentation from DDS.cc that was checked in by mistake. Fixed a problem in the gridfields_function.cc file where the code, that works only with arrays cast BaseTypes without testing that they were actually arrays. Now it simply ignores variables that are not arrays.

2012-11-15  James Gallagher  <jgallagher@opendap.org>

	Copied the gridfields code from netcdf handler. The code can register the ugrid_restrict() function here and that will enable its use with ncml handler.

2012-11-07  James Gallagher  <jgallagher@opendap.org>

	Source release for 3.11.7

	Changed svn ignore properties

	Changed svn ignore properties

	Changes for libdap 3.11.5 so that when the CE Function cache directory is not present, caching is off. Before the code was just crashing when a function was used. I also refactored ResponseBuilder (where the fix is) so that it's got less redundancy.

2012-11-02  James Gallagher  <jgallagher@opendap.org>

	Release 3.11.6
	M    configure.ac
	M    ChangeLog
	M    main_page.doxygen
	M    tests/package.m4
	M    INSTALL
	M    libdap.spec
	M    README
	M    NEWS
	M    doxy.conf

	Fixes for a respource leak in the server function cache code.
	M    ResponseBuilder.cc

2012-10-31  James Gallagher  <jgallagher@opendap.org>

	fixed an error in the include of DDXParserSAX2.h - OSX file system case issues

2012-10-24  James Gallagher  <jgallagher@opendap.org>

	Changed svn ignore properties

	Changes so that users - handlers primarily - of libdap don't have to change their link libraries even though ResponseBuilder has the new caching code. The first version used Connect, this version uses hacked copies of (tiny) parts of Connect. This keeps the handlers from needing libdapclient, libcurl and libuuid to link.
	M    ResponseBuilder.h
	M    ResponseBuilder.cc
	M    Makefile.am
	M    mime_util.cc

	Fixes both from a code review and to move Connect into libdap proper so that clients will link correctly (now that Connect is used both by clients and servers.
	M    HTTPCacheTable.cc
	M    ResponseBuilder.cc
	M    Makefile.am
	M    util.cc
	M    Connect.cc

	Changed svn ignore properties

	Added DAPCache3.

	Changed svn ignore properties

2012-10-23  James Gallagher  <jgallagher@opendap.org>

	These changes support server functions in DAP2 using the F-TDS/GDS 'in path' syntax. They aslo add support for retrieving the DDS and DAS from URLs with functions (both the F-TDS/GDS syntax and ours) and cache the results of function calls.
	M    Connect.h
	M    ResponseBuilder.h
	M    ConstraintEvaluator.cc
	M    DDS.cc
	M    tests/TestGrid.cc
	M    tests/expr-test.cc
	M    tests/TestStructure.cc
	M    DDXParserSAX2.cc
	M    ResponseBuilder.cc
	M    BaseType.cc
	M    DDS.h
	M    Makefile.am
	M    ce_expr.y
	M    XDRStreamUnMarshaller.cc
	M    Vector.cc
	M    ce_functions.cc
	M    mime_util.cc
	M    GridGeoConstraint.cc
	M    Connect.cc
	M    unit-tests/ResponseBuilderTest.cc
	M    Clause.cc

2012-10-16  James Gallagher  <jgallagher@opendap.org>

	Fixed case of DAP4StreamMarshaller.h - failed on linux
	M    ResponseBuilder.cc

	Fix for missing headers when --enable-dap4 is not used with configure. It's a temporary fix/hack.
	M    BaseType.h
	M    Makefile.am

	Complete - task : Write BaseTypeFactory for DAP4 Complete - task : New marshaller will be needed Refactor: Moved most of Structure up into Constructor, so it can be used by Group, too. Added a parser for DAP4 DMR documents, only just started. Tests pass both with and without --enable-dap4

2012-09-28  James Gallagher  <jgallagher@opendap.org>

	Changed to using named branches for the server release.
	A    https://scm.opendap.org/svn/branch/libdap/hyrax-1.8-release

2012-09-24  James Gallagher  <jgallagher@opendap.org>

	Added one test for the DMR response of DAP4.

	Checkpoint for changes that enable the library to return DAP4 response objects (DMR and Data). The changes are not complete, but the library builds and passes all tests when built using both the --enable-dap4 and without it.
	_M   .
	M    ResponseBuilder.h
	M    DDS.cc
	M    tests/dds-test.cc
	M    DAP4StreamMarshaller.cc
	M    HTTPCacheInterruptHandler.h
	M    ResponseBuilder.cc
	M    DDS.h
	M    DataDDS.cc
	M    Connect.cc
	M    unit-tests/DDSTest.cc
	M    unit-tests/AttrTableTest.cc
	M    unit-tests/ResponseBuilderTest.cc
	M    unit-tests/dds-testsuite/test.19b6.xml
	M    unit-tests/dds-testsuite/test.19b.xml
	M    unit-tests/dds-testsuite/test.19c.xml
	M    unit-tests/dds-testsuite/test.19d.xml
	M    unit-tests/dds-testsuite/test.19e.xml
	M    unit-tests/dds-testsuite/test.19f.xml
	M    unit-tests/testFile.cc
	M    unit-tests/testFile.h

2012-08-29  James Gallagher  <jgallagher@opendap.org>

	Updated comments
	M    Keywords2.cc

2012-07-26  James Gallagher  <jgallagher@opendap.org>

	Memory leak in XDRStreamMarshaller fixed.

	Found and fixed an error in the add_var_nocopy() method for DDS. I also added add_var_nocopy() methods to Vector and Array and noted that when a BaseType is passed to Array's ctor the add_var() method is used, thus making a copy. If the 'nocopy' behavior is desired, then pass null to the ctor and call add_var_nocopy() 'by hand.' I also changed two instances of dynamic_cast so that static_cast is used instead. These changes are backward compatible to the previous version of the library. Bumped the version up to 3.12.0

2012-07-11  James Gallagher  <jgallagher@opendap.org>

	Turned off DAP4 DDX Parser debugging

	Now the DAP4 DDX Parser should recognize the M-MIME boundary marker. Untested... Might not actually need this.

	Now DDS::print_xml_writer builds a DDX response that's correct for DAP4 - with the namespace and other stuff in there.

	Added a BasetypeFactory for DAP4 and cloned and modified a DDX parser for the same. The dds-test drive in tests can be used to test DDX documents for DAP4. The new - DAP4 - types supported are Int8, Int64 and UInt64 along with the faux types URL (Url) and UInt8 (Byte).

2012-07-09  James Gallagher  <jgallagher@opendap.org>

	Added Int8 type

2012-06-29  James Gallagher  <jgallagher@opendap.org>

	Checkpoint for DAP4 data types and supporting classes in libdap. This checkin includes atomic types - except Opaque.

2012-06-28  James Gallagher  <jgallagher@opendap.org>

	Testing commit after relocating to the https://scm... URL from inside Eclipse.

	Changes for DAP4 - fixed up operators. Testing checkin after relocating to the https://scm... URL.
	M    UInt16.h

2012-06-27  James Gallagher  <jgallagher@opendap.org>

	Removed errant instrumentation in serialize()

2012-06-22  James Gallagher  <jgallagher@opendap.org>

	DAP4 additions

	DAP4 new files

	Edits for DAP4 including Int64 and UInt64. Some tests/checks for constructor types to exclude types that should only be used for DAP4 when the software is clearly working with DAP2.

	more gnulib

	Added marcos
	A    m4/strings_h.m4
	A    m4/locale_h.m4
	A    m4/sys_types_h.m4
	A    m4/localeconv.m4
	A    m4/off_t.m4
	A    m4/mbtowc.m4
	A    m4/byteswap.m4

	gnulib update - forgotten file.

	Updated gnulib to include byteswap() functions. They are used by the DAP4StreamUnMarshaller code.

	Added some debugging output for/because of work on the GDAL handler.

2012-06-21  James Gallagher  <jgallagher@opendap.org>

	Moved c_md5_length into the DAP4Stream{Un}Marshaller classes.

2012-06-20  James Gallagher  <jgallagher@opendap.org>

	Added classes and tests for the DAP4 on-the-wire format as of the DAP4 draft specification from early June 2012. At the same time I fixed some memory problems I found in the XDRStream{Marshaller,UnMarshaller} classes - XDR objects were likely leaking memory. I also removed the checksum test feature from XDRStreamMarshaller since that is not a DAP2 feature. The DAP4 serializers support writing and reading checksums. The interfaces defined by Marshaller and UnMarshaller are unchanged although I did add methods.

2012-06-05  James Gallagher  <jgallagher@opendap.org>

	Fixed an error in the MIMEUtilTest code. The test failed when the time zone was to the east of the prime meridian. See ticket 1907.

2012-05-31  James Gallagher  <jgallagher@opendap.org>

	doxygen updates plus added an example function for the MIIC folks to ce_functions.cc.
	M    configure.ac
	M    main_page.doxygen
	M    ConstraintEvaluator.cc
	A    doxy.conf.in
	A    main_page.doxygen.in
	M    ce_functions.cc
	M    doxy.conf

2012-05-11  Nathan Potter  <ndp@opendap.org>

	libdap: updating version number

2012-05-01  Nathan Potter  <ndp@opendap.org>

	libdap: Added lib64 support to dap-config

2012-04-26  James Gallagher  <jgallagher@opendap.org>

	Removed the last of the OLD_FILE_METHODS implementations.

	Removed most of the OLD_*_METHODS - only those in the mime_util code remain.

2012-04-25  James Gallagher  <jgallagher@opendap.org>

	Refactor: coded all the libdap output methods so that the logic is written just once (in the XMLWriter for XML and ostream for the curl braces). Older code is just a wrapper for those methods. All of the FILE* methods calls the ostream methods using an instance of ostringstream; all of the FILE* ostream xml methods are wrappers for the XMLWriter methods.
	M    DODSFilter.cc
	M    XMLWriter.h
	M    Int16.cc
	M    XMLWriter.cc
	M    DDS.cc
	M    Array.cc
	M    tests/expr-test.cc
	M    tests/TestByte.cc
	M    tests/io_test.cc
	M    UInt16.cc
	M    Byte.cc
	M    ResponseBuilder.cc
	M    GNU/GetOpt.cc
	M    BaseType.cc
	M    Makefile.am
	M    Int32.cc
	M    Float32.cc
	M    AttrTable.cc
	D    grammarfiles
	M    Structure.cc
	M    Vector.cc
	M    getdap.cc
	M    Str.cc
	M    Sequence.cc
	M    mime_util.cc
	M    Constructor.cc
	M    XDRStreamMarshaller.h
	M    util.cc
	M    Float64.cc
	M    UInt32.cc
	M    XDRStreamMarshaller.cc
	M    Grid.cc
	M    Connect.cc
	M    unit-tests/MarshallerTest.cc

2012-04-24  James Gallagher  <jgallagher@opendap.org>

	Fixed lack of loop index init in setup().

2012-04-20  James Gallagher  <jgallagher@opendap.org>

	Found an uninitialize loop index variable; fixed and the test stopped faulting.
	M    unit-tests/MarshallerTest.cc

	Build fixes for OSX

	Patch to configure.ac - fixed the CHECKSUMS_DEFINED problem from yesterday's check in.

2012-04-19  James Gallagher  <jgallagher@opendap.org>

	Removed more of the ugrid function code.

	Removed an errant AC_OUPUT item related to ugrids.
	M    configure.ac

2012-04-18  James Gallagher  <jgallagher@opendap.org>

	Removed the ugrid function from libdap; it's now in the netcdf_handler
	M    configure.ac
	M    ce_functions.h
	M    ce_functions.cc
	M    dap-config.in

2012-04-17  James Gallagher  <jgallagher@opendap.org>

	Changes for the gridfields build.
	M    configure.ac
	M    Makefile.am

	Merge/version update
	_M   .
	_M   OSX_Resources/Info.plist.proto
	_M   tests/old_tests/grid-func-testsuite
	_M   tests/old_tests/server-testsuite
	_M   mime_util.h
	M    NEWS
	_M   mime_util.cc
	_M   unit-tests/MIMEUtilTest.cc
	_M   unit-tests/fdiostreamTest.cc
	_M   fdiostream.h

	Merge of ugrid code - I tried to merge from the branch, but I wound up merging files largely by hand.
	M    configure.ac
	M    ce_functions.cc
	M    dap-config.in

	Updated NEWS
	M    NEWS

2012-04-13  James Gallagher  <jgallagher@opendap.org>

	After merge with hyrax 1.8 release branch and full build w/o test failures.
	_M   .
	M    ChangeLog
	_M   OSX_Resources/Info.plist.proto
	M    HTTPCacheTable.cc
	_M   tests/old_tests/grid-func-testsuite
	_M   tests/old_tests/server-testsuite
	MM   mime_util.h
	MM   mime_util.cc
	M    XDRStreamMarshaller.cc
	_M   unit-tests/MIMEUtilTest.cc
	_M   unit-tests/fdiostreamTest.cc
	_M   fdiostream.h

2012-04-12  James Gallagher  <jgallagher@opendap.org>

	Result of merging changes from the trunk. This code was then merged to the trunk and tagged.
	_M   .
	M    configure.ac
	M    ChangeLog
	_M   OSX_Resources/Info.plist.proto
	M    HTTPCacheTable.cc
	_M   tests/old_tests/grid-func-testsuite
	_M   tests/old_tests/server-testsuite
	M    tests/TestArray.cc
	M    tests/package.m4
	M    ResponseBuilder.cc
	M    Makefile.am
	_M   mime_util.h
	M    Structure.cc
	M    Vector.cc
	_M   mime_util.cc
	M    XDRStreamMarshaller.h
	M    XDRStreamMarshaller.cc
	M    Grid.cc
	_M   unit-tests/MIMEUtilTest.cc
	_M   unit-tests/fdiostreamTest.cc
	M    unit-tests/Makefile.am
	M    unit-tests/MarshallerTest.cc
	M    HTTPConnect.h
	_M   fdiostream.h

	Repaired the MarshallerTest by removing the checksums tests when that feature is not compiled into the code.
	M    unit-tests/MarshallerTest.cc

	Removed; generated
	D    tests/package.m4

	tiny change to match the version number update on the h 1.8 branch
	M    configure.ac

	Merge of the hyrax 1.8 release branch version of libdap plus the new checksum code. The code on the hyrax 1.8 release branch will be bumped up to version 3.11.4 and tagged as such.
	_M   .
	M    Error.lex
	M    DODSFilter.cc
	A  + XMLWriter.h
	M    Structure.h
	M    Sequence.h
	M    SignalHandler.cc
	M    configure.ac
	M    COPYING
	M    ChangeLog
	M    Ancillary.cc
	_M   OSX_Resources/Info.plist.proto
	M    gse.lex
	A  + XMLWriter.cc
	M    DDS.cc
	A  + HTTPCacheMacros.h
	M    HTTPCacheTable.cc
	M    BaseType.h
	M    Array.cc
	M    tests/das-testsuite/test.34.das.base
	_M   tests/old_tests/grid-func-testsuite
	_M   tests/old_tests/server-testsuite
	M    tests/expr-testsuite/test.6b.base
	M    tests/expr-testsuite/test.5e.base
	M    tests/package.m4
	M    tests/Makefile.am
	M    tests/dds-test.cc
	M    INSTALL
	M    DDXParserSAX2.cc
	M    AlarmHandler.h
	M    libdap.spec
	M    ResponseBuilder.cc
	M    GNU/GetOpt.h
	M    README
	M    BaseType.cc
	M    DDS.h
	M    Makefile.am
	M    Constructor.h
	M    HTTPCache.cc
	M    ce_expr.y
	A  + getdap.man1
	M    dds.lex
	M    util.h
	M    AttrTable.cc
	_M   mime_util.h
	M    Grid.h
	M    NEWS
	M    HTTPConnect.cc
	M    Structure.cc
	M    Sequence.cc
	M    das.lex
	M    ce_functions.cc
	M    AttrTable.h
	_M   mime_util.cc
	M    GridGeoConstraint.cc
	M    Constructor.cc
	M    util.cc
	A  + dap-config.man1
	M    Grid.cc
	M    unit-tests/dasT.cc
	M    unit-tests/AISMergeTest.cc
	M    unit-tests/DODSFilterTest.cc
	M    unit-tests/HTTPCacheTest.cc
	M    unit-tests/DDSTest.cc
	M    unit-tests/AttrTableTest.cc
	MM   unit-tests/MIMEUtilTest.cc
	_M   unit-tests/fdiostreamTest.cc
	M    unit-tests/ddsT.cc
	M    unit-tests/ByteTest.cc
	M    unit-tests/ResponseBuilderTest.cc
	M    unit-tests/generalUtilTest.cc
	A  + unit-tests/dds-testsuite/test.19d1.xml
	A  + unit-tests/dds-testsuite/test.19b6.xml
	A  + unit-tests/dds-testsuite/test.19b.xml
	A  + unit-tests/dds-testsuite/test.19c.xml
	A  + unit-tests/dds-testsuite/test.19d.xml
	A  + unit-tests/dds-testsuite/test.19e.xml
	A  + unit-tests/dds-testsuite/test.19f.xml
	A  + unit-tests/dds-testsuite/test.19g.xml
	M    unit-tests/testFile.cc
	M    unit-tests/CEFunctionsTest.cc
	A  + unit-tests/testFile.h
	A  + unit-tests/ddx-testsuite/response_builder_send_data_ddx_test_3.xml
	A  + unit-tests/ddx-testsuite/response_builder_send_data_ddx_test.xml
	A  + unit-tests/ddx-testsuite/response_builder_send_ddx_test.xml
	M    unit-tests/Makefile.am
	M    unit-tests/MarshallerTest.cc
	M    dds.y
	_M   fdiostream.h
	M    GeoConstraint.cc
	M    Array.h
	M    ce_expr.lex
	M    dap-config.in

2012-04-11  James Gallagher  <jgallagher@opendap.org>

	Removed the 'override' file feature - it was never used and its implementaion was a problem.
	M    HTTPCacheTable.cc
	M    mime_util.h
	M    mime_util.cc
	M    XDRStreamMarshaller.cc

	Initial implementation of checksums using MD5. This shows that it is not going to trash performance to compute checksums/ The code to embed the checksums in the serialized data stream and then extract them in/on the client has not been added. Use configure --enable-checksums to get the feature in libdap.

	Indenting fixes.

	Fixed an error message to be a bit more intelligable.

2012-04-09  Patrick West  <pwest@opendap.org>

	If curl is not in a standard location then the makefiles need to know where it is to build tests. curl/types.h is no longer included. M    tests/Makefile.am M    unit-tests/Makefile.am M    HTTPConnect.h M    dap-config.in

2012-02-16  James Gallagher  <jgallagher@opendap.org>

	Added unistd .h to ResponseBuilder.cc

2012-02-07  James Gallagher  <jgallagher@opendap.org>

	Version 3.11.3

	Removed the static curl libs from dap-config.

2012-01-17  James Gallagher  <jgallagher@opendap.org>

	News was updated.
	M    NEWS

2012-01-10  James Gallagher  <jgallagher@opendap.org>

	Update for Hyrax 1.8 release.
	M    ChangeLog
	M    tests/package.m4
	M    INSTALL
	M    README
	M    NEWS

2012-01-04  James Gallagher  <jgallagher@opendap.org>

	version number bump in NEWS

2011-12-30  James Gallagher  <jgallagher@opendap.org>

	Bumped up the versions in libdap to 3.11.2. Not sure if this will be the version number we use for the release.

	Fixed the rpm build; included the man page stuff.
	M    libdap.spec

	Added HTTPCacheMacros.h

2011-12-29  James Gallagher  <jgallagher@opendap.org>

	Fixes for distcheck given the new man pages
	M    Makefile.am

	Added man pages for getdap and dap-config
	M    Makefile.am
	A    getdap.man1
	A    dap-config.man1

	Removed calls to exit(). Fixed the FSF address. Half of ticket 1868.

2011-12-19  James Gallagher  <jgallagher@opendap.org>

	comment fixes

2011-11-30  James Gallagher  <jgallagher@opendap.org>

	Formatting, Spelling and an error message's text fixed.

	Fix for Fedora builds; the extra newlines in these baseline files are likely breaking the tests
	M    tests/expr-testsuite/test.6b.base
	M    tests/expr-testsuite/test.5e.base

2011-11-23  Patrick West  <pwest@opendap.org>

	With HTTPConnect including CURL headers, added CURL_CFLAGS to the --cflags option M    dap-config.in

	CURL_CFLAGS was not being used when compiling tests. Added. M    unit-tests/Makefile.am

	curl includes were not being included properly. Works if in common place, but not if in custom location. M    tests/Makefile.am

	curl/types.h is deprecated and no longer needed M    HTTPConnect.h

2011-11-16  James Gallagher  <jgallagher@opendap.org>

	AttrTable was using id2www() to escape spaces and other characters in attribute names. This was done probably because of the spaces (spaces in the attribute names break the DAP2 DAS object parser), but no matter. It was breaking DAS and DDX objects because names with '%' characters in them were mangled. I replaced id2www and www2id with new functions that encode/decode only spaces. I have not fiddled with the find functions; it's fine to use names with spaces in them with the API, but the printed representation of the DAS will show those spaces as %20. Similarly, when the printed representation is parsed, those %20 escape codes are replaced with real spaces. This means that the names in the binary objects and XML representation are correct.

2011-11-15  James Gallagher  <jgallagher@opendap.org>

	Fix for ticket 1841 - the xml attribute 'base' in the Dataset root element should have been preceeded by the namespace 'xml'. It is now.

2011-11-13  James Gallagher  <jgallagher@opendap.org>

	Fixed, I hope, the problem with the xmlTextWriter code in version 2.6 of libxml. I think what was happening was really tripping over an odd feature of the xmlTextWriter API where the TextWriter object has to be freed before the pointer it has been writing to can be used. Actually, I suspect that freeing the object calls the buffer flush function, so calling that would probably work, too. I opted for the call sequence in the only example I can dig up...

	Fix for ticket 1837. The code libxml2 was escaping attributes with with OtherXML, turning them into useless goo. I switched from the ...WriteString to ...WriteRaw function for this type of attribute and order was restored.

2011-10-31  Patrick West  <pwest@opendap.org>

	The code was printing a blank line when certain conditions existed. Removed that code. M    DDS.cc

2011-10-27  James Gallagher  <jgallagher@opendap.org>

	Updates for the new DDX tests... nearly done

2011-10-24  Patrick West  <pwest@opendap.org>

	Forgot a quote M    dap-config.in

	Added xml2 includes to cflags M    dap-config.in

2011-10-24  James Gallagher  <jgallagher@opendap.org>

	some poking around regarding the DDX/XML bug (1829). Doesn't look like it's in libdap. Some cleanup, though.

	Fixed the distcheck target.
	M    unit-tests/dasT.cc
	M    unit-tests/AISMergeTest.cc
	M    unit-tests/MIMEUtilTest.cc
	M    unit-tests/ddsT.cc
	M    unit-tests/ByteTest.cc
	M    unit-tests/Makefile.am

2011-10-24  Nathan Potter  <ndp@opendap.org>

	libdap: Fixed problems with libxml dependencies.

2011-10-22  James Gallagher  <jgallagher@opendap.org>

	Added testFle.h in unit-tests

2011-10-21  James Gallagher  <jgallagher@opendap.org>

	Added libparsers_la_CPPFLAGS so that -I for libxml2 will be used when building the grammar files (really only needed for the DAS stuff?). Also fixed minor warning in HTTPCache where a File* could be used uninitialized.
	M    Makefile.am
	M    HTTPCache.cc

	I added a new method to DDS that can insert a variable anywhere in the DDS. I also added 'nocopy' versions of the new insert_var() method and the older ad_var() method. Once the ncml handler stabilizes, we can start using those methods to boost performance. Lastly, I forgot to add the new XMLWriter class on the last commit,

2011-10-12  James Gallagher  <jgallagher@opendap.org>

	I added a new method to BaseType, DDS and DAS: print_xml_writer() that takes a XMLWriter object and uses libxml2's xml writer API to build the DDX response. This should fix all of our woes WRT xml encoding. The new method is called by the DDS::print_xml method although it could be used in place of that method since it has the same parameters. I added tests and, in the course of that, modified the way some of the tests are done (using files instead of string variables for the regexs). I also tried adding some globbing functions to the util.cc file but those proved less than totally useful - I've left them there all the same.

2011-09-23  James Gallagher  <jgallagher@opendap.org>

	Fix for the unit test of get_request_size(). For this function, different compilers return different values for sizeof(string) so I made the unit test an OR of two values. Fixed here on the branch and on the trunk.
	M    unit-tests/DDSTest.cc

	Added a change to the DDS unit tests so that older compilers that report the sizeof(string) as 4 bytes will not bork the get_request_size unit test.
	M    unit-tests/DDSTest.cc

2011-09-21  James Gallagher  <jgallagher@opendap.org>

	Hyrax 1.8
	A    http://scm.opendap.org/svn/branch/libdap/3.11.2

2011-09-13  James Gallagher  <jgallagher@opendap.org>

	Refactor - no change to the ABI.

2011-08-24  James Gallagher  <jgallagher@opendap.org>

	Merge of Hyrax 1.7.1
	_M   .
	_M   OSX_Resources/Info.plist.proto
	M    DAS.h
	M    DDS.cc
	_M   tests/old_tests/grid-func-testsuite
	_M   tests/old_tests/server-testsuite
	M    tests/expr-testsuite/test.6b.base
	M    DDS.h
	M    BaseType.cc
	M    Constructor.h
	M    AttrTable.cc
	_M   mime_util.h
	_M   mime_util.cc
	M    Constructor.cc
	M    unit-tests/cache-testsuite/Makefile.am
	_M   unit-tests/MIMEUtilTest.cc
	_M   unit-tests/fdiostreamTest.cc
	_M   fdiostream.h

2011-08-17  James Gallagher  <jgallagher@opendap.org>

	Some minor changes to make the DBG() statements easier to decipher; some additions to error messages; and the removal of the old code used to merge hdf4 DAS and DDS objects.

2011-08-02  James Gallagher  <jgallagher@opendap.org>

	Hacked the Makefile.am so that distcheck works with older versions of automake. The distcheck target was failing due to a directory made by a unit test not being removed during distclean.
	M    unit-tests/cache-testsuite/Makefile.am

2011-07-15  James Gallagher  <jgallagher@opendap.org>

	Fixed an issues with the response too big error message - the sizes were returned in Bytes, but the units were listed as KB. Now the values are in KB (truncated, but good enough).

2011-06-30  Patrick West  <pwest@opendap.org>

	Merge hyrax 1.7 branch to trunk

2011-06-09  James Gallagher  <jgallagher@opendap.org>

	Added support for the first version of response size limits - does not do much for Sequences.

2011-05-30  James Gallagher  <jgallagher@opendap.org>

	Added get/set_response_limit() and get_request_size() (first version) to libdap:DDS.

2011-05-17  James Gallagher  <jgallagher@opendap.org>

	Errant char in Makefile.am
	M    unit-tests/Makefile.am

2011-05-10  James Gallagher  <jgallagher@opendap.org>

	Added --with-curl and --with-xml2 to configure.

2011-05-04  James Gallagher  <jgallagher@opendap.org>

	h 1.7 edits
	M    tests/package.m4

2011-04-25  James Gallagher  <jgallagher@opendap.org>

	3.9.1
	M    configure.ac
	M    ChangeLog
	M    Makefile.am
	M    NEWS

	3.11.1
	M    configure.ac
	M    ChangeLog
	M    INSTALL
	M    libdap.spec
	M    README
	M    NEWS

	Removed doc rpm - this breaks when the build hosts lacks dot or dot does not make inamges.
	M    libdap.spec

2011-04-20  James Gallagher  <jgallagher@opendap.org>

	Hyrax 1.7 releaseHyrax 1.7 release
	A    http://scm.opendap.org/svn/branch/libdap/3.11.1

2011-04-08  James Gallagher  <jgallagher@opendap.org>

	Build fixes for h 1.7 osx meta package
	M    Makefile.am

2011-03-28  James Gallagher  <jgallagher@opendap.org>

	Loop/Race-condition in HTTPCacheTable.h fixed

	1.7RC1

2011-03-17  Nathan Potter  <ndp@opendap.org>

	libdap: Automated change of version number for OSX package builds.

2011-03-08  James Gallagher  <jgallagher@opendap.org>

	Merge for hyrax	1.7 from the hyrax_1.6.2_release branch	of shrew to the	trunk
	_M   .
	M    RValue.cc
	M    DODSFilter.cc
	M    OSX_Resources/InstallationCheck
	M    OSX_Resources/update_mac_package_contents.pl
	R  + OSX_Resources/Info.plist
	A  + OSX_Resources/Info.plist.proto
	M    DDS.cc
	M    Array.cc
	_M   tests/old_tests/grid-func-testsuite
	_M   tests/old_tests/server-testsuite
	M    DDXParserSAX2.cc
	M    AlarmHandler.h
	M    libdap.spec
	M    BaseType.cc
	M    Makefile.am
	_M   mime_util.h
	M    Vector.cc
	M    ce_functions.cc
	MM   mime_util.cc
	M    GridGeoConstraint.cc
	M    Constructor.cc
	M    DAS.cc
	M    Grid.cc
	M    escaping.cc
	_M   unit-tests/MIMEUtilTest.cc
	_M   unit-tests/fdiostreamTest.cc
	_M   fdiostream.h
	M    Clause.cc

2011-03-03  Patrick West  <pwest@opendap.org>

	These files are generated D    gl/alloca.h D    gl/arg-nonnull.h D    gl/langinfo.h D    gl/stdint.h D    gl/c++defs.h D    gl/wctype.h D    gl/warn-on-use.h D    gl/wchar.h D    gl/unistd.h

2011-03-03  James Gallagher  <jgallagher@opendap.org>

	All tests back in.
	M    unit-tests/HTTPConnectTest.cc

	Fixed HTTPCache hack that provides access to the cached response body. Also fixed an error in Keywords that broke a gazillion tests.

	Eh - ctor fix for Keywords

	Keywords2 was modified so it'll build on older (4.1) gcc compilers (with an older stl implementation).

	Modified HTTPConnect to store the filename of the cached body when returning cached responses. Use the HTTPResponse::get_file() method to use this. Once the HTTPResponse is deleted, the name is no loner valid.

2011-03-01  James Gallagher  <jgallagher@opendap.org>

	Added Keywords to DDS and modified the behavior of set_dap_version so that '2' parses as '2.0' (really 'x' --> 'x.0').

2011-03-01  Patrick West  <pwest@opendap.org>

	Created from .in file. D    gl/stdlib.h

2011-02-28  Patrick West  <pwest@opendap.org>

	added include of cstring for strlen and strncpy M    ResponseBuilder.cc

2011-02-25  James Gallagher  <jgallagher@opendap.org>

	Removed old Keywords impl.

	Keywords2 now tests for legal values.

	Keywords2 works - this syntax looks like functions but is to be parsed before the CE is formally processed.

	Keywrods2Test.cc...

	Keywords2...

2011-02-24  James Gallagher  <jgallagher@opendap.org>

	new Keywords implementations started.

	Next version of Keywords - This implements the version where keywords are bound to a pair made up of a kind and a value. Probably won't use this because of potential problems with ambiguity - it's not possible to guarantee that 'dap3.2' won't be an identifier in a data set.

	g++ 4.? warnings about char* conversion in HTTPConnectTest

	New Keywords class first version working/tested

2011-02-23  James Gallagher  <jgallagher@opendap.org>

	Factored keywords out of ResponseBuilder and into their own class (Keywords).

2011-02-15  Patrick West  <pwest@opendap.org>

	This file is automatically generated D    gl/configmake.h

2011-02-08  James Gallagher  <jgallagher@opendap.org>

	Initial cut at support for Version information in the CE.

	I modified the documentation for mime_util and ResponseBuilder so that they describe a truer version of the world - most of the MIME header code is no longer used by libdap or the BES/handlers (instead the headers are added by the OLFS). Some of the mime_util code is used by the client side, however, and a tiny bit is used by the parts of ResponseBuilder I added so that the BES can use ResponseBuilder in those cases where there is no OLFS.

	Reverted to pre-DAP4 hack versions of these... The new features are implemented in ResponseBuilder.
	M    DODSFilter.cc
	M    DODSFilter.h

2011-02-07  James Gallagher  <jgallagher@opendap.org>

	ResponseBuilder now assumes that the default protocol for a response is the DAP_PROTOCOL_VERSION read from config.h. This can be overridden using a parameter to the various set_mime_*() methods it defines (which are different from those in mime_util.cc). NB: These are not used by Hyrax, but the BES might use these sometimes and I've got mods pending in the BES to use this code.

	Comments about ResponseBuilder

	Comments about ResponseBuilder

	Comments about ResponseBuilder

	Added comment about ResponseBuilder

	Added comment about ResponseBuilder

2011-02-03  James Gallagher  <jgallagher@opendap.org>

	These are templates needed by the code in 'gl.' I think ...
	A    conf/c++defs.h
	A    conf/warn-on-use.h
	A    conf/arg-nonnull.h

2011-02-02  James Gallagher  <jgallagher@opendap.org>

	Removed these files as a result of the massive commit
	D    gl/m4/wchar.m4
	D    gl/m4/ulonglong.m4
	D    gl/m4/absolute-header.m4
	D    gl/m4/wctype.m4
	D    gl/alloca_.h
	D    gl/wchar_.h
	D    gl/stdint_.h
	D    gl/stdbool_.h
	D    gl/unistd_.h
	D    gl/wctype_.h
	D    gl/stdlib_.h
	D    gl/alloca.c

	Added as part of the massive update.
	A    gl/m4/fcntl-o.m4
	A    gl/m4/configmake.m4
	A    gl/m4/btowc.m4
	A    gl/m4/00gnulib.m4
	A    gl/m4/locale-fr.m4
	A    gl/m4/langinfo_h.m4
	A    gl/m4/mbsinit.m4
	A    gl/m4/warn-on-use.m4
	A    gl/m4/wchar_h.m4
	A    gl/m4/wcrtomb.m4
	A    gl/m4/locale-zh.m4
	A    gl/m4/stddef_h.m4
	A    gl/m4/mbstate_t.m4
	A    gl/m4/wctype_h.m4
	A    gl/m4/nl_langinfo.m4
	A    gl/m4/locale-ja.m4
	A    gl/m4/wchar_t.m4
	A    gl/m4/multiarch.m4
	A    gl/alloca.h
	A    gl/arg-nonnull.h
	A    gl/langinfo.h
	A    gl/mbsinit.c
	A    gl/stdint.h
	A    gl/wcrtomb.c
	A    gl/btowc.c
	A    gl/c++defs.h
	A    gl/warn-on-use.h
	A    gl/wctype.h
	A    gl/streq.h
	A    gl/alloca.in.h
	A    gl/langinfo.in.h
	A    gl/configmake.h
	A    gl/verify.h
	A    gl/wchar.h
	A    gl/iswblank.c
	A    gl/mbrtowc.c
	A    gl/wchar.in.h
	A    gl/stdint.in.h
	A    gl/stdbool.in.h
	A    gl/unistd.in.h
	A    gl/stddef.in.h
	A    gl/wctype.in.h
	A    gl/nl_langinfo.c
	A    gl/stdlib.in.h

	Massive (and massively overdue) updates - this may be the fix for ticket #1702 But regardless, it's certainly needed.
	M    gl/m4/wint_t.m4
	M    gl/m4/localcharset.m4
	M    gl/m4/stdint.m4
	M    gl/m4/stdbool.m4
	M    gl/m4/gnulib-common.m4
	M    gl/m4/malloc.m4
	M    gl/m4/regex.m4
	M    gl/m4/gnulib-comp.m4
	M    gl/m4/mbrtowc.m4
	M    gl/m4/unistd_h.m4
	M    gl/m4/longlong.m4
	M    gl/m4/ssize_t.m4
	M    gl/m4/include_next.m4
	M    gl/m4/gnulib-cache.m4
	M    gl/m4/glibc21.m4
	M    gl/m4/codeset.m4
	M    gl/m4/stdlib_h.m4
	M    gl/m4/gnulib-tool.m4
	M    gl/m4/alloca.m4
	M    gl/m4/extensions.m4
	M    gl/localcharset.c
	M    gl/regex_internal.c
	M    gl/malloc.c
	M    gl/localcharset.h
	M    gl/regex_internal.h
	M    gl/regexec.c
	M    gl/ref-del.sin
	M    gl/stdlib.h
	M    gl/regcomp.c
	M    gl/ref-add.sin
	M    gl/regex.c
	M    gl/unistd.h
	M    gl/config.charset
	M    gl/regex.h
	M    gl/Makefile.am
	M    gl/gettext.h

	Corrected

2011-01-31  James Gallagher  <jgallagher@opendap.org>

	Expanded DDS so that it's easier to get the protocol version string; moved the relevant MIME header code into ResponseBuilder on the assumption that someone might be using this still (like CEDAR). Updated the unit tests.

2011-01-29  James Gallagher  <jgallagher@opendap.org>

	Leaner version of ResponseBuilder - the new replacement for DODSFilter.

2011-01-28  James Gallagher  <jgallagher@opendap.org>

	Commented out test code that got in SVN by mistake (in expr-test.cc)

	Changes/Additions for Version via Projection Functions and/or Keywords.

2010-10-28  Michael Johnson  <michael.patrick.johnson@gmail.com>

	Merge from Hyrax 1.6.2 Shrew Release Branch.
	Not clear what the property modifications are, the ones I checked seem the same.  I'm just letting them go since they seem harmless.

2010-09-14  James Gallagher  <jgallagher@opendap.org>

	Fixed a bug in the www2id() function of escaping.cc that was causing symbols that start with a percent sign to be mangled. It's not clear why the server was/is using this, but this fixes the function and we'll have to sort out whether using the function is correct later. It may be that the BES is routing the DAS through an unnecessary cycle of print/parse/print operations.

	Added tests for www2id() and the case where an attribute starts with a percent sign.

	Spelling errors in GeoConstraint.cc

	Fixed an error in calling long_to_string with doubles in exception handling code - found during testing.

	Updated for fixes to a problem foud in initial testing of the server for the 1.6.2 release.

	Added a second version of eval_function_clauses() that takes and returns a DataDDS instead of a DDS. This enables easier use of the method in handlers that are using subclasses of the types and building responses from DataDDS objects passed around in the BES. I also updated some of the library version information in configure.ac to match more closely the addition to ConstraintEvaluator's interface.

2010-09-13  James Gallagher  <jgallagher@opendap.org>

	Changes for 3.11.0 release
	M    configure.ac
	M    ChangeLog
	M    INSTALL
	M    libdap.spec
	M    README
	M    NEWS
	M    ce_functions.cc

2010-09-07  James Gallagher  <jgallagher@opendap.org>

	Added to doc comments

2010-09-03  James Gallagher  <jgallagher@opendap.org>

	Updated the version number for geogrid.

2010-09-02  James Gallagher  <jgallagher@opendap.org>

	Constraint expressions can now include multiple function calls. Two tests included. Some fixes were added to expr-test.cc which was looking a little long in the tooth...

	Added new functions to ConstraintEvaluator. Untested.

2010-09-01  Michael Johnson  <michael.patrick.johnson@gmail.com>

	o Fix for memory bug in ticket #1637.

2010-08-28  James Gallagher  <jgallagher@opendap.org>

	Grid now prints the XML declaration correctly when a constrained Grid variable's type decays to a Structure. The expr-test program now has an XML option (-x) for use with constrained DDS/DDX output.

2010-08-27  James Gallagher  <jgallagher@opendap.org>

	Fixed the Grid projection bug - should clean up the code a bit. The error was in projection yields grid which was not correctly testing that each Grid dimension had a matching Map vector that was in the current projection.

	Added regression tests for the new version of geogrid(). Removed some old stuff from the dejagnu days.

	Added more tests (unit tests) for GridGeoConstraint for the Grid, Array, Array, ..., version of the constructor.

	geogrid() now takes both (grid, <box points>) and (grid, lat array, lon array <box points>). This includes some minimal testing of the new code.

2010-08-26  James Gallagher  <jgallagher@opendap.org>

	Changes to the geogrid function so that it can take lat/lon maps as explicit arguments.

2010-07-16  James Gallagher  <jgallagher@opendap.org>

	I removed the AIS functions in libdap 3.8 but failed to correctly set the Age of the library in libdap 3.10. Fixed.

2010-06-17  Michael Johnson  <michael.patrick.johnson@gmail.com>

	Removed debug AM_CXXFLAGS entries.

2010-05-24  James Gallagher  <jgallagher@opendap.org>

	Updated tests given that the nph-dods alias is no longer supported by test.opendap.org
	M    unit-tests/HTTPCacheTest.cc
	M    unit-tests/generalUtilTest.cc

2010-05-19  Patrick West  <pwest@opendap.org>

	Seems to fix bug #1563. When adding an attribute table to the DAS when a container is currently set, set that new attribute table to not be global using set_is_global_attribute(false) M    DAS.cc

2010-05-12  James Gallagher  <jgallagher@opendap.org>

	Fixed etag for 304 response test - the etag changed when the server was updated.
	M    unit-tests/HTTPConnectTest.cc

2010-05-11  James Gallagher  <jgallagher@opendap.org>

	Merge from the shrew-1.6 branch (which was tagged 3.10.2)
	_M   .
	M    SignalHandler.cc
	M    configure.ac
	M    ChangeLog
	M    conf/libdap.m4
	M    DDS.cc
	M    BaseType.h
	_M   tests/old_tests/grid-func-testsuite
	_M   tests/old_tests/server-testsuite
	M    tests/das-test.cc
	M    tests/package.m4
	M    tests/DASTest.at
	M    tests/DDSTest.at
	M    tests/expr-test.cc
	M    tests/EXPRTest.at
	M    tests/Makefile.am
	M    tests/dds-test.cc
	M    INSTALL
	M    DDXParserSAX2.cc
	M    libdap.spec
	M    README
	M    DDS.h
	M    BaseType.cc
	M    Makefile.am
	M    Constructor.h
	M    RCReader.cc
	M    parser-util.cc
	M    AttrTable.cc
	_M   mime_util.h
	M    Grid.h
	M    NEWS
	M    ce_functions.cc
	M    AttrTable.h
	_M   mime_util.cc
	M    Constructor.cc
	M    Grid.cc
	M    Connect.cc
	M    escaping.cc
	M    unit-tests/DODSFilterTest.cc
	M    unit-tests/DDSTest.cc
	_M   unit-tests/MIMEUtilTest.cc
	MM   unit-tests/fdiostreamTest.cc
	M    unit-tests/generalUtilTest.cc
	M    unit-tests/dds-testsuite/test.19b.das
	M    unit-tests/dds-testsuite/test.19e.das
	M    unit-tests/dds-testsuite/test.19g.das
	A  + unit-tests/dds-testsuite/coads_climatology.nc.dds
	A  + unit-tests/dds-testsuite/coads_climatology.nc.das
	M    unit-tests/Makefile.am
	M    unit-tests/RCReaderTest.cc
	M    unit-tests/MarshallerTest.cc
	_M   fdiostream.h

	ci prior to merge
	M    tests/DASTest.at
	M    tests/DDSTest.at
	M    tests/EXPRTest.at

	Vesion update.
	M    tests/package.m4

2010-05-06  Patrick West  <pwest@opendap.org>

	Fixed problem with checking libdap version M    libdap.m4

2010-05-05  James Gallagher  <jgallagher@opendap.org>

	Added these test files.
	A    dds-testsuite/coads_climatology.nc.dds
	A    dds-testsuite/coads_climatology.nc.das

2010-05-04  James Gallagher  <jgallagher@opendap.org>

	Updated for hyrax 1.6 (libdap3.10.2) RC1
	M    configure.ac
	M    ChangeLog
	M    INSTALL
	M    libdap.spec
	M    README
	M    NEWS

2010-04-30  James Gallagher  <jgallagher@opendap.org>

	Fixed an error in AttrTable::is_global_attribute() where the function did not always return a value.
	M    AttrTable.cc

	Commented the fdiostreamTest stuff - automake was complaining. Removed a bunch of AIS-related things that are no longer needed.

2010-04-30  Michael Johnson  <michael.patrick.johnson@gmail.com>

	AttrTable.cc, AttrTable.h: Changes for #1544.  clone() wasn't preserving parent/child ptrs properly leading to dangling pointers.

2010-04-26  Patrick West  <pwest@opendap.org>

	Fixed version check when a (alpha) or b (beta) at the end of the version M    conf/libdap.m4

2010-04-23  James Gallagher  <jgallagher@opendap.org>

	Modified the transfer_attributes code so that it checks the is_global property for individual attributes and containers (before it was just containers). This entailed a change to AttrTable in both the way it tracks and sets that property. Fixed the unit tests. Several tests became invalid because they tested handler-specific features that are not delt with in the handlers themselves.

2010-04-22  Michael Johnson  <michael.patrick.johnson@gmail.com>

	Added version update to INSTALL as well for #1540

2010-04-22  Patrick West  <pwest@opendap.org>

	Requires libxml2 2.6.16 M    libdap.spec

2010-04-21  James Gallagher  <jgallagher@opendap.org>

	Initial check in of the new methods to handle the transfer (copy) of attributes from the DAS to the DDS object. The new approach includes a new set of methods that are defined in BaseType and Constructor that are designed to be subclassed by handlers that build odd DAS objects. The default methods handle merging a DAS the follows the DAP 2.0 and later specs. The method in DDS calls these 'type-based' methods. The old approach is commented out using #if 0 ... #endif.

2010-04-21  Michael Johnson  <michael.patrick.johnson@gmail.com>

	Added #include <cstdarg> for va_start and va_end    Some systems don't find it by default.

2010-04-16  Michael Johnson  <michael.patrick.johnson@gmail.com>

	Fixed invalid memory and broken invariant problem with using deleted copy in Grid::add_var().  Ticket #1530 revealed this.

2010-04-15  James Gallagher  <jgallagher@opendap.org>

	Added dits-hook target to remove the .svn subdirs that were being included in the dist files.
	M    libdap/Makefile.am
	M    bes/Makefile.am

	Added Requires: lines to the .spec files for libdap and bes.

2010-03-23  James Gallagher  <jgallagher@opendap.org>

	Fixes for distcheck build on 64-bit linux (FC 11)
	M    SignalHandler.cc
	M    RCReader.cc
	M    parser-util.cc
	M    unit-tests/MarshallerTest.cc

	Fixes from the 64-bit linux build. Includes fix for the DAS value issue where values larger than 32-bits were being allowed in int32 attributes.
	M    tests/das-test.cc
	M    tests/dds-test.cc
	M    libdap.spec
	M    Makefile.am
	M    parser-util.cc
	M    unit-tests/RCReaderTest.cc

	Removed fdiostream from libdap and from the tests. Changed generalUtilTest to match the new version of id2xml()

2010-03-19  James Gallagher  <jgallagher@opendap.org>

	More changes for ticket 1521. Modified the id2xml() function so that it no longer encodes the stuff in an octal escape sequence. However, the value of the <value> element in the DDX _is_ encoded so that things like '<' will be escaped for the XML parser. Also, bumped the version in configure.ac to 3.10.1b. One unit test fails - this is a stop-gap fix so we can come back to that test and this fix later.

	MOdified Connect.cc so that the FILE_METHODS aere used, whcih effectively removed the fdiostream.h header from the cmpilation. Also, the DAP version has been bumped to 3.3 - a fix since libdap included in the hyrax 1.6 beta release said 3.2 by mistake.

	Fixes for ticket 1512. The function id2xml() was being used to encode String (DAP) Attribute values and this was causing problems when those values were not valid UTF-8 characters (e.g., when they were less than 0x20). As a fix we dropped the encoding altogether and fell back to the same encoding used by the DAS for the values (that encoding represents all non ASCII values using octal escape codes). I also fixed one of the unit tests that was explicitly testing for the XDAP header to be 3.2 and made it accept any value.

2010-02-10  Patrick West  <pwest@opendap.org>

	fdiostreamtest.txt file added to EXTRA_DIST M    unit-tests/Makefile.am

2010-02-08  Patrick West  <pwest@opendap.org>

	EXPRTest.at wasn't included in EXTRA_DIST M    tests/Makefile.am

2010-02-05  Patrick West  <pwest@opendap.org>

	Added DISTCLEANFILES to both of these to clean up unit-tests and tests files left around. M    tests/Makefile.am M    unit-tests/Makefile.am

	Including test_config.h, which has the local definition of abs_srcdir and can be used to find files to load. M    fdiostreamTest.cc

	Using abs_srcdir instead of just srcdir. This fixes this part of the distcheck problem. M    tests/DASTest.at M    tests/DDSTest.at M    tests/EXPRTest.at

	README.AIS has been removed M    libdap.spec

2010-02-03  James Gallagher  <jgallagher@opendap.org>

	Fixes for autotest that I forgot to check in to the branch. $srcdir/<tool> --> $abs_builddir/<tool>

2010-02-01  James Gallagher  <jgallagher@opendap.org>

	Branch for Hyrax 1.6
	A    http://scm.opendap.org/svn/branch/libdap/3.10.0

	Chnages for version 3.10.0
	M    configure.ac
	M    ChangeLog
	M    INSTALL
	M    libdap.spec
	M    README
	M    NEWS

	Modified the way errors in attribute values are tested for. Now we test errno first, then for values of 0.0 with ptr values non-null. This matches the man page more closely then the old tests.

2010-01-12  James Gallagher  <jgallagher@opendap.org>

	Fixed potential read beyond bounds in XDRStreamUnMarshaller::get_vector.

	Fixed return type in Vector::set_value_slice_from_row_major_vector (changed to unsigned int).

	Fixed a comment

2010-01-08  Patrick West  <pwest@opendap.org>

	--clean to clean build and src files for rpmbuild M    Makefile.am

2010-01-07  James Gallagher  <jgallagher@opendap.org>

	Changed the documentation for server-side functions so that the bulk of the documentation is now on the web.

	Fixes to geogrid() so that the longitude wrapping feature works and so that if latitude is upsidedown in the data, it's returned as 'north up' data.

2009-12-29  James Gallagher  <jgallagher@opendap.org>

	Shrew build changes that will hopefully lead to a version that we can build using NMI's B&T system. Also, I added 'cccc' targets so that we can take a 'metrics snapshot' without undue pain.

2009-12-23  Rikki Duncan  <rduncan@opendap.org>

	changes for win32 build

	changes for win32 build

	changes for win32 build

	changes for win32 build

	changes for win32 build

2009-12-03  James Gallagher  <jgallagher@opendap.org>

	Added chmod of InstallationCheck script which seems to be needed when buidling on osx 10.5.8.
	M    update_mac_package_contents.pl

2009-12-01  Michael Johnson  <michael.patrick.johnson@gmail.com>

	o Needed to add explicit #include <cstring> in order to find memcpy for Red Hat Enterprise 5 using gcc-4.3.2.  Seems they cleaned up headers and you need to be explicit about the include now.

2009-11-30  Michael Johnson  <michael.patrick.johnson@gmail.com>

	Fix for link bug on some platforms:  initializing variables in a switch without declaring a local scope block is an error.

	Fix for link bug on some platforms:  initializing variables in a switch without declaring a local scope block is an error.

2009-11-24  Michael Johnson  <michael.patrick.johnson@gmail.com>

	DDS.cc: fixed minor memory leak
	Array.cc, Array.h: added prepend_dim function for adding outer dimensions.

	Grid.h, Grid.cc: added function to set the array part explicitly without copying it.  fixed potential memory leaks.  added a few extra checks on proper types being set.  added function to add maps to (to beginning or end of map vector to support new outer dimensions).  made _duplicate protected for subclasses to be able to call it.

2009-11-19  James Gallagher  <jgallagher@opendap.org>

	ticket 1399 - Grids that have only one member after projection still must be wrapped in a Structure (because there might be two Grids so projected and they might have members with the same names - this is a real case). The Structures provide for unique FQN as the DAP requires.

	Added Dap4SharedDimension class

	Added unit tests for Dap4Dataset and Dap4Group

	Dap4Dataset and Dap4Group are mostly working and DDS is now a child or Structure (but is not using any of its parents methods). Dap4Dataset is a DDS, so it can be passed to the various methods already defined for a DDS & or *. TODO: refactor DDS so that it uses the methods/storage of Structure, then refactor Grid and Sequence so they are children of Structure, not Constructor. Then remove Constructor from Structure.

2009-11-13  James Gallagher  <jgallagher@opendap.org>

	removed old classes for the AIS; Added Dap4Dataset and Dap4Group; updated s number of tests; and merged from the trunk.

2009-11-10  James Gallagher  <jgallagher@opendap.org>

	Removed libdapserver from the getdap link.

	Branch for the DAP4 development effort.
	A    http://scm.opendap.org/svn/branch/libdap/DAP4

2009-11-05  James Gallagher  <jgallagher@opendap.org>

	I changed how the FILE_METHODS compile-time switch was defined, Now it's defined in the headers and not, directly in the config.h or *.cc files. That was a bug. All tests pass now. I'm going to check this in and then run tests on the entire shrew project.

2009-11-04  James Gallagher  <jgallagher@opendap.org>

	Removed lots of accumulated 'old code' and reinstated the FILE_METHODS compilation flag.

	Likely fixes for the win32 build. Test these on a vm.

	tweaks to get the ddx and dataddx responses working with the trunk BES. See getdap's -x (ddx) and -X (DataDDX) responses. These work using the -p x.y switch to set the DAP Accept version to x.y. Alos added the -t option to turn on HTTP protocol tracing. The new parser DDXParserSXA2 reads the dapVersion XML attribute and sets the value in the DDS instance. I also modified the Connect class to recognize the dods_ddx and dods-ddx values for Content-Description.

2009-10-22  Michael Johnson  <michael.patrick.johnson@gmail.com>

	Ticket #1442:
	o Fixed several potential memory leaks.

	o set_value now sets length.

	o Refactored cut & pasted sections to use helper funcs.

2009-10-07  Michael Johnson  <michael.patrick.johnson@gmail.com>

	Made simple_find() and simple_find_container() public for callers that require non-recursing lookups.

2009-10-06  James Gallagher  <jgallagher@opendap.org>

	I fixed problems with two sets of tests. First, the "Array of structures with child arrays" test was failing because the TestCommon and TestArray classes were not generating valid output in the case where intern_data() was used. Second, the test for String regexes where nothing matched was botched because when a selection is applied to anything other than a Sequence and nothing is selected the response from the server is broken. This will be an issue for DAP4. In place of the test that used a Structure and selected nothing, I added two tests of Sequences with strings and tried both selections that return and don't return values. Both cases work.

2009-10-05  Michael Johnson  <michael.patrick.johnson@gmail.com>

	Vector.h, Vector.cc: Cleaned up and moved doxygen comments to impl file.

2009-10-02  Patrick West  <pwest@opendap.org>

	This funciton is no longer used in libdap and is specific to usage in dap-server. Moved the function. M    mime_util.h

2009-10-02  James Gallagher  <jgallagher@opendap.org>

	Regarding the previous commit: On the IOOS branch I removed a 'bad fix' added at some point where includes within util.h supplied the class definitions for Byte, ..., Grid. So it looked like the .cc files were not including must at all, but in fact not only were they (and they need those includes) but _everything_ that used util.cc/h was too. So here are the includes, back in the .cc files where they belong.

	Merged code from ioos/src/libdap rev 20393 that contained the 'OtherXML' attribute implementation. This was apparently lost when that branch was updated between the commit of that revision and now. In addition to changes in AttrTable and the DAS and DDX parsers, there are changes in tests/ and unit-tests/. There's also a new function for converting octal escapes codes that is in escaping.cc/h. I updated the DDX parser to use the SAX2 interface and it now correctly processes namespaces and as a result, it's in a new file 'DDXParserSAX2.cc/h'. Oddly, when I performed the merge, an old 'feature' of the Type (Byte, ...) classes reemerged, the 'include the world' feature. In testing I could not get a good compile without these includes after the merge (but before the merge it was fine). I'm going to leave those changes out of this commit and see if the resulting code is OK. If not, I'l commit those changes, too.

2009-10-02  Michael Johnson  <michael.patrick.johnson@gmail.com>

	Vector.cc, Vector.h: Added support for reserving data buffer storage in advance, clearing out data buffers, and for copying a Vector into a subset of the value buffer of another Vector.  In support of aggregation to allow Vector's to be combined into a larger Vector.  Ticket #1427 has more information.  This was a monotonic interface addition and code change only --- no interfaces removed or changed.

2009-09-25  James Gallagher  <jgallagher@opendap.org>

	Removed XDRFileMarshaller.h from DODSFilter.cc

	It just seem right to save things at this point. Most of the configure.ac files have been updated. The libdap software has had a number of the FILE* methods/functions commented out using #if FILE_METHODS and then #undef FILE_METHODS. We'll see how much of the redundant code can be removed before the next Hyrax 1.6 release.

	Added fdiostream to the library because it seems we might be using it someday soon. Modified expr-test to use temp. files and the methods in DODSFilter and Connect - this is a better test of the library. I modified XDRStreamUnMarshaller a fair amount but it's still not work 100% and needs more error checking. This code still uses XDRFileUnMarshaller.
	M    DODSFilter.cc
	A    fdiostream.cc
	M    tests/expr-test.cc
	M    tests/TestByte.cc
	M    tests/Makefile.am
	M    Marshaller.h
	D    GNU/fdiostream_test.cc
	D    GNU/fdiostream.h
	M    Makefile.am
	M    DODSFilter.h
	M    XDRStreamUnMarshaller.cc
	M    HTTPConnect.cc
	M    XDRStreamMarshaller.cc
	M    Connect.cc
	A  + unit-tests/fdiostreamTest.cc
	M    unit-tests/Makefile.am
	M    unit-tests/MarshallerTest.cc
	AM + fdiostream.h

2009-09-22  James Gallagher  <jgallagher@opendap.org>

	Removed the xstream code - if we need this it's available on the web.

	Fixed a bug in fdiostream and added support for a istream that reads from a FILE* (ugh).

2009-09-18  James Gallagher  <jgallagher@opendap.org>

	Uses the new file descriptor stream classes - that is, it tests both input and output.

	Added XDRStreamUnMarshaller to the Makefile.am

	Added XDRStreamUnMarshaller

	Minor fixes to the XDRStreamMarshaller class

2009-09-17  James Gallagher  <jgallagher@opendap.org>

	Now includes the newly revamped stream buffer classes (fdiostream.h)

	Added input stream buf for file descriptors and renamed the files. Updated the README.

2009-09-11  Michael Johnson  <michael.patrick.johnson@gmail.com>

	Grid.cc: Made Grid add it's array and map vectors to the Constructor _vars list so they get iterated by the superclass Vars_Iter calls.  For ticket #1406

2009-09-02  Nathan Potter  <ndp@opendap.org>

	libdap: tweaked configure.ac to fix uuid lib problem

2009-09-02  James Gallagher  <jgallagher@opendap.org>

	Updated the pkg-config and dap-config scripts so they contain the UUID library when needed.
	M    libdap.pc.in
	M    libdapserver.pc.in
	M    dap-config.in

	Build fixes for linux. Linux uses libuuid for the uuid functions while OSX does not - I added a test for that library to configure.ac and the corrsponding changes to the Makefile.am. I also found and fixed two other errors that were not showing up on the OSX platform.
	M    DODSFilter.cc
	M    configure.ac
	M    tests/Makefile.am
	M    Makefile.am

2009-09-02  Michael Johnson  <michael.patrick.johnson@gmail.com>

	o Fixed typo causing build error.

2009-08-31  James Gallagher  <jgallagher@opendap.org>

	Replace fgetln with fgets in DDXParser.cc.  oddly package.m4 in tests has the version number for the library. I changed that to 3.10.0 (we should have something for the trunk better than a version number that looks like a release number) since I didn't think 3.9.2 was a good value...

	Configure fixes.
	M    configure.ac

	Updates for make dist.
	M    tests/Makefile.am
	M    INSTALL
	M    Makefile.am

	Added

	Added.

2009-08-28  James Gallagher  <jgallagher@opendap.org>

	Refactor of libdap: AIS removed from build. In addition, bug tickets addressed for Array, DDS, Vector and parser-util.cc

2009-08-27  James Gallagher  <jgallagher@opendap.org>

	Moved mime_util to libdap from libdapserver.

	Removed unnecessary libdapserver use for the unit-tests after moving cgi_util to mime_util and putting the latter in libdap.

	Added code to build and read the DataDDX response for DAP4. Connect has request_data_ddx() and request_data_ddx_url() methods that will ask a server for the DataDDX and parse the returned response. Connect::read_data() can read a DataDDX response from a file; getdap -M - can read the DataDDX returned by besstandalone when it's asked to return a DataDDX. DODSFilter now has a send_data_ddx() method and appropriate functions are now in mime_util.cc/h to build and parse the multipart MIME response. I also refactored the code somewhat renaming cgi_util to mime_util and removing redundant MIME parsing code in Connect and HTTPConnect - now all the MIME header parsing is done by functions in mime_util. Since these are used by both client and server operations, that should be moved to libdap (from libdapserver).

2009-08-21  James Gallagher  <jgallagher@opendap.org>

	Changed ID to Id to match the RFCs in the set_mime...() functions.. Also removed the set_client_dap_version() method and the matching get methods - These were causing more confusion than anything else. Use set_dap_version() and the matching get methods.
	M    cgi_util.cc
	M    DDS.cc
	M    DDS.h

	Changed ID to Id in the set_mime...() code to match the RFCs; fixed here in tests.
	M    unit-tests/DODSFilterTest.cc

	Fixed an error where getdomainname() can return nothing and not indicate and error. Now the default domain name is opendap.org in that case.

2009-08-20  James Gallagher  <jgallagher@opendap.org>

	Updates for the DataDDX response. New values were added to the ObjectType and and EncodingType enums. DODSFilter now has a send_data_ddx method that can either supply just the body (as needed by the OLFS) or the complete message. Unit tests added in unit-tests.DODSFilterTest. In HTTPConnect, get_description_type() and get_object() were also updated. Lastly, I change the values of Content-Description slightly so they were a little less clunky and made the dap4 prefixed values use dashes instead of underscores.

2009-08-19  James Gallagher  <jgallagher@opendap.org>

	Interim version of autogen.sh for our projects - fix the --force option.
	M    autogen.sh

	Removed generated files.
	D    conf/mkinstalldirs
	D    conf/depcomp
	D    conf/compile
	D    conf/missing
	D    conf/config.guess
	D    conf/config.sub
	D    conf/ltmain.sh
	D    conf/install-sh

2009-08-18  Nathan Potter  <ndp@opendap.org>

	libdap: Repaired bad string syntax and formatting.

2009-08-18  Michael Johnson  <michael.patrick.johnson@gmail.com>

	Added set_name() override to set the name of the template var() as well since this is what is output in a DDS and they didn't match.  Ticket #1346.

2009-08-18  Tom Sgouros  <tsgouros@gmail.com>

	Changes to documentation only.  Formatted ce function documentation to be easier to read and removed a bad paragraph from the main doxygen docs.

2009-08-04  James Gallagher  <jgallagher@opendap.org>

	Added autogen.sh which is probably better than always running autoreconf.
	AM   autogen.sh

	Changes for gcc 4.4: Removed warnings about misplaced or missing const qualifiers and logic issues. Also fixed a missing header under FC 11 (util_mit.cc needs <cstdio> for sprintf).
	M    Int16.cc
	M    conf/mkinstalldirs
	M    conf/depcomp
	M    conf/missing
	M    conf/config.guess
	M    conf/config.sub
	M    conf/ltmain.sh
	M    conf/install-sh
	M    INSTALL
	M    UInt16.cc
	M    Byte.cc
	M    parser-util.cc
	M    Float32.cc
	M    HTTPConnect.cc
	M    Str.cc
	M    ce_functions.cc
	M    das.y
	M    UInt32.cc
	M    util_mit.cc
	M    dds.y
	M    RCReader.h

2009-07-28  James Gallagher  <jgallagher@opendap.org>

	Modified AISDataBaseParser.cc so that the library will build with the --enable-debug=2 configure option. ticket 1318

2009-07-21  Michael Johnson  <michael.patrick.johnson@gmail.com>

	del_attr_table needed to 0 out parent as well to preserve invariant.

	Fixed memory leak in del_attr_table for Ticket #1326 and #1327.

	Fixed several issues with the DAP type checking routines (which I re-used in NcML handler) failing to reject out of range Int32 and accepting a negative number as valid UInt32.

2009-05-08  James Gallagher  <jgallagher@opendap.org>

	Merged changes for ticket 1301 from the tags/libdap/3.9.2 code.
	M    Makefile.am
	M    das.y
	M    unit-tests/AISMergeTest.cc
	M    unit-tests/DASTest.cc
	M    unit-tests/DDSTest.cc

2009-04-09  James Gallagher  <jgallagher@opendap.org>

	Changes for autoconf 2.63 (should work with 2.62 also).
	M EXPRTest.at

2009-04-08  James Gallagher  <jgallagher@opendap.org>

	Merged the 3.9.2 tagged code back into the trunk.
	_M   .
	M    RValue.cc
	M    Int16.cc
	M    configure.ac
	M    DDXParser.cc
	M    cgi_util.cc
	M    ChangeLog
	A  + conf/link-warning.h
	M    DDS.cc
	M    Array.cc
	_M   tests/das-testsuite/test.1.das
	_M   tests/expr-testsuite/test.2
	_M   tests/expr-testsuite/test.3
	_M   tests/expr-testsuite/test.c0
	_M   tests/expr-testsuite/test.4
	_M   tests/expr-testsuite/test.c1
	_M   tests/expr-testsuite/test.c2
	_M   tests/expr-testsuite/test.5
	_M   tests/expr-testsuite/test.c3
	_M   tests/expr-testsuite/test.6
	_M   tests/expr-testsuite/test.c4
	_M   tests/expr-testsuite/test.7
	_M   tests/expr-testsuite/test.8
	_M   tests/expr-testsuite/test.9
	_M   tests/expr-testsuite/test.a
	_M   tests/expr-testsuite/test.b
	_M   tests/expr-testsuite/test.d
	_M   tests/expr-testsuite/test.61
	_M   tests/expr-testsuite/test.2a
	_M   tests/expr-testsuite/test.cc0
	_M   tests/expr-testsuite/test.cc1
	_M   tests/expr-testsuite/test.1
	M    tests/package.m4
	M    INSTALL
	M    UInt16.cc
	M    libdap.spec
	M    Byte.cc
	M    GNU/GNURegex.cc
	M    README
	M    Makefile.am
	M    HTTPCache.cc
	M    ce_expr.y
	M    Float32.cc
	M    dds.lex
	M    util.h
	M    grammarfiles/ce_expr.tab.cc
	M    NEWS
	M    Str.cc
	M    Sequence.cc
	A  + gl/m4/absolute-header.m4
	M    gl/m4/wchar.m4
	M    gl/m4/stdint.m4
	A  + gl/m4/malloc.m4
	M    gl/m4/regex.m4
	M    gl/m4/gnulib-comp.m4
	A  + gl/m4/unistd_h.m4
	M    gl/m4/include_next.m4
	M    gl/m4/gnulib-cache.m4
	D    gl/m4/onceonly_2_57.m4
	A  + gl/m4/stdlib_h.m4
	M    gl/m4/extensions.m4
	M    gl/localcharset.c
	M    gl/regex_internal.c
	M    gl/malloc.c
	M    gl/localcharset.h
	M    gl/regex_internal.h
	M    gl/regexec.c
	A  + gl/stdlib.h
	M    gl/regcomp.c
	M    gl/alloca_.h
	M    gl/wchar_.h
	M    gl/stdint_.h
	A  + gl/unistd_.h
	M    gl/stdbool_.h
	M    gl/regex.c
	A  + gl/unistd.h
	M    gl/regex.h
	M    gl/wctype_.h
	A  + gl/stdlib_.h
	M    gl/Makefile.am
	M    gl/gettext.h
	M    gl/alloca.c
	M    ce_functions.cc
	M    expr.h
	M    AttrTable.h
	M    GridGeoConstraint.cc
	M    util.cc
	M    UInt32.cc
	M    XDRStreamMarshaller.cc
	M    Grid.cc
	M    escaping.cc
	M    unit-tests/HTTPCacheTest.cc
	M    unit-tests/AttrTableTest.cc
	M    unit-tests/generalUtilTest.cc
	M    dds.y
	M    Clause.cc
	M    Array.h
	M    ce_expr.lex

	Bumped up the autoconf version to 2.61 which we need for the top_srcdir variable. Other minor fixes like spelling errors in comments.
	M    configure.ac
	M    INSTALL
	M    GNU/outbuf.h
	M    ce_expr.y
	M    Clause.cc
	M    AISDatabaseParser.cc

2009-02-10  Rikki Duncan  <rduncan@opendap.org>

	Cleaned up the old dejaGNU test directories
	D    tests/ais_testsuite
	D    tests/cache-testsuite
	D    tests/server-testsuite
	D    tests/das-testsuite/config
	D    tests/das-testsuite/das-test.0
	A    tests/old_tests
	AM + tests/old_tests/grid-func-testsuite
	AM + tests/old_tests/server-testsuite
	D    tests/expr-testsuite/expr-test.0
	D    tests/expr-testsuite/config
	D    tests/dds-testsuite/dds-test.0
	D    tests/dds-testsuite/config
	D    tests/grid-func-testsuite
	D    tests/ddx-testsuite
	D    tests/cgi-util-tests
	D    tests/rcreader-testsuite

	Merged changes from the testfixes branch. libdap now uses autotest!
	M    configure.ac
	M    ChangeLog
	M    conf/missing
	A    tests/atlocal.in
	A    tests/DASTest.dir
	A    tests/das-testsuite/test.21.das.base
	D    tests/das-testsuite/test.2
	A    tests/das-testsuite/test.13.das.base
	D    tests/das-testsuite/test.3
	D    tests/das-testsuite/test.4
	A    tests/das-testsuite/test.33.das.base
	D    tests/das-testsuite/test.5
	A    tests/das-testsuite/test.25.das.base
	D    tests/das-testsuite/test.6
	A    tests/das-testsuite/test.17.das.base
	D    tests/das-testsuite/test.7
	A    tests/das-testsuite/test.1a.das
	D    tests/das-testsuite/test.8
	A    tests/das-testsuite/das.das.base
	D    tests/das-testsuite/test.9
	A    tests/das-testsuite/test.29.das.base
	A    tests/das-testsuite/test.1.das.base
	D    tests/das-testsuite/test.11
	D    tests/das-testsuite/test.12
	A    tests/das-testsuite/test.5.das.base
	D    tests/das-testsuite/test.13
	D    tests/das-testsuite/test.14
	D    tests/das-testsuite/test.15
	D    tests/das-testsuite/test.16
	A    tests/das-testsuite/test.9.das.base
	D    tests/das-testsuite/test.17
	A    tests/das-testsuite/test.30.das
	D    tests/das-testsuite/test.18
	A    tests/das-testsuite/test.31.das
	D    tests/das-testsuite/test.19
	A    tests/das-testsuite/test.32.das
	A    tests/das-testsuite/test.33.das
	A    tests/das-testsuite/test.34.das
	A    tests/das-testsuite/das.das
	A    tests/das-testsuite/test.30.das.base
	A    tests/das-testsuite/test.22.das.base
	D    tests/das-testsuite/bad_value_test.1
	A    tests/das-testsuite/test.14.das.base
	A    tests/das-testsuite/test.34.das.base
	A    tests/das-testsuite/test.26.das.base
	A    tests/das-testsuite/test.18.das.base
	A    tests/das-testsuite/test.2.das.base
	D    tests/das-testsuite/test.20
	D    tests/das-testsuite/test.21
	D    tests/das-testsuite/test.22
	D    tests/das-testsuite/test.23
	A    tests/das-testsuite/test.6.das.base
	D    tests/das-testsuite/test.24
	D    tests/das-testsuite/test.25
	A    tests/das-testsuite/special.test.hdf.das
	D    tests/das-testsuite/test.26
	D    tests/das-testsuite/test.27
	D    tests/das-testsuite/test.28
	D    tests/das-testsuite/test.29
	A    tests/das-testsuite/test.11.das.base
	A    tests/das-testsuite/test.31.das.base
	A    tests/das-testsuite/test.23.das.base
	A    tests/das-testsuite/test.15.das.base
	_M   tests/das-testsuite/test.1.das
	A    tests/das-testsuite/test.2.das
	A    tests/das-testsuite/test.27.das.base
	A    tests/das-testsuite/test.19.das.base
	A    tests/das-testsuite/test.3.das
	A    tests/das-testsuite/test.4.das
	A    tests/das-testsuite/test.5.das
	A    tests/das-testsuite/test.6.das
	A    tests/das-testsuite/test.7.das
	A    tests/das-testsuite/test.8.das
	A    tests/das-testsuite/test.9.das
	A    tests/das-testsuite/test.3.das.base
	D    tests/das-testsuite/test.30
	D    tests/das-testsuite/test.31
	D    tests/das-testsuite/test.32
	D    tests/das-testsuite/test.33
	A    tests/das-testsuite/test.7.das.base
	D    tests/das-testsuite/test.34
	A    tests/das-testsuite/test.11.das
	A    tests/das-testsuite/test.12.das
	D    tests/das-testsuite/das
	A    tests/das-testsuite/test.13.das
	A    tests/das-testsuite/test.3.Z.das.base
	A    tests/das-testsuite/test.14.das
	A    tests/das-testsuite/test.15.das
	A    tests/das-testsuite/test.16.das
	A    tests/das-testsuite/test.17.das
	A    tests/das-testsuite/test.18.das
	A    tests/das-testsuite/test.19.das
	A    tests/das-testsuite/special.test.das.base
	A    tests/das-testsuite/test.20.das.base
	A    tests/das-testsuite/test.12.das.base
	A    tests/das-testsuite/test.32.das.base
	A    tests/das-testsuite/test.24.das.base
	A    tests/das-testsuite/test.16.das.base
	A    tests/das-testsuite/test.28.das.base
	A    tests/das-testsuite/bad_value_test.1.das
	D    tests/das-testsuite/special.test.hdf
	A    tests/das-testsuite/test.1a.das.base
	A    tests/das-testsuite/bad_value_test.1.das.base
	A    tests/das-testsuite/test.4.das.base
	A    tests/das-testsuite/test.8.das.base
	A    tests/das-testsuite/test.20.das
	A    tests/das-testsuite/test.21.das
	A    tests/das-testsuite/test.22.das
	A    tests/das-testsuite/test.23.das
	A    tests/das-testsuite/test.24.das
	A    tests/das-testsuite/test.25.das
	A    tests/das-testsuite/test.26.das
	A    tests/das-testsuite/test.27.das
	A    tests/das-testsuite/test.28.das
	A    tests/das-testsuite/special.test.hdf.das.base
	D    tests/das-testsuite/test.1
	A    tests/das-testsuite/test.29.das
	_M   tests/expr-testsuite/test.2
	A    tests/expr-testsuite/test.df.base
	_M   tests/expr-testsuite/test.3
	_M   tests/expr-testsuite/test.c0
	A    tests/expr-testsuite/data.z7.base
	_M   tests/expr-testsuite/test.c1
	_M   tests/expr-testsuite/test.4
	_M   tests/expr-testsuite/test.c2
	_M   tests/expr-testsuite/test.5
	_M   tests/expr-testsuite/test.c3
	_M   tests/expr-testsuite/test.6
	_M   tests/expr-testsuite/test.c4
	_M   tests/expr-testsuite/test.7
	_M   tests/expr-testsuite/test.8
	_M   tests/expr-testsuite/test.9
	A    tests/expr-testsuite/test.1.base
	A    tests/expr-testsuite/test.1b.base
	A    tests/expr-testsuite/test.5.base
	A    tests/expr-testsuite/test.2d.base
	A    tests/expr-testsuite/test.5b.base
	A    tests/expr-testsuite/test.9.base
	A    tests/expr-testsuite/data.zz2.base
	A    tests/expr-testsuite/test.aa.base
	A    tests/expr-testsuite/test.d.base
	A    tests/expr-testsuite/data.61c.base
	A    tests/expr-testsuite/data.z0.base
	A    tests/expr-testsuite/test.bc.base
	A    tests/expr-testsuite/test.dc.base
	A    tests/expr-testsuite/data.z4.base
	A    tests/expr-testsuite/test.dg.base
	A    tests/expr-testsuite/test.2.base
	A    tests/expr-testsuite/test.2a.base
	A    tests/expr-testsuite/test.1c.base
	A    tests/expr-testsuite/test.4a.base
	D    tests/expr-testsuite/data.zz0
	A    tests/expr-testsuite/test.6.base
	D    tests/expr-testsuite/data.zz1
	A    tests/expr-testsuite/test.6a.base
	A    tests/expr-testsuite/test.2e.base
	D    tests/expr-testsuite/data.zz2
	A    tests/expr-testsuite/test.5c.base
	_M   tests/expr-testsuite/test.a
	_M   tests/expr-testsuite/test.b
	D    tests/expr-testsuite/data.61a
	A    tests/expr-testsuite/test.8a.base
	D    tests/expr-testsuite/data.61b
	D    tests/expr-testsuite/data.61c
	D    tests/expr-testsuite/data.z0
	_M   tests/expr-testsuite/test.d
	D    tests/expr-testsuite/data.61d
	D    tests/expr-testsuite/data.z1
	D    tests/expr-testsuite/data.z2
	D    tests/expr-testsuite/data.z3
	_M   tests/expr-testsuite/test.61
	D    tests/expr-testsuite/data.z4
	D    tests/expr-testsuite/data.z5
	D    tests/expr-testsuite/data.z6
	A    tests/expr-testsuite/test.a.base
	D    tests/expr-testsuite/data.z7
	A    tests/expr-testsuite/test.ab.base
	A    tests/expr-testsuite/data.61d.base
	A    tests/expr-testsuite/data.z1.base
	A    tests/expr-testsuite/test.bd.base
	A    tests/expr-testsuite/test.dd.base
	A    tests/expr-testsuite/data.z5.base
	A    tests/expr-testsuite/test.3.base
	A    tests/expr-testsuite/test.2b.base
	A    tests/expr-testsuite/test.1d.base
	A    tests/expr-testsuite/test.7.base
	A    tests/expr-testsuite/test.2f.base
	A    tests/expr-testsuite/test.6b.base
	A    tests/expr-testsuite/test.5d.base
	A    tests/expr-testsuite/test.8b.base
	A    tests/expr-testsuite/data.zz0.base
	A    tests/expr-testsuite/test.b.base
	A    tests/expr-testsuite/data.61a.base
	A    tests/expr-testsuite/test.ba.base
	A    tests/expr-testsuite/test.ac.base
	A    tests/expr-testsuite/test.da.base
	A    tests/expr-testsuite/data.z2.base
	A    tests/expr-testsuite/test.be.base
	A    tests/expr-testsuite/test.de.base
	_M   tests/expr-testsuite/test.2a
	A    tests/expr-testsuite/data.z6.base
	_M   tests/expr-testsuite/test.cc0
	_M   tests/expr-testsuite/test.cc1
	A    tests/expr-testsuite/test.1a.base
	A    tests/expr-testsuite/test.4.base
	A    tests/expr-testsuite/test.2c.base
	A    tests/expr-testsuite/test.5a.base
	A    tests/expr-testsuite/test.8.base
	A    tests/expr-testsuite/test.2g.base
	A    tests/expr-testsuite/test.5e.base
	A    tests/expr-testsuite/data.zz1.base
	A    tests/expr-testsuite/data.61b.base
	A    tests/expr-testsuite/test.bb.base
	A    tests/expr-testsuite/test.db.base
	A    tests/expr-testsuite/data.z3.base
	_M   tests/expr-testsuite/test.1
	A    tests/package.m4
	A    tests/DASTest.at
	A    tests/DDSTest.at
	A    tests/EXPRTest.at
	A    tests/DDSTest.dir
	A    tests/EXPRTest.dir
	D    tests/dds-testsuite/test.2
	A    tests/dds-testsuite/S2000415.HDF.dds.base
	D    tests/dds-testsuite/test.3
	A    tests/dds-testsuite/test.11.dds.base
	D    tests/dds-testsuite/test.4
	D    tests/dds-testsuite/test.6
	A    tests/dds-testsuite/fnoc1.nc.das.dds
	D    tests/dds-testsuite/test.7
	A    tests/dds-testsuite/test.15.dds.base
	D    tests/dds-testsuite/test.8
	A    tests/dds-testsuite/S2000415.HDF.das.dds.base
	D    tests/dds-testsuite/test.9
	A    tests/dds-testsuite/test.19.dds.base
	D    tests/dds-testsuite/test.10
	D    tests/dds-testsuite/test.11
	D    tests/dds-testsuite/test.12
	D    tests/dds-testsuite/test.13
	A    tests/dds-testsuite/test.3.dds.base
	D    tests/dds-testsuite/test.14
	D    tests/dds-testsuite/test.15
	A    tests/dds-testsuite/3B42.980909.5.hacked.HDF.das.dds.base
	D    tests/dds-testsuite/test.16
	D    tests/dds-testsuite/3B42.980909.5.HDF.das
	D    tests/dds-testsuite/test.17
	A    tests/dds-testsuite/test.7.dds.base
	D    tests/dds-testsuite/test.18
	D    tests/dds-testsuite/test.19
	A    tests/dds-testsuite/S2000415.HDF.das.dds
	A    tests/dds-testsuite/3B42.980909.5.HDF.dds.base
	A    tests/dds-testsuite/test.20.dds.base
	A    tests/dds-testsuite/test.12.dds.base
	A    tests/dds-testsuite/test.19b.dds
	A    tests/dds-testsuite/3B42.980909.5.HDF.das.dds.base
	A    tests/dds-testsuite/test.16.dds.base
	A    tests/dds-testsuite/test.1.dds
	A    tests/dds-testsuite/test.2.dds
	A    tests/dds-testsuite/test.3.dds
	A    tests/dds-testsuite/test.4.dds
	A    tests/dds-testsuite/test.19b.dds.base
	A    tests/dds-testsuite/test.6.dds
	A    tests/dds-testsuite/test.7.dds
	A    tests/dds-testsuite/test.8.dds
	D    tests/dds-testsuite/test.20
	A    tests/dds-testsuite/test.9.dds
	A    tests/dds-testsuite/test.19b.das.dds.base
	A    tests/dds-testsuite/test.4.dds.base
	A    tests/dds-testsuite/test.10.dds
	A    tests/dds-testsuite/test.8.dds.base
	A    tests/dds-testsuite/test.11.dds
	A    tests/dds-testsuite/test.12.dds
	A    tests/dds-testsuite/test.13.dds
	A    tests/dds-testsuite/test.14.dds
	A    tests/dds-testsuite/test.15.dds
	A    tests/dds-testsuite/AsciiOutputTest1.dds.base
	A    tests/dds-testsuite/3B42.980909.5.HDF.das.dds
	A    tests/dds-testsuite/test.16.dds
	A    tests/dds-testsuite/test.17.dds
	A    tests/dds-testsuite/test.18.dds
	D    tests/dds-testsuite/test.19b.das
	A    tests/dds-testsuite/test.19.dds
	D    tests/dds-testsuite/3B42.980909.5.hacked.HDF.das
	A    tests/dds-testsuite/test.13.dds.base
	A    tests/dds-testsuite/test.17.dds.base
	A    tests/dds-testsuite/fnoc1.nc.dds.base
	A    tests/dds-testsuite/fnoc1.nc.das.dds.base
	A    tests/dds-testsuite/test.1.dds.base
	A    tests/dds-testsuite/test.20.dds
	A    tests/dds-testsuite/test.9.dds.base
	D    tests/dds-testsuite/fnoc1.nc.das
	A    tests/dds-testsuite/test.10.dds.base
	A    tests/dds-testsuite/test.14.dds.base
	A    tests/dds-testsuite/test.19b.das.dds
	A    tests/dds-testsuite/test.18.dds.base
	A    tests/dds-testsuite/3B42.980909.5.hacked.HDF.das.dds
	A    tests/dds-testsuite/test.2.dds.base
	D    tests/dds-testsuite/S2000415.HDF.das
	A    tests/dds-testsuite/test.6.dds.base
	D    tests/dds-testsuite/test.19b
	D    tests/dds-testsuite/test.1
	M    tests/Makefile.am
	M    libdap.spec
	M    GNU/outbuf.h
	M    README
	M    Makefile.am
	M    NEWS
	M    unit-tests/Makefile.am

2009-01-30  James Gallagher  <jgallagher@opendap.org>

	Updated the 'CURRENT' revision for libdap and libdapserver. Bummer, but we changed interfaces.

2009-01-29  James Gallagher  <jgallagher@opendap.org>

	Move the code to a branch while we're in the beta period.
	A    http://scm.opendap.org/svn/branch/libdap/3.9.0
	D    http://scm.opendap.org/svn/tags/libdap/3.9.0

2009-01-28  James Gallagher  <jgallagher@opendap.org>

	Changes for the distcheck target.
	M    configure.ac
	M    INSTALL
	M    GNU/outbuf.h
	M    ce_expr.y
	M    dds.y
	M    Clause.cc
	M    AISDatabaseParser.cc

	Release 3.9.0
	A    http://scm.opendap.org/svn/tags/libdap/3.9.0

	Updates for release 3.9.0
	M    configure.ac
	M    ChangeLog
	M    libdap.spec
	M    GNU/outbuf.h
	M    README
	M    Makefile.am
	M    NEWS
	M    unit-tests/Makefile.am

	removed xstream references - we're not using this code although I'd like to keep the source in the library since we might use it at some point.
	M Makefile.am

2009-01-14  James Gallagher  <jgallagher@opendap.org>

	Patch from Patrice for missing string.h header. Spelling errors in Makefile.am.
	M    Makefile.am
	M    ce_expr.y

2009-01-12  James Gallagher  <jgallagher@opendap.org>

	I changed the etag value used in the HTTPConnetTest so the test will pass. The file changed and thus the etag changed when we moved the test server.

2008-12-04  Patrick West  <pwest@opendap.org>

	curl.h is included in HTTPConnect.h, which is included in AISMerge.h, which is included in getdap.cc. So need CURL_CFLAGS. Not sure why this doesn't show up in other builds, however.
	M    Makefile.am

2008-12-03  James Gallagher  <jgallagher@opendap.org>

	Commented-out the #if FILE_METHODS ... #endif preprocessor lines. For some reason these are breaking the library when FILE_METHODS is one (but not when it's zero). Anyway, the FILE* methods are needed for loaddap. I'm leaving the directives in as comments since maybe someday I'll figure out _why_ these broke the library.
	M    DODSFilter.cc
	M    Int32.h
	M    Int16.cc
	M    Structure.h
	M    Str.h
	M    Sequence.h
	M    Int16.h
	M    DDS.cc
	M    BaseType.h
	M    Array.cc
	M    Float64.h
	M    UInt16.cc
	M    AlarmHandler.h
	M    Byte.cc
	M    Byte.h
	M    DDS.h
	M    BaseType.cc
	M    Constructor.h
	M    Int32.cc
	M    DODSFilter.h
	M    Float32.cc
	M    Grid.h
	M    Structure.cc
	M    Str.cc
	M    Sequence.cc
	M    Float32.h
	M    Constructor.cc
	M    UInt32.h
	M    Float64.cc
	M    UInt32.cc
	M    Grid.cc
	M    unit-tests/SequenceTest.cc
	M    unit-tests/Makefile.am
	AM   unit-tests/MarshallerTest.cc
	M    Array.h
	M    UInt16.h

2008-11-25  James Gallagher  <jgallagher@opendap.org>

	Always build with the FILE_METHODS compile-time directive true. This may cause problems...

	Found more 'dataset' arguments, previously commented out, and removed them. Makefile.am fixes that may address some build issues seen by other people.

	I had previously commented out all of the places where the data set name was passed around to the various methods that evaluate a CE. Patrick has moved information about the data set name into the BaseType class so that a single DDS/DataDDS/DDX/... can be built from multiple files/data sets. Passing the parameter was redundant, so I commented it out. I completed the removal by deleting those comments.
	M    RValue.cc
	M    DDXParser.h
	M    DDXParser.cc
	M    ce_functions.h
	M    ConstraintEvaluator.cc
	M    ArrayGeoConstraint.h
	M    GeoConstraint.h
	M    GridGeoConstraint.h
	M    ce_expr.y
	M    RValue.h
	M    ce_functions.cc
	M    expr.h
	M    GridGeoConstraint.cc
	M    ConstraintEvaluator.h
	M    Clause.h
	M    ArrayGeoConstraint.cc
	M    unit-tests/ArrayGeoConstraintTest.cc
	M    unit-tests/GridGeoConstraintTest.cc
	M    Clause.cc
	M    GeoConstraint.cc

2008-11-17  James Gallagher  <jgallagher@opendap.org>

	Added check of C:\opendap when looking for .dodsrc on WIN32

2008-11-14  James Gallagher  <jgallagher@opendap.org>

	Merged the xmlrequest branch to the trunk.
	_M   .
	M    RValue.cc
	M    DDXParser.h
	M    DODSFilter.cc
	A  + xstream
	A  + xstream/fd.h
	A  + xstream/except_posix.h
	A  + xstream/posix.cpp
	A  + xstream/posix.h
	A  + xstream/common.cpp
	A  + xstream/fd.cpp
	A  + xstream/common.h
	A  + xstream/except.h
	M    Int32.h
	M    Int16.cc
	M    Structure.h
	M    Str.h
	M    Sequence.h
	M    configure.ac
	M    Connect.h
	M    DDXParser.cc
	M    Ancillary.cc
	M    ce_functions.h
	M    Int16.h
	D    docs/html.tar.gz
	M    ConstraintEvaluator.cc
	M    DDS.cc
	M    BaseType.h
	M    Array.cc
	M    tests/das-testsuite/config/unix.exp
	M    tests/expr-testsuite/expr-test.0/test.g.exp
	M    tests/expr-testsuite/expr-test.0/test.6.exp
	M    tests/expr-testsuite/config/unix.exp
	M    tests/expr-test.cc
	A  + tests/io_test.cc
	M    tests/grid-func-testsuite/config/unix.exp
	M    tests/Makefile.am
	M    tests/dds-test.cc
	M    Float64.h
	M    UInt16.cc
	M    AlarmHandler.h
	M    Byte.cc
	M    Byte.h
	D    GNU/Pix.h.never
	D    GNU/GNUerror.cc.never
	A  + GNU/outbuf.cc
	D    GNU/builtin.h.never
	A  + GNU/outbuf.h
	M    GNU/README
	M    BaseType.cc
	M    DDS.h
	M    GeoConstraint.h
	M    Makefile.am
	M    GridGeoConstraint.h
	M    Constructor.h
	M    Int32.cc
	M    DODSFilter.h
	M    ce_expr.y
	M    Float32.cc
	M    Grid.h
	M    HTTPConnect.cc
	M    Structure.cc
	M    RValue.h
	M    getdap.cc
	M    Str.cc
	M    Sequence.cc
	M    Float32.h
	M    ce_functions.cc
	M    expr.h
	M    GridGeoConstraint.cc
	M    Constructor.cc
	M    UInt32.h
	M    AISMerge.cc
	M    ConstraintEvaluator.h
	M    Clause.h
	M    ArrayGeoConstraint.cc
	M    Float64.cc
	M    UInt32.cc
	M    Grid.cc
	M    Connect.cc
	M    HTTPConnect.h
	D    unit-tests/ais_testsuite/ais_database.xml
	M    unit-tests/ais_testsuite/ais_database.xml.in
	M    unit-tests/AISResourcesTest.cc
	M    unit-tests/DDSTest.cc
	M    unit-tests/test_config.h.in
	M    unit-tests/HTTPConnectTest.cc
	M    unit-tests/DDXParserTest.cc
	M    unit-tests/ddsT.cc
	M    unit-tests/ByteTest.cc
	M    unit-tests/CEFunctionsTest.cc
	A  + unit-tests/ddx-testsuite/error.06.ddx
	A  + unit-tests/ddx-testsuite/test.0c.ddx
	A  + unit-tests/ddx-testsuite/test.0d.ddx
	A  + unit-tests/ddx-testsuite/test.00.ddx
	M    unit-tests/Makefile.am
	M    Clause.cc
	M    GeoConstraint.cc
	M    Array.h
	M    UInt16.h

2008-11-12  James Gallagher  <jgallagher@opendap.org>

	Fixed the libcurl and libxml2 tests in confgure.ac - they now test the values of the two programs correctly.

2008-11-06  James Gallagher  <jgallagher@opendap.org>

	Minor changes that are part of a fix for ticket 975. The complete changes are not done yet since the tests are not all passing for the intern_data() methods (but do pass for the serialize()/deserialize() methods and it might be that the problem lies in the TestArray class and not in the libdap code outside the tests. See svn/tags/libdap/partial_975_fix and the ticket itself for more information.
	M    Array.cc
	M    tests/expr-test.cc
	M    tests/TestStructure.cc
	M    BaseType.cc
	M    ce_expr.y
	M    Structure.cc
	M    Vector.cc
	M    Array.h

2008-10-30  James Gallagher  <jgallagher@opendap.org>

	Tests d1 and d3 will fail until I sort out just what is happening with the array of structures and CEs in the Test* classes.

2008-10-10  James Gallagher  <jgallagher@opendap.org>

	Added data file for Structure Array tests.

	Modified ce_expr.y so that arrays of structure parse using the new syntax. Example: s2[0:4].m[2:7]. See ticket 975.
	M DDS.cc
	M Vector.cc
	M ce_expr.y

	Added tests for Array of Structures fix - see ticket #975

2008-10-08  James Gallagher  <jgallagher@opendap.org>

	Ticket 1188: can not --> cannot. This was for the a handful of error messages, but I wound up changing it everywhere since that was easier.

	Fix for ticket 1121 - DDX not well formed for some HDF4 datasets because the element Alias was not closed.
	M AttrTable.cc

2008-09-25  James Gallagher  <jgallagher@opendap.org>

	Added support for cookies to libdap. Cookies will be saved in a 'cookie jar' if that option/parameter is set int he .dodsrc file.
	_M   tests
	M    RCReader.cc
	M    HTTPConnect.cc
	M    HTTPConnect.h
	_M   unit-tests/cache-testsuite
	M    RCReader.h

	Removed a test case fro AISResourceTest.cc since it was causing false negatives when run as root on FC8.

2008-09-19  James Gallagher  <jgallagher@opendap.org>

	Corrections for comments

2008-09-18  James Gallagher  <jgallagher@opendap.org>

	Fixes for tests after moving test.opendap.org - some of the test files appear to be different (not sure I understand that, but it's true, they are). Also, minor fixes for the new DDX31 symbol and xml header info to fix build errors.

2008-09-17  James Gallagher  <jgallagher@opendap.org>

	Merged multifile branch

	Updated docs.
	AM   docs/html.tar.gz

2008-09-16  James Gallagher  <jgallagher@opendap.org>

	Check in simple changes before branching to start the bulk of the DAP 3.2 changes.

2008-08-26  James Gallagher  <jgallagher@opendap.org>

	Added a one option to getdap (-M) that enables it to read from files that don't have MIME headers.

2008-08-06  Patrick West  <pwest@opendap.org>

	File accidentally added by eclipse
	D    ais_database.xml

	Deleting fines accidentally added by eclipse
	D    ce_expr.tab.hh
	D    3.8.1.diffs
	D    libdap-3.8.1.tar.gz
	D    tmp16780
	D    deflate
	D    ce_expr.output
	D    .cproject
	D    libdap-3.8.2.fpr
	D    libdap.pc
	D    tests/das-test.sum
	D    tests/dds-test.sum
	D    tests/expr-test
	D    tests/das-test
	D    tests/dds-test
	D    tests/expr-test.sum
	D    tmp16480
	D    das.tab.hh
	D    dds.tab.hh
	D    ChangeLog.tmp
	D    Error.tab.hh
	D    gse.tab.hh
	D    libdapclient.pc
	D    das.output
	D    dds.output
	D    libdapserver.pc
	D    Error.output
	D    gse.output
	D    unit-tests/CEFunctionsTest
	D    unit-tests/cache-testsuite/cleanup.sh
	D    unit-tests/parserUtilTest
	D    unit-tests/sequenceT
	D    unit-tests/marshT
	D    unit-tests/DDSTest
	D    unit-tests/generalUtilTest
	D    unit-tests/ArrayTest
	D    unit-tests/ArrayGeoConstraintTest
	D    unit-tests/DDXParserTest
	D    unit-tests/.dodsrc
	D    unit-tests/cgiUtilTest
	D    unit-tests/arrayT
	D    unit-tests/DASTest
	D    unit-tests/SequenceTest
	D    unit-tests/AISDatabaseParserTest
	D    unit-tests/ancT
	D    unit-tests/HTTPConnectTest
	D    unit-tests/test_config.h
	D    unit-tests/AISMergeTest
	D    unit-tests/ByteTest
	D    unit-tests/structT
	D    unit-tests/AttrTableTest
	D    unit-tests/GridGeoConstraintTest
	D    unit-tests/RCReaderTest
	D    unit-tests/ddsT
	D    unit-tests/DODSFilterTest
	D    unit-tests/HTTPCacheTest
	D    unit-tests/attrTableT
	D    unit-tests/AISResourcesTest
	D    unit-tests/RegexTest
	D    unit-tests/SignalHandlerTest
	D    svn-commit.tmp
	D    getdap

2008-08-04  James Gallagher  <jgallagher@opendap.org>

	Moved get_type() out of ObjectType.h and into HTTPConnect.cc and changed its name to get_description_type() which is not only more accurate but also less likely to conflict with other functions (there are two other 'get_type()'s in libdap already). There are other related changes.

2008-08-01  James Gallagher  <jgallagher@opendap.org>

	Minor fix in dds.lex - test for an error from fgets(). Closes ticket 1068.

	Fixed the expr-test tests - they were only running the intern_data() code and not the serialize/deserialize code. Also, removed use of move_dds() from expr-test as it is no longer needed.

2008-07-31  James Gallagher  <jgallagher@opendap.org>

	String attribute values are always quoted when the DAS is written out (now). This is part of the fix for ticket 1163 (the other part being changes to the handlers). See README for more information.
	M    tests/das-testsuite/das-test.0/test.8.exp
	M    tests/das-testsuite/das-test.0/test.9.exp
	M    tests/das-testsuite/das-test.0/test.11.exp
	M    tests/das-testsuite/das-test.0/test.1.exp
	M    tests/das-testsuite/das-test.0/test.2.exp
	M    tests/das-testsuite/das-test.0/test.3.exp
	M    tests/das-testsuite/das-test.0/test.4.exp
	M    README
	M    util.h
	M    AttrTable.cc
	M    Vector.cc
	M    das.y
	M    util.cc
	M    unit-tests/AttrTableTest.cc

2008-07-28  Joe Lee  <hyoklee@hdfgroup.org>

	Added dods_url_c type for Vector::value() function.

2008-07-23  James Gallagher  <jgallagher@opendap.org>

	Merged changes from tags/libdap/3.8.2 (-r18931:19106 $svn/tags/libdap/3.8.2 .)
	M    Ancillary.cc
	M    VCPP/BeforeInstall.txt
	M    VCPP/libdap.iss
	M    VCPP/config.h
	M    VCPP/Makefile

2008-07-15  James Gallagher  <jgallagher@opendap.org>

	Patch from Patrice Dumas for gnulib/autoconf 2.62 compatibility.
	M    gl/m4/extensions.m4

2008-07-15  Patrick West  <pwest@opendap.org>

	Problem where nested sequences not having any values selected because of constraint evaluation, so nested sequences aren't being pushed to the value stack. When coming out of parent_part_two to the end of parent_part_one, the stack is popped to get that sequences values. Since nothing was being pushed, the values for that sequence were being popped leaving an empty stack. So when top is called on an empty stack, caused bus error.
	Also, in Sequence.cc, a dynamic cast was being made to a Sequence variable
	called tmp. dynamic casts were called three more times in the method. These
	can get expensive, so removed the other dynamic casts and using first
	variable called tmp.

	Added and modified DBG statements.
	M    tests/TestInt32.cc
	M    tests/TestFloat32.cc
	M    tests/TestByte.cc
	M    tests/TestSequence.cc
	M    BaseType.cc
	M    Sequence.cc
	M    AISDatabaseParser.cc

2008-06-25  James Gallagher  <jgallagher@opendap.org>

	Fixed on emore problem with the xdr-datatype.s header. Assuming that XDR uses the C99 types if the inttypes.h header is present works on new FC machines but not OS/X, et cetera. I removed that from the Makefile.am.
	M    OSX_Resources/InstallationCheck
	M    OSX_Resources/Info.plist
	M    conf/acinclude.m4
	M    Makefile.am

	Fixes - I hope - to the *-datatypes headers. Other updates for comments and documentation.
	M    AISResources.cc
	M    configure.ac
	M    xdr-datatypes-static.h
	M    xdr-datatypes-config.h.in
	M    main_page.doxygen
	M    Error.cc
	M    conf/acinclude.m4
	M    HTTPCacheTable.cc
	M    doxy.conf

2008-06-23  James Gallagher  <jgallagher@opendap.org>

	Replaced the old DODS_CHECK_SIZES() macro with a new version from Dennis Heimbigner.

	Updated revisions for 3.8.2
	M    configure.ac
	M    ChangeLog
	M    libdap.spec

	Removed apue_db. Updates to the documentation for 3.8.2
	M    ChangeLog
	D    apue_db
	M    INSTALL
	M    README
	M    NEWS

	Minor changes - comments & docs.
	M    HTTPCacheTable.cc
	M    HTTPCacheTable.h

	Minor changes from the 3.8.1 code except that the HTTP Caching changes developed here on the trunk of libdap are now included (libdap 3.8.1 excluded those fixes).
	M    configure.ac
	M    ChangeLog
	M    NEWS
	M    ce_functions.cc
	M    unit-tests/AISMergeTest.cc
	M    unit-tests/HTTPCacheTest.cc

2008-06-16  James Gallagher  <jgallagher@opendap.org>

	Merged changes from the 3.8.1 tag.
	M    VCPP/BeforeInstall.txt
	M    VCPP/libdap.iss
	A    VCPP/unistd.h
	M    libdap.spec
	M    README

	AISMergeTest updated to work with the newer test.opendap.org fnoc1 test data set (which has slightly different attributes).

	Removed HTTPCacheTable::CacheEntry's lock since it was redundant and was causing a dead lock. Also removed RCReader's debug output.

2008-06-16  Patrick West  <pwest@opendap.org>

	Added access to response file. M    HTTPResponse.h M    Response.h

2008-06-10  James Gallagher  <jgallagher@opendap.org>

	The lock used to protect the CacheEntry object was redundant and I removed it. Also, I backed out other changes but retained some of the added encapsulation added to the CacheEntry struct. I checked this code in because I fairly certain it works, but the test server is down and so I cannot run the unit tests for HTTPCache.
	M    HTTPCacheTable.cc
	M    HTTPCacheTable.h
	M    unit-tests/HTTPCacheTest.cc

2008-06-09  Dan Holloway  <dholloway@opendap.org>

	Added ifdef HAVE_UNISTD_H, include <unistd.h>, required on RedHat 3.+

2008-05-30  Patrick West  <pwest@opendap.org>

	Moved ancillary functions from DODSFilter and cgi_util to Ancillary class as static methods. Moved the ancillary tests from cgiUtilTest to ancT. Had to update configure.ac and Makefile.am to get libdap to compile, removing apue directory. M    DODSFilter.cc M    configure.ac M    cgi_util.cc A    Ancillary.cc M    Makefile.am M    cgi_util.h A    Ancillary.h A    unit-tests/ancT.cc M    unit-tests/cgiUtilTest.cc M    unit-tests/Makefile.am

2008-05-30  James Gallagher  <jgallagher@opendap.org>

	Test svn switch (I added a space to the to the top of the file).
	M    util.cc

2008-05-22  James Gallagher  <jgallagher@opendap.org>

	Fixed comments in the ce functions - they said to use "version" when it's actually a blank arg list that returns the response.

2008-05-21  James Gallagher  <jgallagher@opendap.org>

	Made teh directory name nicer
	M    configure.ac
	A    apue_db
	D    apue_db/apue.h
	D    apue_db/include
	D    apue_db/db
	A    apue_db/db.c
	D    apue_db/lib
	A    apue_db/lockreg.c
	D    apue_db/Make.defines.linux
	A    apue_db/t4.c
	A    apue_db/error.c
	M    Makefile.am
	D    apue_db_lib
	M    das.lex

	Removed include subdir
	D    apue_db_lib/include

	Removed apue.h header.
	D    apue_db_lib/apue.h
	M    apue_db_lib/db.c
	M    apue_db_lib/lockreg.c
	M    apue_db_lib/t4.c
	M    apue_db_lib/error.c

	Removed
	D    apue_db_lib/Make.defines.linux

	Get rid of some temporary directories...
	D    apue_db_lib/db
	D    apue_db_lib/lib

	Added Advanced Programming in the Unix Environment DB.
	A    apue_db_lib/apue.h
	A    apue_db_lib/apue_db.h
	M    apue_db_lib/lib/libapue.a
	A    apue_db_lib/db.c
	A    apue_db_lib/lockreg.c
	A    apue_db_lib/t4.c
	AM   apue_db_lib/Makefile.am
	A    apue_db_lib/error.c

	Copied

2008-05-20  James Gallagher  <jgallagher@opendap.org>

	Removed cruft from the Steven's db checkin.

	Added the Steven's db code in apue_db_lib (whihc I might rename later).

	Removed #if 0 .. #endif lines.

	Read/Write locking in place. REady to start changing over from a single index file to a distributed way of storing the entries.

2008-05-15  James Gallagher  <jgallagher@opendap.org>

	Moved the locking of entries into the cache table class. This sets the stage for changes to the table implementation so that it can be stored on disk and not in memory.

2008-05-14  James Gallagher  <jgallagher@opendap.org>

	removed #if 0 after refactoring HTTPCache, HTTPCacheTable and CacheEntry. Tests now run.

	CacheEntry has not been encapsulated, but only to the extent that fields are manipulated with accessor/mutaor methods. The basic logic is still exposed to HTTPCache.

2008-05-14  Patrick West  <pwest@opendap.org>

	Requires using unistd.h if HAVE_UNISTD_H is defined, which requires including config.h. M    unit-tests/marshT.cc M    unit-tests/RCReaderTest.cc

	unlink requires unistd.h on linux machines. M    unit-tests/marshT.cc

2008-05-13  James Gallagher  <jgallagher@opendap.org>

	Added HTTPCacheTable to the VCPP Makefile

	I Have refactored HTTPCache so that most of the operations on the index file and in-memory 'database' of the cache contents is now in the HTTPCacheTable class.

2008-05-09  James Gallagher  <jgallagher@opendap.org>

	Added HTTPCacheTable class. HTTPCache will now be refactored so that it makes all cache table accesses through this class' interface. See ticket #1114 and #1118.

2008-04-25  James Gallagher  <jgallagher@opendap.org>

	Wrapped CURL_PROXYAUTH in #ifdef #endif to accommodate older versions of libcurl.
	M HTTPConnect.cc

	Spelling errors fixed.
	M    VCPP/BeforeInstall.txt
	M    README.dodsrc
	M    RCReader.cc

	Build tools no longer installed

2008-04-24  James Gallagher  <jgallagher@opendap.org>

	Added installer setup file and License for the installer

2008-04-23  James Gallagher  <jgallagher@opendap.org>

	Comments and strings modified as part of the win32 build of 3.8.1 from svn

	Removed Win32 definition of vsnprintf() for VC 2008 compat - edit for use with VC 2005

	Fixes for libdap 3.8.0

2008-04-21  James Gallagher  <jgallagher@opendap.org>

	Ticket 1095: The proxy support in HTTPConnect baroque and caused many people problems. I expanded on the syntax allowed (the old syntax is still supported) so that it mirrors the syntax most users expect. I updated the docs including the comments in the .dodsrc file.
	M    Makefile.am
	M    RCReader.cc
	M    NEWS
	M    HTTPConnect.cc
	M    unit-tests/RCReaderTest.cc
	A    unit-tests/rcreader-testsuite/test4.rc
	A    unit-tests/rcreader-testsuite/test5.rc

2008-04-15  James Gallagher  <jgallagher@opendap.org>

	Added code to follow redirects in HTTPConnect.cc

2008-04-07  Patrick West  <pwest@opendap.org>

	Delete being called on array without [], as is being called below the exception condition. M    HTTPCache.cc

2008-03-19  James Gallagher  <jgallagher@opendap.org>

	Added info about win32 locations for .dodsrc
	M    README.dodsrc

	Added Patrice Dumas' patch for <cstring>
	M    SignalHandler.cc
	M    gse.lex
	M    dds.lex
	M    HTTPConnect.cc
	M    das.lex
	M    ce_expr.lex

2008-03-04  Patrick West  <pwest@opendap.org>

	Now checks for which architecture the build is being run on and updates the InstallationCheck script M    update_mac_package_contents.pl

	3.8.0 release of libdap. M    configure.ac M    ChangeLog M    OSX_Resources/Info.plist M    OSX_Resources/ReadMe.txt M    libdap.spec M    README M    NEWS

2008-03-03  James Gallagher  <jgallagher@opendap.org>

	Added conditional include of unistd.h for RHEL3 build.
	M    SignalHandler.cc
	M    tests/TestArray.cc
	M    HTTPConnect.cc
	M    DAS.cc

	Header patch from Patrice Dumas.
	Many files modified.

	Directory regex --> pathname_ok() call. A minor change.
	M Util.cc

2008-03-02  James Gallagher  <jgallagher@opendap.org>

	Added shell commands so build works with bison 1.28. That version treats the -o option differently than the 2.x version.
	M Makefile.am

2008-03-01  James Gallagher  <jgallagher@opendap.org>

	Tweaked the comments about the YY_INPUT macro.
	M dds.lex

2008-02-29  James Gallagher  <jgallagher@opendap.org>

	Switch back to the old YY_INPUT macro for now...
	M    dds.lex

	I found that a number of the places where a *.tab.h was included did not get changed when I went to the .hh file names (which is how bison does things when you tell it to make the output a *.tab.cc file). Here are the fixes. the distcheck and rpm targets now work.
	M    Error.lex
	M    Int16.cc
	M    error-test.cc
	M    tests/expr-test.cc
	M    tests/dds-test.cc
	M    UInt16.cc
	M    Int32.cc
	M    gse-test.cc
	M    Str.cc
	M    Float64.cc
	M    Operators.h
	M    UInt32.cc

	There are three changes in these files: 1. formatting; 2. Grammar builds; 3. Security fixes. For the formatting changes some files just got messed up and I was sick of looking at it. Grammar changes amount to simplifying the builds of the lex and y files. Now the sed calls in the Makefile have been removed - commented out to be completely removed later. 3. Nothing major on the security front but I made some changes all the same.

2008-02-29  Patrick West  <pwest@opendap.org>

	Updates for release of 3.7.11. M    configure.ac M    ChangeLog M    INSTALL M    libdap.spec M    README M    NEWS

	If cleanup.sh does not exist, then a make clean will error out. clean-local depends on cleanup.sh. M    cache-testsuite/Makefile.am

2008-02-28  Patrick West  <pwest@opendap.org>

	Added comment regarding ais_testsuite directory and how those files are being distributed. M    unit-tests/Makefile.am

	Removing generated files from Makefile.am. Removing temporary files in marshT created for writing marshalled data. cleanup script cleaned up. cache-testsuite makefile running local cleanup.sh since cleanup.sh is generated, also added distclean-local to remove the dods_cache directory. unit-tests makefile adds individual ais_testsuite files because there is the generated file there so just adding the directory wasn't working. M    Makefile.am M    unit-tests/marshT.cc M    unit-tests/cache-testsuite/cleanup.sh.in M    unit-tests/cache-testsuite/Makefile.am M    unit-tests/Makefile.am

	Modified tests and configuration to get unit-tests to run during distcheck. M    unit-tests/AISMergeTest.cc M    unit-tests/DODSFilterTest.cc D    unit-tests/ais_testsuite/ais_database.xml A    unit-tests/ais_testsuite/ais_database.xml.in D    unit-tests/cache-testsuite/cleanup.sh A    unit-tests/cache-testsuite/cleanup.sh.in M    unit-tests/cache-testsuite/Makefile.am M    unit-tests/DASTest.cc M    unit-tests/AISResourcesTest.cc M    unit-tests/DDSTest.cc A    unit-tests/test_config.h.in M    unit-tests/HTTPConnectTest.cc M    unit-tests/DDXParserTest.cc M    unit-tests/cgiUtilTest.cc M    unit-tests/AISDatabaseParserTest.cc M    unit-tests/CEFunctionsTest.cc M    unit-tests/GridGeoConstraintTest.cc M    unit-tests/Makefile.am M    unit-tests/RCReaderTest.cc

2008-02-27  Patrick West  <pwest@opendap.org>

	Added check for cppunit in configure. If present, then the tests will be built and run. if not then a message will appear saying that can't run the tests without the library, but it's not an error. M    configure.ac A    conf/cppunit.m4 M    Makefile.am M    unit-tests/Makefile.am

2008-02-27  James Gallagher  <jgallagher@opendap.org>

	Updated indentation using "indent -kr"
	M    gl/alloca_.h
	M    gl/mbchar.h
	M    gl/localcharset.c
	M    gl/strcasecmp.c
	M    gl/regex_internal.c
	M    gl/strnlen1.c
	M    gl/malloc.c
	M    gl/wchar_.h
	M    gl/localcharset.h
	M    gl/stdint_.h
	M    gl/strcase.h
	M    gl/regex.c
	M    gl/stdbool_.h
	M    gl/memchr.c
	M    gl/regex_internal.h
	M    gl/strnlen1.h
	M    gl/mbuiter.h
	M    gl/regex.h
	M    gl/wctype_.h
	M    gl/regexec.c
	M    gl/strncasecmp.c
	M    gl/gettext.h
	M    gl/alloca.c
	M    gl/mbchar.c
	M    gl/regcomp.c

2008-02-26  Patrick West  <pwest@opendap.org>

	No longer need the MacOSX specific readme and install files. M    OSX_Resources/Info.plist D    INSTALL_MacOSX.rtf D    README_MacOSX.rtf

2008-02-23  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2008-02-22  James Gallagher  <jgallagher@opendap.org>

	Updated

	Fixed an error that crept into xdr-datatypes-static from the xp port. I made the change in a new copy of the xdr-datatypes.h header added to the VCPP directory.  Also, I removed some old code from the XDRUtils.cc file.
	M    xdr-datatypes-static.h
	AM   VCPP/xdr-datatypes.h
	M    XDRUtils.cc

2008-02-21  Patrick West  <pwest@opendap.org>

	Added remove of temporary directories when pkg build is done. M    Makefile.am

2008-02-21  James Gallagher  <jgallagher@opendap.org>

	Modified Makefile to install xdr-datatypes.h from VCPP

	Removed a patch
	M XDRStreamMarshaller.cc

	Removed a patch
	M XDRFileMarshaller.cc

	Backed out some changes for my version of XP.
	M XDRFileUnMarshaller.cc

	Fixes for the win32 build from Anna Nokolov - I turned her files into a patch but there were some rejects.
	M    xdr-datatypes-static.h
	M    XDRFileUnMarshaller.cc
	M    gl/stdint_.h
	M    XDRStreamMarshaller.cc

	Added patch from Anna Nokolov.
	M XDRFileMarshaller.cc

	Applied Win32 patches from Anna Nokolov.
	M    cgi_util.cc
	M    VCPP/Makefile
	M    GNU/GNURegex.cc
	M    parser-util.cc
	M    util.h
	M    das.lex
	M    gl/localcharset.c
	M    gl/stdint_.h
	M    gl/regex_internal.h
	M    util.cc
	M    XDRFileMarshaller.cc

2008-02-18  Patrick West  <pwest@opendap.org>

	functional expressions were not being evaluated when building the ddx. Updated this and removed newline from error message if problem with functional expressions. M    DODSFilter.cc

2008-02-14  Patrick West  <pwest@opendap.org>

	Fixed sed issue with discovering version inormation in libdap.m4. This one should be used by anyone who wants to use libdap. M    conf/libdap.m4

2008-02-13  James Gallagher  <jgallagher@opendap.org>

	Added unistd.h include.
	M    unit-tests/AISResourcesTest.cc
	M    unit-tests/ByteTest.cc
	M    unit-tests/testFile.cc

	Added config.h header include to AttrTableTest.cc

	Added include of unistd.h to AttrTableTest.cc for RHEL3

2008-02-05  James Gallagher  <jgallagher@opendap.org>

	Removed two tests that fail on machines where the tests are run as root.
	M HTTPCacheTest.cc

	Auto reset of Subversion properties

2008-02-04  Patrick West  <pwest@opendap.org>

	Added method to not only return the FILE pointer but also the cached file name when getting the cached response. Also, when parsing headers, taking into account a blank line and a malformed header. M    HTTPCache.cc M    HTTPCache.h M    HTTPConnect.cc

	Includes added for unlink function call M    unit-tests/ddsT.cc

2008-02-02  Patrick West  <pwest@opendap.org>

	Added namespace libdap M    Error.lex M    RValue.cc M    DDXParser.h M    DODSFilter.cc M    HTTPResponse.h M    Int16.cc M    Int32.h M    Structure.h M    AISResources.cc M    Sequence.h M    Str.h M    ResponseTooBigErr.cc M    SignalHandler.cc M    ResponseTooBigErr.h M    SignalHandler.h M    XDRUtils.h M    escaping.h M    Connect.h M    DDXParser.cc M    cgi_util.cc M    dods-datatypes-static.h M    ce_functions.h M    gse.lex M    DDXExceptions.h M    Resource.h M    Error.cc M    HTTPCacheDisconnectedMode.h M    UnMarshaller.h M    Response.h M    Int16.h M    SignalHandlerRegisteredErr.h M    ce_parser.h M    ConstraintEvaluator.cc M    DAS.h M    DDS.cc M    XDRFileMarshaller.h M    tests/TestInt32.h M    tests/TestStructure.h M    tests/TestInt16.h M    tests/TestUrl.h M    tests/TestSequence.h M    tests/TestStr.h M    tests/TestFloat64.h M    tests/das-test.cc M    tests/TestGrid.h M    tests/TestByte.h M    tests/TestTypeFactory.h M    tests/TestFloat32.h M    tests/TestArray.h M    tests/TestUInt32.h M    tests/dds-test.cc M    tests/TestUInt16.h M    tests/TestCommon.cc M    Array.cc M    BaseType.h M    HTTPCacheInterruptHandler.h M    EventHandler.h M    Float64.h M    AISConnect.cc M    UInt16.cc M    InternalErr.h M    EncodingType.h M    gse_parser.h M    Marshaller.h M    AlarmHandler.h M    Byte.cc M    GNU/GNURegex.cc M    GNU/GNURegex.h M    Byte.h M    DataDDS.h M    BaseType.cc M    DDS.h M    XDRUtils.cc M    ArrayGeoConstraint.h M    GeoConstraint.h M    HTTPCacheResponse.h M    RCReader.cc M    GridGeoConstraint.h M    Constructor.h M    util_mit.h M    Error.h M    Int32.cc M    DODSFilter.h M    DapObj.h M    gse.y M    HTTPCache.cc M    DataDDS.cc M    HTTPCache.h M    parser-util.cc M    DapIndent.h M    ce_expr.y M    AISResources.h M    ObjectType.h M    Float32.cc M    Error.y M    dds.lex M    PipeResponse.h M    util.h M    AISExceptions.h M    AISDatabaseParser.h M    AttrTable.cc M    InternalErr.cc M    Grid.h M    HTTPConnect.cc M    AISMerge.h M    RValue.h M    Structure.cc M    cgi_util.h M    Url.cc M    Vector.cc M    getdap.cc M    BaseTypeFactory.h M    Str.cc M    Sequence.cc M    das.lex M    XDRFileUnMarshaller.cc M    Float32.h M    XDRFileUnMarshaller.h M    ce_functions.cc M    expr.h M    AttrTable.h M    GridGeoConstraint.cc M    Constructor.cc M    UInt32.h M    XDRStreamMarshaller.h M    das.y M    AISMerge.cc M    parser.h M    BaseTypeFactory.cc M    Url.h M    Vector.h M    DAS.cc M    ConstraintEvaluator.h M    GSEClause.cc M    GSEClause.h M    util.cc M    Clause.h M    ArrayGeoConstraint.cc M    Float64.cc M    Operators.h M    UInt32.cc M    XDRStreamMarshaller.cc M    Grid.cc M    util_mit.cc M    Connect.cc M    escaping.cc M    unit-tests/AISMergeTest.cc M    unit-tests/sequenceT.cc M    unit-tests/DODSFilterTest.cc M    unit-tests/HTTPCacheTest.cc M    unit-tests/DASTest.cc M    unit-tests/AISResourcesTest.cc M    unit-tests/DDSTest.cc M    unit-tests/SignalHandlerTest.cc M    unit-tests/ArrayGeoConstraintTest.cc M    unit-tests/ArrayTest.cc M    unit-tests/AttrTableTest.cc M    unit-tests/HTTPConnectTest.cc M    unit-tests/DDXParserTest.cc M    unit-tests/ddsT.cc M    unit-tests/cgiUtilTest.cc M    unit-tests/ByteTest.cc M    unit-tests/attrTableT.cc M    unit-tests/SequenceTest.cc M    unit-tests/RegexTest.cc M    unit-tests/generalUtilTest.cc M    unit-tests/AISDatabaseParserTest.cc M    unit-tests/GridGeoConstraintTest.cc M    unit-tests/RCReaderTest.cc M    unit-tests/parserUtilTest.cc M    HTTPConnect.h M    dds.y M    StdinResponse.h M    DapIndent.cc M    XDRFileMarshaller.cc M    Clause.cc M    AISDatabaseParser.cc M    GeoConstraint.cc M    Array.h M    AISConnect.h M    UInt16.h M    ce_expr.lex M    RCReader.h

2008-02-01  James Gallagher  <jgallagher@opendap.org>

	Added some file to svn:ignore
	M gl

	Added conditional set of the gcc -Wall, et c., flags.
	M Makefile.am

2008-01-31  Nathan Potter  <ndp@opendap.org>

	libdap: Changed Error handling in ce_functions.cc so that the errors thrown appropriatley referenced an error code other than unknown

2008-01-31  James Gallagher  <jgallagher@opendap.org>

	Added conditional set of the gcc -Wall, et c., flags.

2008-01-30  James Gallagher  <jgallagher@opendap.org>

	Include <algorithm> for all builds, not just win32. This is a fix for AIX and its native compiler.

2008-01-29  James Gallagher  <jgallagher@opendap.org>

	Update to the package target for OSX.
	M    OSX_Resources/InstallationCheck
	M    OSX_Resources/update_mac_package_contents.pl
	M    OSX_Resources/InstallationCheck.strings
	M    Makefile.am

2008-01-28  James Gallagher  <jgallagher@opendap.org>

	It seems that universal binaries are not yet working - I commented out that part of the Makefile.This
	M    Makefile.am

	Hacked the Makefile.am so that the 'pkg' target makes a universal binary - maybe. Fixed up the OSX resources' text.
	M    OSX_Resources/Info.plist
	M    OSX_Resources/Description.plist
	M    Makefile.am

2008-01-22  James Gallagher  <jgallagher@opendap.org>

	Added support to filter out ^M that's introduced by DOS editors.
	M update_mac_package_contents.pl

2008-01-16  James Gallagher  <jgallagher@opendap.org>

	Updated comments
	M Makefile.am

	Removed major and minor version.
	M    OSX_Resources/Info.plist

2008-01-14  James Gallagher  <jgallagher@opendap.org>

	Applied pkgconfig patch from Patrice.
	M    libdap.spec
	M    Makefile.am
	M    libdapclient.pc.in
	M    libdap.pc.in
	M    unit-tests/testFile.cc
	M    unit-tests/Makefile.am
	M    libdapserver.pc.in
	A    dap-config-pkgconfig

2008-01-12  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2008-01-11  James Gallagher  <jgallagher@opendap.org>

	Added. These help automate the build process.
	AM   OSX_Resources/macify_license_file.pl
	AM   OSX_Resources/update_mac_package_contents.pl

	Updates to the OS/X build so that it is more automatic. No more pmproj file, either. I added <code> tags in the README so that the perl script that updates the Mac version of that file will look decent.
	M    OSX_Resources/InstallationCheck
	M    OSX_Resources/License.txt
	M    OSX_Resources/Info.plist
	M    OSX_Resources/InstallationCheck.strings
	M    OSX_Resources/ReadMe.txt
	M    OSX_Resources/Welcome.html
	M    README
	M    Makefile.am
	D    mac_osx
	D    libdap.pmproj

2008-01-10  Patrick West  <pwest@opendap.org>

	Certain size vector of bytes was failing when writing to the xdr stream. Changed the size of the buffer to add enough to cover the word boundary. Updated unit test to test for this. M    Vector.cc M    XDRStreamMarshaller.cc M    unit-tests/marshT.cc M    unit-tests/arrayT.cc

2008-01-08  James Gallagher  <jgallagher@opendap.org>

	Removed leading spaces of the lines so that the file can be used easily on the Mac where lines will wrap in the Installer.

	Fixed up these two tests to match the changes in the ais database they used.
	M    unit-tests/AISMergeTest.cc
	M    unit-tests/AISResourcesTest.cc

2008-01-07  James Gallagher  <jgallagher@opendap.org>

	make check now runs the unit tests (ticket 1012)
	M    Makefile.am

	Fixed the AIS database parser tests so they now use Hyrax and not some kludge.
	M    unit-tests/ais_testsuite/ais_database.xml
	M    unit-tests/AISDatabaseParserTest.cc

2007-12-01  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2007-11-30  Patrick West  <pwest@opendap.org>

	MacOSX resources updated. Added a README and INSTALL file to be put alongside the .pkg in the .dmg. M    OSX_Resources/Info.plist D    README_MaxOSX.rtf M    Makefile.am A    README_MacOSX.rtf

2007-11-30  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2007-11-29  Patrick West  <pwest@opendap.org>

	the .pc files needed to be dealt with during the pkg build so that the prefix was set correctly. M    Makefile.am

	README and INSTALL files for a MacOSX installation. To be put into the .dmg along with the .pkg. A    README_MaxOSX.rtf A    INSTALL_MacOSX.rtf

2007-11-28  James Gallagher  <jgallagher@opendap.org>

	Updated for release 3.7.10
	M    configure.ac
	M    ChangeLog
	M    INSTALL
	M    libdap.spec
	M    README
	M    NEWS

	Fixed warnings about potentially uninitialized uses of ENTRY in HTTPCache.cc

2007-11-28  Patrick West  <pwest@opendap.org>

	Added private default constructor, copy constructor, and operator= to the classes, all through InternalErr. Added copyright information as well. M    XDRUtils.h M    UnMarshaller.h M    XDRFileMarshaller.h M    Marshaller.h M    XDRUtils.cc M    XDRFileUnMarshaller.cc M    XDRFileUnMarshaller.h M    XDRStreamMarshaller.h M    XDRStreamMarshaller.cc M    XDRFileMarshaller.cc

2007-11-26  Patrick West  <pwest@opendap.org>

	In Vector.cc, checking if _var is null before attempting delete. Didn't appear to be an issue, but seemed to be a needed test.
	In XDRStreamMarshaller, not allocating such a large buffer. Allocating only
	what is needed in put_str and both put_vector calls. The other methods are
	using the static buffer so we don't have to allocate each time. Prettied up
	the code, added more comments, and corrected some exception messages.
	M    Vector.cc
	M    XDRStreamMarshaller.cc

2007-11-21  James Gallagher  <jgallagher@opendap.org>

	libdapclient and libdapserver library versions bumped up.
	M    configure.ac
	M    depend.sh
	M    libdap.spec
	M    NEWS

2007-11-14  James Gallagher  <jgallagher@opendap.org>

	Fixed the LIBDAP CHECK macro
	M    conf/libdap.m4

2007-11-13  James Gallagher  <jgallagher@opendap.org>

	Updated for version 3.7.9
	M    configure.ac
	M    ChangeLog
	M    INSTALL
	M    libdap.spec
	M    README
	M    NEWS

	Fixeed ticket #995. The problem was in intern_data_for_leaf. This problem was fixed by changing the way intern_data_for_leaf() worked, slightly. It was always popping the stack of `d_values` object pointers regardless of the return value of read_row. However, if no values are read then the call to intern_data_for_parent_part_two will never be called and the d_values field of the child sequence won't be pushed onto the stack. Hence the pop should not happen - because there's no child there to pop. I fixed this with a slight change in the code. The method now skips the while loop and subsequent pop operation if the first call to read_row() returns false. The while loop won't be run anyway, so the actual change is minor and eliminates an unnecessary test in the case where read_row does return false initially.
	All of the tests that are expected to pass now do.

2007-11-12  James Gallagher  <jgallagher@opendap.org>

	Grid.cc: Changed the way the declarataion is printed by print_val() so that intern_data can use this too and work with the expr-test test driver. Sequence.cc: transfer_data_part_two() now used intern_data() when it should in place of read(). Also, print_one_row() is now more flixible in the way it prints rows. Before it expected that the first row would alway be printed (because it assume that the row had been read by deserialize()). Now it checks to see if the row should be printed because it knows that intern_data() might be run and that method is working with local data - the first row might not satisfy the CE. Sequence.h: Formatting Structure.cc: Switched from transfer_data to intern_data.

	Fixed this test. The error message changed and the test failed for that reason, not that error went undetected.
	M dds-testsuite/dds-test.0/test.17.exp

	Copied and munged these so that they call the expr-test_start procedure and test intern_data() in libdap.
	M    test.9.exp
	M    test.ya.exp
	M    test.yb.exp
	M    test.yc.exp
	M    test.yd.exp
	M    test.ye.exp
	M    test.yf.exp
	M    test.yg.exp
	M    test.a.exp
	M    test.b.exp
	M    test.c.exp
	M    test.d.exp
	M    test.zz0.exp
	M    test.e.exp
	M    test.zz1.exp
	M    test.zz2.exp
	M    test.f.exp
	M    test.zz3.exp
	M    test.g.exp
	M    test.zz4.exp
	M    test.61a.exp
	M    test.h.exp
	M    test.zz5.exp
	M    test.61b.exp
	M    test.i.exp
	M    test.61c.exp
	M    test.j.exp
	M    test.61d.exp
	M    test.k.exp
	M    test.l.exp
	M    test.m.exp
	M    test.n.exp
	M    test.o.exp
	M    test.p.exp
	M    test.q.exp
	M    test.r.exp
	M    test.s.exp
	M    test.t.exp
	M    test.u.exp
	M    test.v.exp
	M    test.w.exp
	M    test.wa.exp
	M    test.x.exp
	M    test.wb.exp
	M    test.y.exp
	M    test.wc.exp
	M    test.xa.exp
	M    test.xb.exp
	M    test.xc.exp
	M    test.xd.exp
	M    test.xe.exp
	M    test.z0.exp
	M    test.z1.exp
	M    test.z2.exp
	M    test.z3.exp
	M    test.z4.exp
	M    test.z5.exp
	M    test.z6.exp
	M    test.1.exp
	M    test.z7.exp
	M    test.2.exp
	M    test.5.exp
	M    test.6.exp

	Updated test code so that the new intern_data() method is tested.
	M    tests/TestInt32.cc
	M    tests/TestInt32.h
	M    tests/TestInt16.cc
	M    tests/TestStructure.h
	M    tests/TestInt16.h
	M    tests/TestUrl.h
	M    tests/TestStr.h
	M    tests/TestSequence.h
	M    tests/TestFloat32.cc
	M    tests/TestArray.cc
	M    tests/TestFloat64.cc
	M    tests/expr-testsuite/config/unix.exp
	M    tests/TestFloat64.h
	M    tests/TestUInt32.cc
	M    tests/TestGrid.cc
	M    tests/TestUInt16.cc
	M    tests/TestGrid.h
	M    tests/TestCommon.h
	M    tests/expr-test.cc
	M    tests/TestStructure.cc
	M    tests/TestUrl.cc
	M    tests/TestByte.cc
	M    tests/TestByte.h
	M    tests/TestSequence.cc
	M    tests/TestStr.cc
	M    tests/README
	M    tests/TestFloat32.h
	M    tests/TestArray.h
	M    tests/TestUInt32.h
	M    tests/TestUInt16.h
	M    tests/TestCommon.cc

2007-11-08  James Gallagher  <jgallagher@opendap.org>

	Added the intern_data() method as a replacement and fix for/to transfer_data(). This method should correctly handle the types presented by HDF5 like Array of Structure
	M    Structure.h
	M    Sequence.h
	M    BaseType.h
	M    BaseType.cc
	M    Grid.h
	M    Structure.cc
	M    Vector.cc
	M    Sequence.cc
	M    Vector.h
	M    Grid.cc
	M    unit-tests/HTTPCacheTest.cc
	M    unit-tests/SequenceTest.cc

2007-11-08  Patrick West  <pwest@opendap.org>

	All characters in the pathname need to match the regular expression. So need to compare the result of the match call in pathname_ok to the length of the path being matched. If not all characters match, then return false. M    util.cc

2007-10-31  James Gallagher  <jgallagher@opendap.org>

	Added pathname_ok() prototype to util.h and added malloc check to XDRStreamMarshaller.cc

2007-10-30  James Gallagher  <jgallagher@opendap.org>

	Fixed a parse error in the pathname sanitizer function.
	M util.cc

2007-10-24  James Gallagher  <jgallagher@opendap.org>

	Formatting

2007-09-27  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2007-09-26  Patrick West  <pwest@opendap.org>

	marshaller test A    unit-tests/marshT.cc

2007-09-24  James Gallagher  <jgallagher@opendap.org>

	Applied patch from Patrice to package/ship generated files with source dists.
	M Makefile.am

2007-09-21  James Gallagher  <jgallagher@opendap.org>

	Fixed various issues.

2007-08-28  James Gallagher  <jgallagher@opendap.org>

	Modified because issues show up in the nightly builds.
	M    XDRUtils.cc
	M    Vector.cc

	unit-test/Makefile.am: Removed comments that shadowed various unit tests since I think that was checked in by mistake.

	Auto reset of Subversion properties

2007-08-27  Patrick West  <pwest@opendap.org>

	Added methods to be able to send dap objects to iostream in addition to the methods to send to FILE pointers. Created Marshaller and UnMarshaller classes to pass to serialize and deserialize methods (respectively) to separate out that code from BaseType classes. Created XDRFileMarshaller to serialize into XDR using FILE pointer. Created XDRStreamMarshaller to serialize into XDR using ostream (XDR memory buffer). Created XDRFileUnMarshaller to read from XDR using FILE pointer. Did NOT create XDRStreamUnmarshaller as it didn't seem to be needed. Separated out anything to do with XDR into separate header files and utility class XDRUtils. M    DODSFilter.cc M    Int16.cc M    Int32.h M    Structure.h M    Sequence.h M    Str.h M    configure.ac A    XDRUtils.h A    xdr-datatypes-static.h M    cgi_util.cc A    xdr-datatypes-config.h.in M    dods-datatypes-static.h M    Error.cc A    UnMarshaller.h M    Int16.h M    DAS.h M    DDS.cc A    XDRFileMarshaller.h M    tests/expr-test.cc M    Array.cc M    BaseType.h M    Float64.h M    UInt16.cc M    AlarmHandler.h A    Marshaller.h M    Byte.cc M    Byte.h M    DDS.h M    BaseType.cc A    XDRUtils.cc M    Makefile.am M    Constructor.h M    Error.h M    Int32.cc M    DODSFilter.h M    DataDDS.cc M    Float32.cc M    util.h M    AttrTable.cc M    Grid.h M    Structure.cc M    cgi_util.h M    Vector.cc M    Str.cc M    Sequence.cc A    XDRFileUnMarshaller.cc M    Float32.h A    XDRFileUnMarshaller.h M    AttrTable.h M    Constructor.cc M    UInt32.h A    XDRStreamMarshaller.h M    dods-datatypes-config.h.in M    Vector.h M    DAS.cc M    util.cc M    Float64.cc M    UInt32.cc A    XDRStreamMarshaller.cc M    Grid.cc M    Connect.cc M    unit-tests/Makefile.am A    XDRFileMarshaller.cc M    Array.h M    UInt16.h

2007-08-24  James Gallagher  <jgallagher@opendap.org>

	Makefile.am: Updated fortify targets

2007-08-23  Patrick West  <pwest@opendap.org>

	Functionality of Passive classes was passed to their parent classes. Added set_value(vector<type>) methods to Vector. Added default read method to Structure that iterates through vars and calls read, just as PassiveStructure did. Removed Passive classes from Makefile. D    PassiveUrl.cc D    PassiveInt16.h M    Structure.h D    PassiveStr.cc D    PassiveStr.h D    PassiveUInt16.h D    PassiveInt16.cc D    PassiveByte.cc D    PassiveFloat32.h D    PassiveStructure.cc D    PassiveStructure.h D    PassiveUInt32.cc D    PassiveFloat32.cc D    PassiveArray.cc M    Makefile.am D    PassiveInt32.cc M    Structure.cc M    Vector.cc D    PassiveFloat64.cc D    PassiveArray.h D    PassiveInt32.h D    PassiveUrl.h D    PassiveByte.h M    Vector.h D    PassiveFloat64.h D    PassiveUInt32.h D    PassiveUInt16.cc

2007-08-22  James Gallagher  <jgallagher@opendap.org>

	Str.h: Changed the size of max_str_len from 32767 to 65535 (DODS_USHORT_INT-1) because 32k was not big enough for the AURA HDF5 data files. See ticket 962 and 956.

2007-08-21  James Gallagher  <jgallagher@opendap.org>

	Response.h: Made the new 'status' parameter have a default value of '0' so that specializations do not need modification if they know nothing about the new param. This change was made for PipeResponse.h - arguably something that should be removed, but it's there as long as we support the CGI server. StdinResponse.h: Removed the second param to teh ctor since it is no longer needed.

	Makefile.am: Removed -Werror since on OS/X and RHEL3 the grammar files generate warnings about unused variables.

2007-08-20  James Gallagher  <jgallagher@opendap.org>

	Removed warnings about strict aliasing rules by adding Vector::void *value() and replacing calls to buf2_val() with it. See ticket #941.

	Updates to a number of the doxygen comments.

	Fixed a problem in util.cc where the sense of size_ok() was backwards! Also rewrote parts of ce_functions.cc so that value() was used in place of buf2val() which is far better from a type-safety standpoint and removes a number of warnings about strict aliasing of types. Also fixed error in Error.cc where 'undefined_error' was used where zero (0) should have been used. Modified RValue"build_btp_args() so that the size of the arg list is added to the malformed args message.

2007-08-18  James Gallagher  <jgallagher@opendap.org>

	Patch from Patrice Dumas that fixes the distclean target and repairs the spec file now that the generated grammar files are no longer included checked into subversion.
	M    libdap.spec
	M    Makefile.am

2007-08-17  James Gallagher  <jgallagher@opendap.org>

	Added a target so that the generated grammar files are copied to a directory so that they don't _have_ to be built using bison/flex.
	M    INSTALL
	M    Makefile.am

	I removed the generated grammar files from svn (but put copies in the new 'grammarfile' subdirectory). Now, svn checkouts need bison and flex to build.
	D    lex.gse_.cc
	D    lex.dds.cc
	D    expr.tab.h
	D    dds.tab.h
	D    ce_expr.tab.cc
	M    GNU/GNURegex.cc
	D    lex.Error.cc
	M    Makefile.am
	D    ce_expr.tab.h
	D    Error.tab.h
	A    grammarfiles
	A    grammarfiles/ce_expr.tab.h
	A    grammarfiles/lex.das.cc
	A    grammarfiles/Error.tab.cc
	A    grammarfiles/Error.tab.h
	A    grammarfiles/lex.dds.cc
	A    grammarfiles/lex.gse_.cc
	A    grammarfiles/lex.ce_expr.cc
	A    grammarfiles/das.tab.cc
	A    grammarfiles/das.tab.h
	A    grammarfiles/dds.tab.cc
	A    grammarfiles/lex.Error.cc
	A    grammarfiles/dds.tab.h
	A    grammarfiles/gse.tab.cc
	A    grammarfiles/gse.tab.h
	A    grammarfiles/expr.tab.h
	A    grammarfiles/ce_expr.tab.cc
	D    lex.das.cc
	D    lex.ce_expr.cc
	D    das.tab.h
	D    das.tab.cc
	D    dds.tab.cc
	D    Error.tab.cc
	D    gse.tab.cc
	D    gse.tab.h

2007-08-15  James Gallagher  <jgallagher@opendap.org>

	Fixes from a security audit

	More changes based on a secutiry audit.
	M    lex.gse_.cc
	M    lex.dds.cc
	M    dds.tab.h
	M    lex.Error.cc
	M    Makefile.am
	M    util.h
	M    lex.das.cc
	M    lex.ce_expr.cc
	M    util.cc
	M    dds.tab.cc
	M    GeoConstraint.cc

	Patch to add HTTP response status to the Response object and to fix the spelling of getdap (it was geturl in places). From Darren Hardy.
	M    HTTPResponse.h
	M    lex.gse_.cc
	M    lex.dds.cc
	M    Response.h
	M    dds.tab.h
	M    lex.Error.cc
	M    HTTPCacheResponse.h
	M    HTTPConnect.cc
	M    lex.das.cc
	M    getdap.cc
	M    lex.ce_expr.cc
	M    AISMerge.cc
	M    dds.tab.cc
	M    StdinResponse.h

2007-08-13  James Gallagher  <jgallagher@opendap.org>

	Modified as part of a security audit and refactoring.
	M    RValue.cc
	M    cgi_util.cc
	M    Error.cc
	M    ConstraintEvaluator.cc
	M    DDS.cc
	M    Array.cc
	M    Makefile.am
	M    Error.h
	M    HTTPCache.cc
	M    DataDDS.cc
	M    dds.lex
	M    DAS.cc
	M    util.cc
	M    Connect.cc
	M    dods-limits.h
	M    dds.y
	M    Array.h
	M    ce_expr.lex

2007-08-09  James Gallagher  <jgallagher@opendap.org>

	Applied the hyrex_redirect patch from NASA. This code now detects and records the value of a Location: HTTP header.
	M    HTTPConnect.cc

2007-08-07  Patrick West  <pwest@opendap.org>

	OPeNDAPDir and OPeNDAPFile not needed in libdap, specific to cedar project. M    Makefile.am

	Not needed in libdap, specific to cedar project. A    http://scm.opendap.org:8090/svn/trunk/cedar-handler/OPeNDAPFile.h D    http://scm.opendap.org:8090/svn/trunk/libdap/OPeNDAPFile.h

	Not needed in libdap, specific to cedar project. A    http://scm.opendap.org:8090/svn/trunk/cedar-handler/OPeNDAPFile.cc D    http://scm.opendap.org:8090/svn/trunk/libdap/OPeNDAPFile.cc

	Not needed in libdap, specific to cedar project. A    http://scm.opendap.org:8090/svn/trunk/cedar-handler/OPeNDAPDir.cc D    http://scm.opendap.org:8090/svn/trunk/libdap/OPeNDAPDir.cc

	Not needed in libdap, specific to cedar project. A    http://scm.opendap.org:8090/svn/trunk/cedar-handler/OPeNDAPDir.h D    http://scm.opendap.org:8090/svn/trunk/libdap/OPeNDAPDir.h

2007-06-27  James Gallagher  <jgallagher@opendap.org>

	unit-tests/Makefile.am: Added -I$(topsrcdir) to the CPPFLAGS for distcheck.

	tests/Makefile.am: Added -I$(topsrcdir) to the CPPFLAGS for distcheck.

	Updated for version 3.7.8
	M    INSTALL
	M    README
	M    NEWS

2007-06-26  James Gallagher  <jgallagher@opendap.org>

	Updates for version 3.7.8 - still need to do README and INSTALL.
	M    DODSFilter.cc
	M    configure.ac
	M    ChangeLog
	M    libdap.spec
	M    NEWS

	Replaced unidata support email with the opendap-tech list address.

	Auto reset of Subversion properties

2007-06-25  James Gallagher  <jgallagher@opendap.org>

	Added.
	AM   gl/config.charset

	Added files from the gnulib update.
	A    gl/m4/wint_t.m4
	A    gl/m4/wchar.m4
	A    gl/m4/localcharset.m4
	A    gl/m4/ulonglong.m4
	A    gl/m4/stdint.m4
	A    gl/m4/gnulib-common.m4
	A    gl/m4/wctype.m4
	A    gl/m4/longlong.m4
	A    gl/m4/include_next.m4
	A    gl/m4/glibc21.m4
	AM   gl/localcharset.c
	A    gl/ref-del.sed
	AM   gl/localcharset.h
	A    gl/ref-del.sin
	A    gl/ref-add.sed
	AM   gl/wchar_.h
	A    gl/ref-add.sin
	AM   gl/stdint_.h
	AM   gl/wctype_.h

2007-06-22  James Gallagher  <jgallagher@opendap.org>

	Updated gnulib and fixed a memory problem in the GNURegex class (which should really be renamed to DAPRegex, but that would break other code). The problem was that to use the gnulib regex code the config.h header has to be included and the gl subdir must be searched. I moved the declaration of the regex_t field of Regex into the implementation file to avoid having config.h in a header that is installed in <prefix>/include. This fixes ticket #953 which first showed up in libnc-dap.
	M    tests/Makefile.am
	M    GNU/GNURegex.cc
	M    GNU/GNURegex.h
	M    Makefile.am
	M    regex_test.cc
	M    gl/alloca_.h
	M    gl/m4/regex.m4
	M    gl/m4/gnulib-comp.m4
	M    gl/m4/ssize_t.m4
	M    gl/m4/gnulib-cache.m4
	M    gl/m4/onceonly_2_57.m4
	M    gl/m4/codeset.m4
	M    gl/m4/alloca.m4
	M    gl/m4/extensions.m4
	M    gl/regex_internal.c
	M    gl/malloc.c
	M    gl/stdbool_.h
	M    gl/regex.c
	M    gl/regex_internal.h
	M    gl/regex.h
	M    gl/regexec.c
	M    gl/Makefile.am
	M    gl/gettext.h
	M    gl/alloca.c
	M    gl/regcomp.c
	M    util.cc
	M    Operators.h
	M    unit-tests/RegexTest.cc
	M    unit-tests/Makefile.am

2007-06-21  James Gallagher  <jgallagher@opendap.org>

	Reverted to the old version of get_attr() for release.
	M    AttrTable.cc

	escaping.cc: one last call to size replaced.

	escaping.cc: Replaced calls to string::size() with ones to string::length(). They return the same information, but it's cleaner to use the same method everywhere

2007-06-19  James Gallagher  <jgallagher@opendap.org>

	Fixed a problem in save_raw_http_header() where a header from an old server (terminated by a newline but no return) caused a read violation when the header was empty.
	M    HTTPConnect.cc

2007-06-08  James Gallagher  <jgallagher@opendap.org>

	Spelling in comments and strings
	M    AlarmHandler.h
	M    GeoConstraint.h
	M    expr.h
	M    RCReader.h

2007-06-04  James Gallagher  <jgallagher@opendap.org>

	Updated comments.
	M    lex.gse_.cc
	M    AISResources.cc
	M    configure.ac
	M    cgi_util.cc
	M    lex.dds.cc
	M    ChangeLog
	M    ConstraintEvaluator.cc
	M    Array.cc
	M    ce_expr.tab.cc
	M    Byte.cc
	M    lex.Error.cc
	M    ce_expr.tab.h
	M    Error.tab.h
	M    AttrTable.cc
	M    lex.das.cc
	M    lex.ce_expr.cc
	M    das.tab.h
	M    ce_functions.cc
	M    Constructor.cc
	M    das.tab.cc
	M    ArrayGeoConstraint.cc
	M    Connect.cc
	M    Error.tab.cc
	M    Clause.cc
	M    doxy.conf
	M    gse.tab.cc
	M    gse.tab.h

2007-05-25  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2007-05-24  Patrick West  <pwest@opendap.org>

	Standard location of PackageMaker command line app. M    Makefile.am

	Ability to build .pkg file from the Makefile instead of running PackageMaker GUI. A    OSX_Resources/Info.plist A    OSX_Resources/Description.plist M    Makefile.am

2007-05-18  James Gallagher  <jgallagher@opendap.org>

	Updated pkg.m4 macros
	M    pkg.m4

2007-05-17  James Gallagher  <jgallagher@opendap.org>

	Fixed typos in grammar files.
	M    Error.lex
	M    gse.lex
	M    gse.y
	M    ce_expr.y
	M    Error.y
	M    dds.lex
	M    das.lex
	M    das.y
	M    ce_expr.lex

	Fixed typos in libdap headers.
	M    DDXParser.h
	M    Sequence.h
	M    SignalHandler.h
	M    debug.h
	M    escaping.h
	M    Connect.h
	M    ce_functions.h
	M    SignalHandlerRegisteredErr.h
	M    gse_parser.h
	M    DDS.h
	M    ArrayGeoConstraint.h
	M    GeoConstraint.h
	M    HTTPCacheResponse.h
	M    Error.h
	M    AISResources.h
	M    PipeResponse.h
	M    util.h
	M    Grid.h
	M    AttrTable.h
	M    PassiveUrl.h
	M    Url.h
	M    Clause.h
	M    Operators.h
	M    HTTPConnect.h
	M    StdinResponse.h
	M    Array.h
	M    UInt16.h

	Auto reset of Subversion properties

2007-05-16  James Gallagher  <jgallagher@opendap.org>

	Added pkg.m4 to conf so build from svn will work on machines w/o pkg-config. Updated comments.
	A    conf/pkg.m4
	M    Makefile.am
	M    Constructor.h
	M    unit-tests/Makefile.am

2007-05-14  James Gallagher  <jgallagher@opendap.org>

	Removed the html docs from svn; RPM now builds a 'doc' package.
	D    docs/html.tar.gz
	M    libdap.spec

	Resolved conflicted state of AISDatabaseParser.h

	Auto reset of Subversion properties

2007-05-13  James Gallagher  <jgallagher@opendap.org>

	Patrice Dumas' changes to dods-datatypes.h - Now the header uses the C99 types unless th stdint.h header is not present.
	D    dods-datatypes.h.in
	M    configure.ac
	A    dods-datatypes-static.h
	M    conf/acinclude.m4
	M    Makefile.am
	A    dods-datatypes-config.h.in

	Auto reset of Subversion properties

2007-05-12  James Gallagher  <jgallagher@opendap.org>

	Added Patrice Dumas' pkgconf patches
	M    dods-datatypes.h.in
	M    configure.ac
	AM   conf/compile
	M    conf/libdap.m4
	A    conf/check_zlib.m4
	M    libdap.spec
	M    BaseType.cc
	M    Makefile.am
	M    Structure.cc
	A    libdapclient.pc.in
	A    libdap.pc.in
	A    libdapserver.pc.in
	M    dap-config.in

2007-05-10  James Gallagher  <jgallagher@opendap.org>

	Comments & Strings
	M    BaseType.h
	M    BaseType.cc
	M    Float32.cc
	M    AISDatabaseParser.h
	M    Float32.h
	M    AISDatabaseParser.cc
	M    AISConnect.h

2007-05-02  James Gallagher  <jgallagher@opendap.org>

	Updates for 3.7.7
	M    configure.ac
	M    ChangeLog
	M    libdap.spec
	M    README
	M    NEWS

2007-03-29  James Gallagher  <jgallagher@opendap.org>

	Added definition of trunc() for Solaris < 10.

	Added definition of trunc() for Solaris < 10.

2007-03-28  James Gallagher  <jgallagher@opendap.org>

	All files (.cc and .h) formatted using astyle. I found one introduced error and one issue with the strings passed to the Error exceptions.

2007-03-27  James Gallagher  <jgallagher@opendap.org>

	Minor formatting changes.
	M    Byte.cc
	M    unit-tests/HTTPConnectTest.cc

	Wrapped the calls to ConstraitEvaluator::eval() in a compile-time constant (EVAL) which defaults to zero (so the calls are not made for non-sequence types). Also wrapped the server-side compression code in a compile-time constant COMPRESSION_FOR_SERVER3 which is also zero by default. Lastly, added DapObj constructor init for BAS, DDS and BaseTyep constructors.

2007-03-26  James Gallagher  <jgallagher@opendap.org>

	DDS.cc, unit-tests/DDSTest.cc: Fixed ticket # 708. The dataBLOB element now gets an empty href attribute.

	README: Added a note about thread-saftey.

	Patch from Patrice Dumas: Fix the order of library builds! This closes #880.

2007-03-23  James Gallagher  <jgallagher@opendap.org>

	Fixed the help/version/args messages for the server-side functions so that they are somewhat rational. There is a ticket to develop a 'capabilities' response for Hyrax and that should replace these messages.
	M    ce_functions.cc
	M    GeoConstraint.cc

	Updated test for changes to the 'wrong number of args" messages from the first set of server-side functions.
	M    tests/expr-testsuite/data.zz0
	M    tests/expr-testsuite/data.z0

2007-03-12  James Gallagher  <jgallagher@opendap.org>

	Resolved signed/unsigned compares
	M    Vector.cc

	Removed some int/unsigned compares
	M    tests/TestArray.cc

	Updated notes and version information for 3.7.6.
	M    configure.ac
	M    README.AIS
	M    ChangeLog
	M    INSTALL
	M    README.dodsrc
	M    libdap.spec
	M    README
	M    NEWS

	Fixed some errors in the unit tests, one bug in the RCReader when reading the VALIDATE_SSL keyword. Updated the parser stuff.
	M    lex.dds.cc
	M    RCReader.cc
	M    lex.das.cc
	M    das.tab.h
	M    das.y
	M    das.tab.cc
	M    unit-tests/RegexTest.cc
	M    unit-tests/RCReaderTest.cc

2007-03-11  James Gallagher  <jgallagher@opendap.org>

	Removed DODS_DEBUG
	M    ce_functions.cc

2007-03-09  James Gallagher  <jgallagher@opendap.org>

	Fixed ticket #857: The linear_scale function was crashing because of a failure to test that a parent variable existed before getting its type. I also fixed an unrelated problem where double quotes around an attribute value broke the string --> double code and added a new feature where files which omit the y intercept because it's zero do not return an error but instead use 0.0 as a default. Finally, the error message text was improved.
	M ce_functions.cc

2007-02-16  James Gallagher  <jgallagher@opendap.org>

	Makefile.am: removed some errant tabs.

	dap-config.in: fixed #816; --help was wrong.

	I removed throw(Error) from the method declarations in the header and impl.  files. I removed the include of Error.h from the header. I added the include using "" in the impl. This should fix the ml-structrs build error that started on 1/7/07 when Rob made some changes for the win32 build.
	M    GNU/GNURegex.cc
	M    GNU/GNURegex.h

2007-02-09  James Gallagher  <jgallagher@opendap.org>

	Updated for version 3.7.5
	M    docs/html.tar.gz
	M    libdap.spec

2007-02-07  James Gallagher  <jgallagher@opendap.org>

	Updated for 3.7.5
	M    configure.ac
	M    INSTALL
	M    README
	M    NEWS
	M    ChangeLog

	main_page.doxygen: Updated the version number to 3.7.5.

	ce_functions.cc, GeoConstraint.cc, HTTPConnect.cc: Formatting lex.dds,cc, les.gse_.cc: Regenerated.

2007-02-05  James Gallagher  <jgallagher@opendap.org>

	data.z2-7: updated the data values for two and three dimensional arrays given the new code in GeoConstraint.

	expr-test.cc, TestArray.cc: formatting changes

	AISMergeTest.cc, HTTPConnectTest.cc: Fixed errors that have cropped upover time, esp. as Server4 has become the default.

2007-02-03  Patrick West  <pwest@opendap.org>

	Added information about PATH and LD_LIBRARY_PATH. M    INSTALL

2007-01-30  James Gallagher  <jgallagher@opendap.org>

	ce_functions.cc: Added support for missing values to linear_scale. Now, if missing_value is present (in the attributes or given as a parameter) values which match will not be scaled.

2007-01-29  James Gallagher  <jgallagher@opendap.org>

	ce_functions.cc: Added a new version of get get_attribute_double_value() that takes a vector of strings and returns the value of the first attribute found in that vector. Also cleaned up the memory use in the linear_scale function so that function no longer leaks the new template variable. This was part of the fix for #660 (See also the checkin for Clause.cc from today).

	Clause.cc: Added a call to set_read_p(true) in Clause::value so that handlers' read() methods will not try to 'read over' the values inserted to the variables by a CE function.

	GeoConstraint.cc: Minor formatting fix.

2007-01-26  James Gallagher  <jgallagher@opendap.org>

	Updates to comments.

	ce_functions.cc: Fixed ticket 659 where array data was not read when a relational constraint was not used. The bug crept in while making another fix (for the HDF4 handler). The problem was that Grid::read() was used to read the maps (bit not the Array) and as a side effect read_p was set for the entire Grid, not just the maps. I reset the Array read_p value; see ce_functions.cc

2007-01-21  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Synch win32 Makefile wrt recent libdap code changes

2007-01-12  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2007-01-12  Patrick West  <pwest@opendap.org>

	comment headers updated with correct information and Copyright. M    DapObj.h M    DapIndent.h M    DapIndent.cc

2007-01-11  Patrick West  <pwest@opendap.org>

	Added dump method to the BaseType classes, DAS, DDS, DataDDS. To do this, created a DapObj base class for all of these to inherit from (directly or indirectly) and in the DapObj class is the operator<< method. This will aid in debugging. Created an indentation classes to help with dumping objects. M    Int16.cc M    Int32.h M    Structure.h M    Sequence.h M    Str.h M    Int16.h M    DAS.h M    DDS.cc M    BaseType.h M    Array.cc M    Float64.h M    UInt16.cc M    Byte.cc M    Byte.h M    DataDDS.h M    BaseType.cc M    DDS.h M    Makefile.am M    Constructor.h M    Int32.cc A    DapObj.h M    DataDDS.cc A    DapIndent.h M    Float32.cc M    AttrTable.cc M    Grid.h M    Structure.cc M    Vector.cc M    Str.cc M    Sequence.cc M    Float32.h M    AttrTable.h M    Constructor.cc M    UInt32.h M    Vector.h M    DAS.cc M    Float64.cc M    UInt32.cc M    Grid.cc A    DapIndent.cc M    Array.h M    UInt16.h

2007-01-08  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2007-01-07  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Last Makefile tweeks to automate pkging for win32

	Add doc's that accompany win32 libdap releases to the repository

2007-01-07  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2007-01-07  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Prevent "error.h" from getting picked up during ml-structs build under win32 (that's error.h with a little "e").

2007-01-06  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Removed VC++-6.x-specific ifdefs.  6.x not supported any longer anyway as some old template-related hacks are no longer in the code.

	Add sample code for compiling/linking with libdap under win32

2007-01-03  James Gallagher  <jgallagher@opendap.org>

	Vector.h: Removed 'Vector::' prefix in a bunch on accessors; these caused g++ 4.1.1 to gag. Fix from Rob Cermak.

2007-01-02  Patrick West  <pwest@opendap.org>

	3.7.4 release M    configure.ac M    ChangeLog M    libdap.spec M    NEWS

2006-12-31  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Synchronize select win32 Makefiles to build/pkg the same way

2006-12-20  James Gallagher  <jgallagher@opendap.org>

	Added Structure::transfer_data() so that a handler can simulate the actions of serialize() without actually sending the data.
	M    Structure.h
	M    Structure.cc
	M    Sequence.cc

	DDXParser.cc: Fixed an error introduced by the Eclipse code formatter.

2006-12-19  James Gallagher  <jgallagher@opendap.org>

	DDXParser.cc, DODSFilter.cc: Formatting changes

2006-12-13  James Gallagher  <jgallagher@opendap.org>

	Updated libdap.pmproj to/for version 3.7.3

2006-12-10  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Change of pkging location simplifies user builds

2006-12-06  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Set LIBDAP_ROOT appropriately in the MS Windows case

	Remove external .manifest as an issue by internalizing into binaries

2006-12-05  James Gallagher  <jgallagher@opendap.org>

	getdap.cc: Fixed a bug where the constraint expression passed in using -c was not used when getting either a DDS or a DDX (but it was used when getting data).

	Added comments to DDS and DataDDS about when it's OK to delete their type factories (only when you're done using the DDS or if you're about to switch to a new factory).

2006-12-05  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Require *.exe.manifest to accompany .exe's if they are to run.  I guess I don't yet know why these are generated

	Improve win32 exe linking

2006-12-03  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Just libdap for win32 makefile tweeks

2006-12-02  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	New Makefile code to gen exports for dll's automatically

	Module export def's no longer required.  Constructed at build time.

2006-11-26  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Automate module export definition regeneration for dll's (hard)

2006-11-24  James Gallagher  <jgallagher@opendap.org>

	Updated OSX ReadME.txt for 3.7.3

	Documentation and build file update for the 3.7.3 release.

	AISMergeTest.cc: UPdated baseline to account for new fnoc1.das file in data/nc.

2006-11-22  James Gallagher  <jgallagher@opendap.org>

	Updated ChangeLog

2006-11-21  James Gallagher  <jgallagher@opendap.org>

	Fixed unescattr() in escaping.cc. Now the code works when there are several escaped characters or when the escapes are escaped. That is, this version can be used by the libnc-dap library and the result is code that passes all the nc_test tests for char and text attributes.

2006-11-12  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Make win32 pkging dir locaton slightly more flexible

	Update module export definitions for dll versions of the Core

2006-11-11  James Gallagher  <jgallagher@opendap.org>

	Removed errant 3.7.3 sub directory.

2006-11-07  James Gallagher  <jgallagher@opendap.org>

	Tagged as 3.7.3

	Updated docs for version 3.7.3

	HTTPConnectTest.cc: Turned off debugging

	HTTPConnectTest.cc: Fixed up the tests for headers once again...

	Auto reset of Subversion properties

2006-11-06  James Gallagher  <jgallagher@opendap.org>

	configure.ac: I moved the DAP Protocol setting up where it's likely to be updated and not glossed over.

	getdap.cc: getdap now reports the protocol version in addition to the server version.

	Added tests for the new parameter VALIDATE_SSL

	HTTPConnect.cc, RCReader: The .dodsrc file now supports a VALIDATE_SSL option which controls libcurl's validation of SSL hosts and certificates. If this is set (the default), certificates must be signed by a recornized Certificate Authority and hosts must be properly named. Clear (set to zero) to get the old behavior from libcurl which does not perform this validation.

2006-11-03  James Gallagher  <jgallagher@opendap.org>

	HTTPConnect.cc: Modified so that gzip and compress are also accepted encodings.

2006-11-03  Patrick West  <pwest@opendap.org>

	Removed DODSResponseObject from the Makefile after removing the file from libdap. DAS and DDS no longer inherit from DODSResponseObject. New classes representing DAS, DDS and DataDDS were created in BES. M    Makefile.am

	Moved DODSResponseObject.h to the BES, naming it BESResponseObject. Created in BES three classes to represent DAS, DDS, and DataDDS. D    DODSResponseObject.h M    DAS.h M    DDS.h M    DDS.cc

2006-10-30  James Gallagher  <jgallagher@opendap.org>

	expr-tests for geogrid() and geoarray(): Fixed the tests so they work using the new notation which passed geo points using lat,lon as oppoed to lon,lat.

	Makefile.am: Removed the debug flags from AM_CXXFLAGS. -Werror really breaks the builds because of issues in the bison/flex code.

2006-10-28  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-10-27  James Gallagher  <jgallagher@opendap.org>

	Constructor.cc, ArrayGeoConstructor.cc: Removed DODS_DEBUG

	DDSTest.cc: Removed compiler warnings.

	HTTPConnect.cc: Fixed a bug in save_raw_http_headers() where the test for the \r\n line terminator was broken (tested nmemb-1 instead of nmemb-2. Makefile.am: added a target for test coverage and added the debugging options to CXXFLAGS by default. Make sure to back this out before release Unit Tests: Fixed up warnings in the unit tests

	DDS.h: Added declarations for the new transfer_attributes() methods

	Constructor.h: Added declarations for the new transfer_attributes() methods.

	BaseType.h: Added a little text to the ptr_duplicate() documentaion.

	HTTPCache.cc: Changed the way the mutex which is used to protect the various methods is initialized.

	GeoConstraint.cc: Fixed two warnings, one about using a prefix operator with modulus and assignment back to the same variable and the other about field initialization order.

	DODSFilter.cc: Fixed the broken definition of send_blob(), not that it matters...

	DDS.cc: I removed the second attempt at transfer_attributes and started on a third. This one seems to work much better; see the tests in DDSTest.cc. This version takes the _dim attributes from the hdf4 server and bundles them with a Grid Map or puts them in a sub-container for an Array. This should not break libnc-dap while still preserving all the attribute data.

	Constructor: Added code to merge attributes into a constructor. This method is called from DDS.

	ce_functions.cc: Removed unused parameters.

	ArrayGeoConstraint: Fixed a warning where one version of the constructor was not using all of its parameters.

	ArrayGeoConstraintTest: added

	DDSTest.cc, Makefile.am: Updated with tests for DDS::transfer_attributes.

	Added test data for DDS::transfer_attributes new new version.

2006-10-24  James Gallagher  <jgallagher@opendap.org>

	HTTPConnect.cc: Removed debugging.

	DDS.cc: Removed the 'sub table' code from transfer_attributes(). getdap.cc: Added -X option to build the DDX on the client to simplify debugging (e.g., ticket 480)

	Massive removal of exception quaifiers/declarations. I've left only the excpetion declarations in RCReader (which declare that no excpetions are thrown) and those for constructors. In HTTPConnect.cc:save_raw_http_headers() fixed a bug where headers were assumed to have \r\n terminators. That is true only for new servers. See ticket #631 for more information.

	cgi_util, DODSFilter: Made many params & methods const

2006-10-23  James Gallagher  <jgallagher@opendap.org>

	Fixed AISDatabaseParser.cc

	AISDatabaseParser.cc: Replaced calls to getLineNumber and xmlSAX2GetLineNumber with calls to one or the other depending on the library version. In some places the SAX2 API was used exclusivele, in others the old API was used. The changes mean the new API will always be used OR the old API will always be used, depending on library version.

	DDXParser.cc: I put the call to xml2's getLinNumber() Back in the code since older distros don't have the newer library.

2006-10-20  James Gallagher  <jgallagher@opendap.org>

	Closed some tickets for the server-side functions and added the version function.

	Fixes for ticket 616: I added code to GeoConstraint that checks the bounding box to make sure it includes data and returns an Error if it does not. Also, the order of the bounding box lat and lon were switched to fit more with practice. The GeoConstraint method arguments were no changes, only the order of lat and lon passed to the geogrid() and geoarray() functions.

	Auto reset of Subversion properties

2006-10-19  James Gallagher  <jgallagher@opendap.org>

	Data for geoarray tests added.

	Baseline data for geoarray tests added.

	Tests for geoarray: Added

	Added geoarray() which required changes to GeoConstraint and GridGeoConstraint (I created GridGeoConstraint and made GeoConstraint abstract). ce_functions.cc was also modified.

	ArrayGeoConstraint.cc: Added

	ArrayGeoConstraint.h: Added

	Auto reset of Subversion properties

2006-10-18  James Gallagher  <jgallagher@opendap.org>

	Updated baseline for text.z3.exp (data.z3) after fixing GeoConstraint::find_latitude_indeces().

	Added data.61a-d

	GridGeoConstraintTest: Updated with a new test for find_latitude_indeces.

	Updated the data.z? files given that the range selection behavior in GeoConstraint has been changed.

2006-10-16  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Update win32 module export definitions for latest libdap*.

	Provide header for find_if under win32

	Change funcs that return nothing to be declared so

2006-10-14  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-10-13  James Gallagher  <jgallagher@opendap.org>

	GridGeoConstraint: Fixed the calls so that they no longer use the dds argument

	GridGeoConstraint: Added

	Removed DDS from GeoConstraint.

	HTTPCache.cc: Minor change to a comment.

	Refactored GeoConstraint so that all the Grid-specific code is now in GridGeoConstraint (created/added GridGeoConstraint). Modified ce_functions so that geogrid uses the new object. Updated the unit tests. Added the new class to the Makefile.am

	Auto reset of Subversion properties

2006-10-12  James Gallagher  <jgallagher@opendap.org>

	Added tests.

	Test baseline data for the geogrid() function

	Changes test.10 to test.a

	Auto reset of Subversion properties

2006-10-11  James Gallagher  <jgallagher@opendap.org>

	Added

	Added tests to expr-testsuite for geogrid. Somewhat dubious at the moment.

2006-10-10  James Gallagher  <jgallagher@opendap.org>

	expr-test.cc: reformatted

2006-10-09  James Gallagher  <jgallagher@opendap.org>

	BaseType, RValue, et c.: Closed ticket regarding optimization of build_btp_args. Args are always BaseTypes and before they were always read. This could cause huge Grid/Array variables to be read when those were arguments to functions, even if the running the function would result in only a small part of the Grid/Array being returned. Now arguments are not read. If functions need values for the arguments, they must read them themselves.

	cgi_util.cc: Fixed a bug in set_mime_text where the wrong 'type' was returned. The type was always set to dap4_ddx.

	CEFunctionsTest: Paths easy to set for debugger.

	DDXParserTest: Turned off debug

	AISDatabaseParser: Replaced old xml getLineNumber with the newer SAX2 api call.

2006-10-06  James Gallagher  <jgallagher@opendap.org>

	Vector: Added set_value() and value() methods. Updated docs

	ce_functions.cc: Now the linear_scale function will work for Grid Maps in the hdf4 handler.

	Check point: I've modified Connect, getdap and ObjectType so they support a Connect::request_ddx() method. I've added a stream reader to DDXParser and am in the process of figuring out where the attributes are going!

2006-10-05  James Gallagher  <jgallagher@opendap.org>

	DDXParser.h: Added an intern_stream() method to read from a stream and updated the code (one function) to use the new SAX2 API from libxml2.

	DDXParser.cc: Added an intern_stream() method to read from a stream and updated the code (one function) to use the new SAX2 API from libxml2.

	Vector.cc: Ran indent

2006-10-04  James Gallagher  <jgallagher@opendap.org>

	ConstraintEvaluator: Now uses a list to store the list of functions and the add_function() methods now overwrite functions with the same names so it's possible to provide specializations of the standard functions in ce_functions.

	Added value()/set_value() methods to Float32/64, Int16/32, UInt16/32 and Str.

	ce_functions.cc: Both grid and geogrid now use a little hack to read the map vectors of a Grid. The HDF handler cannot read the Grid Maps directly (maps on HDF are not really variables but are attributes instead). This hack involves setting send_p for the just the maps and then calling the Grid's read() method.

	ConstraintEvaluator: Now uses a list to store the list of functions and the add_function() methods now overwrite functions with the same names so it's possible to provide specializations of the standard functions in ce_functions.

	Vector.cc: Simplifed the code in val2buf()

2006-10-03  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-10-02  James Gallagher  <jgallagher@opendap.org>

	Float64, Int32: Added value/set_value() methods Grid: Added an reverse iterator typedef and rbegin/rend methods. This provides an easy way to access the 'rightmost' map vectors (used by geogrid()).

	Vector.cc: Ran through astyle indent utility.

	parser-util.cc: Ran through astyle indent utility.

	CEFunctionsTest: Added tests for linear_scale().

	ce_functions: Added linear_scale function. CEFunctionsTest: Added tests for linear_scale().

2006-09-30  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-09-29  James Gallagher  <jgallagher@opendap.org>

	Makefile.am: Added GEOConstraintTest

	GeoConstraintTest: Extracted from CEFunctionsTest and added to svn.

2006-09-28  James Gallagher  <jgallagher@opendap.org>

	Clause.cc: Fixed up some comments.

	GeoConstraint.cc: Turned off instrumentation; removed throw() from declartions, fixed a problem with bad latitude constraint information that caused a fatal error (now it sends a message indicating how to fix the problem).

	DODSFilter.cc: Modified send_data() so that errors thrown by BaseType functions will be returned to clients correctly.

	ce_functions.cc, GeoConstraint.h: Removed 'throw(Error)' from declarations since C++ calls abort() when/if another type of excpetion is thrown, even if there's a catch() clause for it.

	ce_functions.h: Removed 'throw(Error)' from declarations since C++ calls abort() when/if another type of excpetion is thrown, even if there's a catch() clause for it.

2006-09-27  James Gallagher  <jgallagher@opendap.org>

	Vector.cc: I made the instrumentation in the ctor and dtor 'level two' statements so that the output would be less cluttered.

	GeoConstraint.cc: reorder_data_longitude_axis() now works. CEFunctionsTest.cc: Turned off debugging.

2006-09-26  James Gallagher  <jgallagher@opendap.org>

	GeoConstraint: Checkpoint; passes unit tests but still fails with a real dataset (COADS_CLIMATOLOGY). Problem with circular longitude axis.

2006-09-25  James Gallagher  <jgallagher@opendap.org>

	ce_functions.cc: The grid() function is now implemented so that geogrid() can use it to evaluate GSEs (ticket 569)

	ce_functions.cc/h: The grid() function is now a BaseType* function. CEFunctionsTests: Work with the new grid() implementation changes.

2006-09-24  James Gallagher  <jgallagher@opendap.org>

	ce_functions.cc: Removed old code that was getting in the way.
	GeoConstraint.cc: Fixed a buf in reorder_data_logitude_axis(): off-by-one
	error when applying the first constraint (used d_lon_length instead of
	d_lon_length-1 for the end point).

	CEFunctionsTest: Added code to use TestTypes from the 'test' directory and
	generally fixed up the tests so they work with the new BaseType function
	versionof geogrid().

2006-09-23  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-09-22  James Gallagher  <jgallagher@opendap.org>

	Modified TestArray so that it's possible to see that arrays really are subsampled. That is, if a constraint is set on an array, TestArray::read() will first allocate the whole array and then sample it, simulating a read() method that's interacting with an API that knows how to sample an array. Works only for two dims.

	test.c{0,1}: Added

	Grid: Added get_array() which returns an Array* so the cast that was needed when using array_var() can be removed. I changed all the calls to array_var() to get_array() (DDS, ce_expr, ce_functions).
	RValue.cc: I removed the read() call when build_btp_args() builds
	an argument list. This change may break client software, but it means
	that variables are not complete read when they are passed to CE
	functions, which should be a big boost in efficiency when working
	with EOS Grids in geogrid().

	Added code in TestArray to make arrays with constrained values.
	GeoConstraint: Updates; almost complete.

	GeoConstraint: Added a new method and an enum to record the 'sense' of the latitude map (normal or inverted). Added tests for the find_latitude_indeces() method to the unit tests

2006-09-21  James Gallagher  <jgallagher@opendap.org>

	GeoConstraint/geogrid checkpoint. Byte,Str: Added value() and set_value() methods TestArray: Improved the read() method so it uses the series_values property and so it returns reasonable values for lat/lon vectors expr-test.cc: Now can be used to test BaseType functions

	Another GeoConstraint checkpoint

2006-09-20  James Gallagher  <jgallagher@opendap.org>

	GeoConstraint checkpoint

2006-09-19  James Gallagher  <jgallagher@opendap.org>

	Makefile.am: Patch from Patrice Dumas regarding the libdapserver and libdapclient libraries.

	libdap.spec: Patch from Patrice Dumas regarding the libdapserver and libdapclient libraries.

	dap-config.in: Changed the semantics of --libs so that it matches the old behavior.

2006-09-15  James Gallagher  <jgallagher@opendap.org>

	Updated the version to 3.7.2 and the associated ChangeLog, configure.ac, et c., files. The docs have also been updated (docs/html.tar.gz).

	HTTPConnect.cc: Changed the way headers are parsed. Now the code assumes that each header is terminated by a \r\n pair (previously the code assumed the line terminator was a \n character only).

	HTTPConnectTest: Fixed most, but not all, of the failures. See ticket 552 for more info.

	test.f.exp: The change to TestStr so that the number included in the string increments broke this test. Fixed.

	Sequence: Doxygen was complaining about the types used in the new transfer_data_*() methods because they were not exactly the same string (vector<Sequence*> versus sequence_values_stack_t). I made them the same.

	doxy.conf: Now the method listings are in alphbetical order.

2006-09-14  James Gallagher  <jgallagher@opendap.org>

	SequenceTest.cc: Now tests the new transfer_data() method.

	Added the transfer_data() method to Sequence. This method reads data using the read() method and loads values into the local object's d_values field. Values can then be used by methods like print_val() which expect to see information stored in the Sequence objects as if the object was part of a client and had read the data off of the wire. I also modified the print_vals_by_row so that nested Sequences values are indented by four spaces.

	TestStr.cc: Modified the string so that the value of count increments by one for each instance.

	TestInt32.cc: Modified so that on 64-bit machines the overflow of the '* 32' operation does not reset the value of _buf to zero, but instead _buf cycles back to 32.

2006-09-13  James Gallagher  <jgallagher@opendap.org>

	Sequence: Added transfer_data and related methods. These are used to move data on the server-side from a data source into the d_values field, loading the variables in the sequence with data in a way that is very similar to the operation of all the other variables. This provides a way to pass a DDS to other code which is loaded with data. SequenceTest.cc and Makefile.am in unit-tests: Test the transfer_data method. Int32: I added a value() method similar to those added to Float32/64 a while back. This simplifies testing so much... configure.ac: Bumped up the revision number of the library.

2006-09-09  James Gallagher  <jgallagher@opendap.org>

	GNURegex: I change the regex_t field from a regular variable to a pointer. Seems to fix the problem, although I don't know why. Not the most reassuring feeling...

2006-09-05  James Gallagher  <jgallagher@opendap.org>

	BaseType.cc: Modified add_var() so that it now throws an InternalErr and fixed up the documentation so it reads correctly.

2006-09-02  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-09-01  James Gallagher  <jgallagher@opendap.org>

	ce_functions.cc: geogrid() no longer uses the projection/selection function model. Now it's a pure projection function.

	GeoConstraint: removed old code and modified find_lon_lat_maps() so that I can test with the COADS dataset. Tests not working...

	GeoConstraint: removed old code and modified find_lon_lat_maps() so that I can test with the COADS dataset. Tests not working...

	checkpoint: GeoConstraint/geogrid() nearly working Changes in DDS, ConstraintEvaluator, ce_functions (now uses the new libdap namespace), RValue, various tests.

	Updates/Changes to the grid() testsuite that uses remote servers. I changed the tests so they now run using servers on test.opendap.org and use getdap (the tests were originally written to use geturl).

2006-08-29  James Gallagher  <jgallagher@opendap.org>

	GeoConstraint: Changed code to do the data translation for split constraints so that it uses memcpy(). Untested.

2006-08-28  James Gallagher  <jgallagher@opendap.org>

	GeoConstraint: Added some of the code needed to swap parts of a 'split' longitude constraint.

	CEFunctionsTest.cc: Added unit tests for vector swapping coode.

	Added separate lon/lat bounding box marking code to GeoConstraint.

2006-08-25  James Gallagher  <jgallagher@opendap.org>

	More work on geogrid(). M    ce_functions.h M    GeoConstraint.h M    Grid.h M    Vector.cc M    ce_functions.cc M    Grid.cc M    unit-tests/CEFunctionsTest.cc M    GeoConstraint.cc

	Auto reset of Subversion properties

2006-08-24  James Gallagher  <jgallagher@opendap.org>

	Progress on the geogrid() server-side function. Changed/Added files: M    RValue.cc M    ce_functions.h M    GeoConstraint.h M    Makefile.am M    gse-test.cc M    ce_functions.cc A    unit-tests/ce-functions-testsuite A    unit-tests/ce-functions-testsuite/two_grid.dds A    unit-tests/ce-functions-testsuite/geo_grid.dds M    unit-tests/CEFunctionsTest.cc M    Clause.cc M    GeoConstraint.cc

2006-08-22  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-08-21  James Gallagher  <jgallagher@opendap.org>

	Updated release files for the 3.7.1 source release.

	ce_functions.cc, DDS.cc, CEFunctionsTest.cc, docs/html.tar.gz: Updates for documentation. For CEFunctionsTest.cc: Added tests for the new grid() and nascent geogrid() code.

	GeoConstraint.cc: Added

	DDS.cc: Fixed tcket 480. The transfer_attributes() method was not handling the HDF4 *_dim_? attribute containers correctly, at least as far as the libnc-dap was concerned. Now those attribute containers are made subtables of the associated variable. That is, if there's a variable <var> and a container <var>_dim_0, then the attribute table <var> will have a subtable 'dim_0'.

	ce_functions.cc: Added stuff for gwogrid() (which still doesn't work).

	BaseType.cc: Updates to comments.

	Grid.h: Comment fixes, moved some doxygen comments into Grid.cc.

	GeoConstraint.h: Added. Currently does nothing.

	ce_functions.h: changed the name of func_grid_select() to projection_function_grid(). Added projection _function_geogrid().

	AttrTableTest.cc: Added a test for the new append_attr() method.

	DDSTest.cc: Added a test for ticket 480 (transfer_attributes()).

	S2000415.HDF.test1.das: Added for more DDS::transfer_attributes() tests.

	Mkaefile.am: GetConstraint.cc Added.

	RValue.cc: Fixes for some comments.

	Grid.cc: Fixes for some comments.

	DAS.cc: REmoved the 'char*' versions of the methods. These have not been needed since we stopped using the GNU String class.

2006-08-17  James Gallagher  <jgallagher@opendap.org>

	BaseType.h: Reformatted a doc comment for var().

	AttrTable: Added append_attr() method that takes a vector of values so that client code does not have to call the single value version in a loop.

	AttrTable: Added append_attr() method that takes a vector of values so that client code does not have to call the single value version in a loop.

2006-08-15  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-08-14  James Gallagher  <jgallagher@opendap.org>

	das.tab.cc: Updated (edits to das.y).

	das.y: config_dap.h --> config.h

	Makefile.am, CEFunctionsTest.cc: Added unit tests for the the grid() ce function.

	Str.cc: No longer includes an extern declaration for escattr() since that function is not called by this code.

	GSEClause.cc: Added the word 'map' to the error messages about missing map variables.

2006-08-11  James Gallagher  <jgallagher@opendap.org>

	ce_functions.cc: Modified so that the errors returned match those in the design.

2006-08-01  James Gallagher  <jgallagher@opendap.org>

	DDS.cc, DDXParser.cc/h, tests/ddx-testsuite/*.ddx: Changed the name of the dodsBLOB element to dataBLOB and the attribute from URL to href. See ticket #454.

	DDSTest.cc: Changed expected name to dataBLOB from dodsBLOB and attribute of that element to href from URL.

	html.tar.gz: Updated build of reference docs.

	generalUtilTest.cc: Fixed test for the new id2www/www2id behavior which escapes the percent sign.

	BaseType.h, ConstraintEvaluator.cc, DODSFilter.cc, escaping.cc/.h, Sequence.cc: Updated comments.

	libdap.m4: Applied Patrice Dumas' patch which checks for the newer dap-config and uses it's options for the three library setup.

2006-07-31  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-07-30  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	w32 Makefile rewrite & export def's for 3-lib split-up of libdap

2006-07-09  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Tweeks for win32 porting effort

	New makefile for win32 libdap version to accomodate 3-library split

2006-07-07  James Gallagher  <jgallagher@opendap.org>

	docs/html.tar.gz, escaping.cc: Updated/corrected documentation.

	cgi_util.cc, configure.ac: Fixed bug 437. When a handler is not passed a version number, it will now use the library's version number set at compile time.

2006-07-03  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Patch core to use libcurl as a dll without crashing

2006-06-14  James Gallagher  <jgallagher@opendap.org>

	Removed GNU error and builtin from Makefile.am (they were already removed from the directry GNU.

	Updates to ChangeLog, README, INSTALL, NEWS, libdap.spec, Makefile.am and html.tar.gz for the beta releae 3.7.0.

2006-06-13  James Gallagher  <jgallagher@opendap.org>

	lex.gse_.cc: Comments

	ce_functions.cc, gse.lex: fixed comments

2006-06-09  James Gallagher  <jgallagher@opendap.org>

	INSTALL.AIX: Added newer comments from Dan S.

	INSTALL: Updated by adding a reference to the INSTALL.AIX file.

2006-06-06  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-06-05  James Gallagher  <jgallagher@opendap.org>

	GNURegex: Added Error thows back into the code

	In GNU: Removed some now-unused files and fixed a bug in GNURegex.cc where config.h was not included when it must be. This caused a failure on OS/X because the rpl_regexec(), ..., symbols were not defined.

2006-06-02  James Gallagher  <jgallagher@opendap.org>

	regex_test.cc: Added

2006-06-01  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-05-31  Nathan Potter  <ndp@opendap.org>

	GNURegex.cc: kludge! Added a workaround patch to GNURegex.cc:match() to avoid a illegal memory access segmentation fault under OS-X 10.4.6. Inline comments provide greater detail. (ndp)

2006-05-31  James Gallagher  <jgallagher@opendap.org>

	ssize_t.m4: Added during most recent update.

2006-05-30  James Gallagher  <jgallagher@opendap.org>

	In gl/: Update to the gnulib code. This may fix a problem on OS/X where the gnulib regexec function appears to corrupt the stack.

2006-05-19  James Gallagher  <jgallagher@opendap.org>

	Various types (Int16, et c.): Removed include of ce_expr.tab.h since that header is included by Operators.h

	Makefile.am: Removed include of libgnu from libdapclient and libdapserver. This should fix the multiple define error at link time.

	ce_expr.y: fixed multiple use of the variable name 'table' in declarations.

2006-05-18  James Gallagher  <jgallagher@opendap.org>

	Makefile.am: reordered libraries and added ce_parser.h to DAP_HDR

2006-05-10  James Gallagher  <jgallagher@opendap.org>

	AISDatabaseParser.h, AISResources.cc, AISResources.h, Resource.cc: Updates to doxygen comments.

2006-05-08  James Gallagher  <jgallagher@opendap.org>

	Operators.h: Made dods_max() inline. This should improve performance and also fix a problem introduced by the recently applied AIX patch where dods_max() was multiply defined.

2006-05-04  James Gallagher  <jgallagher@opendap.org>

	INSTALL.AIX: Updated the information from Dan Stromberg and Martin Peschke.

	Operators.h, RValue.cc, deflate.c: Applied patches from Dan Stromberg which fix problems found during a port to the native AIX compiler.

2006-05-01  James Gallagher  <jgallagher@opendap.org>

	libdap.m4: Added DAP_CLIENT_LIBS and DAP_SERVER_LIBS to symbols that are written out.

2006-04-20  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-04-19  James Gallagher  <jgallagher@opendap.org>

	ce_expr.y: The expression parser now passes the ConstraintEvaluator object to projection functions.

	ConstraintEvaluator: Removed some code that was commented out.

	expr.h: The projection function typedef now includes a fourth argument so that the ConstraintEvaluator can be passed to the projection function. This provides a way for the proj_function to register the matching selection function.

	ce_parser.h: Added. Used to pass both the DDS and ConstraintEvaluator to the CE Parser.

	Auto reset of Subversion properties

2006-04-18  James Gallagher  <jgallagher@opendap.org>

	configure.ac, dap-config.in, conf/libdap.m4: bumped up the revision number to 3.7.0 (which will be the next revision), added options to dap-config --server-libs and --client-libs and updated the libdap.m4 macro to match the new three-library organization of libdap.

	expr.lex, expr.y, lex.expr.cc, expr.tab.cc: Removed/Replaced with ce_expr...

	Removed_functions.txt: Updated for the latest changes.

	lex.ce_expr.cc: Added

	expr-test.cc, tests/Makefile.am: Tests updated for changes in DDS, DODSFilter, et cetera.

	DODSFilter: Modified so that this class now takes a ConstraintEvaluator object in the places where needed.

	DDS: Removed the constraint evaluator and the send() method.

	BaseType.h and it's child classes: Now the serialize() method takes not only a DDS but also a ConstraintEvaluator object.

	ce_expr.lex, ce_expr.y, ce_expr.tab.{cc,h}: Added files that contains a modified ce parser. This parser takes two objects as input: ConstraintEvaluator and DDS. The old parser took only the DDS.

	ConstraintEvaluator: Added this class. Now the ce evaluator is separate from the DDS object.

	Clause.h: Added private methods for the const ctor and operator= so that default versions would not get called by accident.

	cgi_util.cc: Removed the do_data_transfer() function. Use DODSFilter.

	ce_functions.cc: Minor change to the func_length code. It no longer uses the 'constants' vector in DDS to store the BaseType used for the return value. The caller can easily free the storage. Also, this function is never used!

	INSTALL.AIX: Fixed spelling and added a note about not bugging Martin or assuming he's going to guarantee the steps will work.

	Makefile.am: Now builds the ce_expr parser in place of the expr parser. There's no real difference in the grammar accepted by the new parser, but ce_expr takes both the ConstraintEvaluator and DDS objects, where the old one took only the DDS.

	Operators.h: Now uses the ce_expr parser header.

	parser.h: Removed the GSEClause include that I'd commented out earlier.

2006-04-16  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Rename, add dirs and prune as appropriate for VC++ port

2006-04-04  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-04-03  James Gallagher  <jgallagher@opendap.org>

	gse_parser.h: Added. This holds parser info used by the grid() ce function. The contents of this file were originally in parser.h, which holds definitions for the DAP parsers. Moving the info about grid() here maens that the grid() code can be part of the dapserver library.

2006-04-03  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Edit 'scalar deleting destructors' out of win32 module def's

2006-03-31  James Gallagher  <jgallagher@opendap.org>

	For ticket 307 I modified the build so that three libraries are made instead of just one. The libdap library now contains only classes used for the DAP2 implementation. The client and server support code is now in libdapclient and libdapserver. Many files were modified since I trimmed the includes so that classes in libdapclient don't include headers in libdapserver and vice versa.

	Auto reset of Subversion properties

2006-03-30  James Gallagher  <jgallagher@opendap.org>

	Added INSTALL.AIX

2006-03-27  James Gallagher  <jgallagher@opendap.org>

	Massive propset on libdap to get svn to ignore many things so eclipse will work more smoothly

2006-03-24  James Gallagher  <jgallagher@opendap.org>

	Updated svn:ignore for some files.

2006-03-21  James Gallagher  <jgallagher@opendap.org>

	Build of docs/html.tar.gz for 3.6.2 on 3/21/06

	Auto reset of Subversion properties

2006-03-20  James Gallagher  <jgallagher@opendap.org>

	Moved tests/expr-testsuite/test.a to tests/expr-testsuite/test.10.

	test.c.exp: Removed log

2006-03-19  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Win32 libnc-dods requires core's regex.h installed.  None stock on windows.

	Update export module definitions per recent core changes

2006-03-16  James Gallagher  <jgallagher@opendap.org>

	NEWS: Spelling... one more time

	NEWS: Spelling...

2006-03-14  James Gallagher  <jgallagher@opendap.org>

	Updated ChangeLog, configure.ac, libdap.spec and NEWS for version 3.6.2

	I changed the way DODSFilter handles the compression sub-process. The class was caling waitpid on the child process which was blocking even after the child had exited. I found that calling fflush on the FILE* where teh server is writing the response is sufficient to guarantee that all the data from the compressor is written w/o using waitpod. This is a fix for ticket #335

2006-03-10  James Gallagher  <jgallagher@opendap.org>

	Added a new public method to Connect read_data_no_mime() which can be used to read from a file. This method read a DAP2 data object from a file but does not try to parse MIME headers before reading the data. I modified getdap.cc so that it uses this when reading from a file that's not stdin.

	Auto reset of Subversion properties

2006-03-09  James Gallagher  <jgallagher@opendap.org>

	Updated for 3.6.1

	Bumped up the version to 3.6.1. Files affected: configure.ac libdap.spec, INSTALL, README, NEWS.

	Updated tests/expr-testsuite/expr-test.0/test.c by changing its name to test.d so that Eclipse's indexer won't gag on it.

	removed unused test directories expr-testsuite and grid-func-testsuite

	Added -t option to DODSFilter.cc. This was left out by mistake.

	Changed tests from dodsdev to test.opendap.org

2006-03-08  James Gallagher  <jgallagher@opendap.org>

	Fixed the C++-style comment in deflate.c from a bug reprot from Jim Davis at Nasa.

2006-03-06  James Gallagher  <jgallagher@opendap.org>

	Updated for 3.6.0-2

	Increased the release number to two.

2006-03-05  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Trivial change in comment in win32 libdap makefile

	Redo recently clobbered changes from gl/ refresh

2006-03-01  James Gallagher  <jgallagher@opendap.org>

	Updated the OSX_Resources/Readme.txt file for 3.6.0.

2006-02-28  James Gallagher  <jgallagher@opendap.org>

	Updated grammar files and added rpm and OS/X package targets to Makefile.am

	Auto reset of Subversion properties

2006-02-27  James Gallagher  <jgallagher@opendap.org>

	Updated NEWS.

	Updated the Mac/OSX project file for 3.6.0

	Added unit-tests/testFile.cc: This provides a way to link the FILE* output code with C++ strings so that unit tests can work their magic.

	Updated documentation files (README, NEWS, ChangeLog), version information (configure.ac, libdap.spec) and removed two unused unit test files.

	Imported the latest gnulib code (see the Makefile.am in gl for the gnulib-tool arguments).

2006-02-25  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-02-24  James Gallagher  <jgallagher@opendap.org>

	Removed lines in Makefile.am that were commented out.

	Removed html.tar.z and added html.tar.gz

	Removed docs.tar.gz

	Added docs and docs/html.tar.gz

	Fixed up the regression tests so that they don't use deprecated Error methods.

	Removed LongIterAdapter.cc from tests

	Removed files no longer needed. Removed depreacted methods. Updated documentation.

2006-02-23  James Gallagher  <jgallagher@opendap.org>

	Removed most $Log$ entries since they are not supported by Subversion. Will do the rest tomorrow...

	Removed all the method overloads that used const char * parameters. Those methods were added so that the Pix objects, which were passed as void*, would not get called with character strings by mistake. Since the Pix methods are gone, these are no longer needed.

2006-02-21  James Gallagher  <jgallagher@opendap.org>

	I fixed the constructors for both PipeResource and StdinResource so that the parent class and fields were initialized in the correct order. I also fixed up the documentation for DODSResponseObject.

2006-02-21  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Tweek linker settings for libdap dll

2006-02-20  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Sync win32 makefile with unix version, rewrite

	Update module definitions for dll version of libdap

	Tweek for win32 port

2006-02-15  Patrick West  <pwest@opendap.org>

	fixed indentation

	commented out DataDDS constructor that doesn't take BaseTypeFactory

2006-02-15  James Gallagher  <jgallagher@opendap.org>

	DataDDS.cc: Added a call to protocol_string_to_numbers in the constructor. This sets the internal protocol version numbers so that calls to Sequence:: deserialize() work (they now use the protcol version number to select the correct algorithm for reading from the stream instead of the server version).

	AttrTable.cc: Corrected a problem in add_value_alias where looking for attributes could cause a segmentation fault. The problem was that AttrTable::find() was setting the return iterator to attr_end() for the AttrTable object it returned as a value-result parameter (so the test to see if the iterator was pointing to the end needed to be done using that table and not the calling object.

2006-02-14  James Gallagher  <jgallagher@opendap.org>

	NEWS and ChangeLog both updated.

	Auto reset of Subversion properties

2006-02-13  James Gallagher  <jgallagher@opendap.org>

	Modified the print_xml method in Constructor and grid. It no longer prints anything for variables that are not part of the current projection when printing the constrained ddx. This works because the DDS::mark method marks the parents of projected variables.

	Added PipeResponse.h and StdinResponse.h; changed getdap and Connect to use them.

2006-02-13  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Flush weekend win32 porting work back to trunk

2006-02-10  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Removed xdr routines from win32 subdir under libdap.  Code now in base tools used to build under win32.

2006-02-09  James Gallagher  <jgallagher@opendap.org>

	empty comment

	Removed all deprecated methods as per ticket 248. This includes Pix methods, ostream I/O methods used by servers and various junk in Connect.

2006-01-25  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2006-01-24  James Gallagher  <jgallagher@opendap.org>

	Added Removed_functions.txt: This file contains the type signitures of methods/functions recently (version 3.6 and later) removed.

	The ostream I/O was removed and many files were modified. The code is still present inside #if 0 ... #endif preprocessor lines.

2006-01-23  James Gallagher  <jgallagher@opendap.org>

	All unit tests updated to work after removing the iostream functions/methods.

2006-01-19  James Gallagher  <jgallagher@opendap.org>

	Added protocol version to the library. The version number is set in the configure.ac file. I've modified the unit tests so that they work. I've also removed (#if 0 ... #endif) all of the MIME header functions which used the C++ iostream stuff (which is part of the task to remove deprecated code).

2006-01-12  James Gallagher  <jgallagher@opendap.org>

	Updated ChangLog

	DDS.cc: transfer_attributes used odd logic and an unneeded variable. Fixed.

	expr-test.cc: changed new exception code to use fprintf() (it was using cerr).

	GSEClause: Removed the old, unimplemented, methods that were supposed to take the grid() function subexpressions. Fixed up some comments in the class as well.

	cgi_util.cc: In remove_mime_header() \n was used as the MIME header separator when CRLF should have been used. Since the rest of the code was fixed for 3.5.3, remove_mime_header() didn't find the separator. This broke the HTML form response.

2005-12-30  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Work toward accomodating gcc under mingw

2005-12-27  James Gallagher  <jgallagher@opendap.org>

	Installed GNU indent code formatter to eclipse and used it on expr-test.cc

	In expr-test, the function parse_mime() did not test for the new CRLF line terminator. This caused an infinite loop. Fixed. I also added a comment to cgi-util.cc noting that if the CRLF constant is changed, then the one in expr-test.cc should be changed too. Since the test code is, well, test code, it doesn't seem like the constant should be moved out into one of the header files. The CRLF constant is really used only by the cgi-util code.

	Removed regex.loT

2005-12-23  James Gallagher  <jgallagher@opendap.org>

	Removed extra qualtification on the private method Regex::init in GNURegex.h.

	Removed the send version method body and replaced it with a call to do_version() in cgi_util.cc. This consolodates the code that writes HTTP headers to one file.

	Changed all calls to fprintf that write parts of the HTTP resonse header so that they terminate lines using CRLF pairs and not just LF (\n or 0x0a). I also fixed the spelling of Content-Type (the 'T' in 'Type' was not capitalized).

2005-12-12  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Missing colon in switch from recent porting tweeks.

2005-12-11  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	ifdef profoundly-non-portable signal handling code.  Windows has few signals.

	Hardcode blocksize on win32

	Reverse ancient VC++ 6.0 template hacks.  Microsoft has come toward the standard.

2005-12-05  James Gallagher  <jgallagher@opendap.org>

	Updated

2005-11-22  James Gallagher  <jgallagher@opendap.org>

	Made docs a PHONY target

	Fixed source0 using Patrice's patch

2005-11-16  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2005-11-15  James Gallagher  <jgallagher@opendap.org>

	Added commentary

	Added/Hacked

2005-11-11  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2005-11-10  James Gallagher  <jgallagher@opendap.org>

	Added note about dejagnu not working on some systems unless config.guess is linked here or at the top.

2005-11-09  James Gallagher  <jgallagher@opendap.org>

	The XML schema site has chamged to xml.opendap.org. I stopped testing these values because that's not really what the DDS class unit tests should be looking at.

	The set of chars allowed in an identifier was enlarged to include %. The secind test was altered to fit that.

2005-10-31  James Gallagher  <jgallagher@opendap.org>

	Hacked up the pkg target so that the dap-config script has the correct values for the places where the osx package will be installed, not where the build dumps it prior to packaging.

2005-10-25  Patrick West  <pwest@opendap.org>

	added function to access the libdap name from PACKAGE_NAME

2005-10-25  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2005-10-24  James Gallagher  <jgallagher@opendap.org>

	Added

2005-10-18  James Gallagher  <jgallagher@opendap.org>

	Update from build after failed attempt to remove Pix.h

	Fixed som grammatical problems with the DDX response.

2005-10-12  James Gallagher  <jgallagher@opendap.org>

	Updates to the documentation files.

2005-10-07  James Gallagher  <jgallagher@opendap.org>

	escattr() no longer uses Regex.

	Updated to match the new libdap behavior for escaping.

2005-10-05  James Gallagher  <jgallagher@opendap.org>

	I made the standard print representation of a Grid use Array and Maps instead of ARRAY and MAPS. So I fixed the tests too.

	Don't have these in svn.

	Don't have these in svn.

	Fix for ticket #44 (which was filed under the hdf4 handler). I made the set of characters not escaped by id2www and id2www_ce the same as those that dds.les and expr.lex expect in an id. Actually the asterisk is escaped even though dds.lex will parse it,

	Auto reset of Subversion properties

2005-10-04  James Gallagher  <jgallagher@opendap.org>

	Fixed the background one last time

	Added a background image to the osx installer

	Added

	Updates for the OS/X packages stuff.

2005-10-03  James Gallagher  <jgallagher@opendap.org>

	Nodified cleanup to not copy the svn parts of dods_cahce_init when it makes dods_cache. This will help keep Eclipse's svn module from being confused.

	Build improvements from Patrice Dumas.

2005-10-03  Patrick West  <pwest@opendap.org>

	calling fflush rather that fclose in send_data

2005-10-01  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2005-09-30  James Gallagher  <jgallagher@opendap.org>

	Updated NEWS with info about regex.

	Updated for the changes to Regex.

	Added

2005-09-29  James Gallagher  <jgallagher@opendap.org>

	Removed regex from esc2undescore.

	Fixed an error in char2ASCII.

	Grammar update

	Fixes for gnulib regex code.

2005-09-28  Yuan Ho  <yuanho@ucar.edu>

	adding install include dir

2005-09-28  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2005-09-27  Yuan Ho  <yuanho@ucar.edu>

	adding install script

2005-09-27  James Gallagher  <jgallagher@opendap.org>

	New libtool

	Comment about the hack...

	New grammar generated files and some temporary fixes in gl/m4/regex.m4

	Fixed an error where a signed and unsigned were compared.

	Added new copy.

	New gnulib changes; first half, removing the old gl code. I don't think this was necessary, but it's hard to tell.

2005-09-23  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2005-09-22  James Gallagher  <jgallagher@opendap.org>

	Fixed install-sh; it was left out of the earlier mv

	Moved the configuration files into 'conf.'

	Changed the das lexer error message to include a character code.

2005-09-19  Patrick West  <pwest@opendap.org>

	missing declaration of BaseType

2005-09-16  James Gallagher  <jgallagher@opendap.org>

	Added code to DODSFilter so support its use in something other than a Unix command line filter program. In the process I found a bug in escaping.cc:escattr() (ticket 210) which I fixed.

2005-09-08  James Gallagher  <jgallagher@opendap.org>

	Fixed a bug where _REENTRANT is defined and HAVE_STRFTIME is not. This shows up on FC3/4 but not RHEL3 or OS/X.

	Removed

	Auto reset of Subversion properties

2005-09-07  James Gallagher  <jgallagher@opendap.org>

	Build update

	Added

2005-09-06  James Gallagher  <jgallagher@opendap.org>

	Added alloc to gl_MODULES; for the os/x build.

	Added the new gl directory.

	Clean up.

	Midway through resetting gl to only use the regex code.

2005-09-03  James Gallagher  <jgallagher@opendap.org>

	Auto reset of Subversion properties

2005-08-19  James Gallagher  <jgallagher@opendap.org>

	Updated libdap.spec so that it now requires libcurl 7.10.6 (a downgrade from 7.12.0 so that we can build RPMs on RHEL3). This seems to work just fine. Also fixed up the HTPPCacheTest unit test so that it works the first time with a new check out.

	downgrade to libcurl-7.10.6. This seems to work but needs more testing

2005-08-17  James Gallagher  <jgallagher@opendap.org>

	Another shot at getting the build to work...

	Build fixes; rpms now split into plain and -devel; fix for libdap.m4 macro

2005-08-16  James Gallagher  <jgallagher@opendap.org>

	Patched libdap.m4 (from Patrice) and added text the README describing the macro.

	Commented out the set of CFLAGS/CXXFLAGS (which was a left-over from the non-automake build).

2005-08-15  James Gallagher  <jgallagher@opendap.org>

	Updated for the release of 3.5.2.

2005-08-12  James Gallagher  <jgallagher@opendap.org>

	Added back.

	Test delete

2005-08-11  James Gallagher  <jgallagher@opendap.org>

	config_dap.h --> config.h; also removed TRACE_NEW, #pragma interface/impl. in test and unit-tests.

	Removed trace_new.h; use valgrind instead.

	Removed #pragma interface/implementation

	So, I added IteratorAdapter.cc back in again.

	Hmmm... Eclipse still doesn't seem to get the deletes quite right.

	Tests updated for new float32 and 64 value computation.

	Changed how sequential values are generated. The values should be the same on 32 and 64-bit machines.

	Updated...

	I removed the DODS_GTAR and DODS_PERL calls; Added AC_DEFINE for two version sof libxml2 and stripped away some code that was commented out months ago.

	Resolved conflicts & added some comments about the state of the test driver.

	Clarified commentary.

	Added conditional compilation of the XML SAX callback struct. The code now uses the library version number to determine which fields should be included since later version have additional fields.

	Removed unused params in methods as reported by gcc 3.4. This may break gcc 3.2, we will see...

	Removed unused params in methods as reported by gcc 3.4. This may break gcc 3.2, we will see...

2005-08-10  James Gallagher  <jgallagher@opendap.org>

	Changed comparison in set_max_size() so that it uses ULONG_MAX (since the method uses a long) and does not test for negative sizes (since size is unsigned).

	Moved debug options from AM_CXXFLAGS. Set the CXXFLAGS environment variable (sample values are assigned to CXXFLAGS_DEBUG).

	commented out #define DODS_DEBUG 1

	Reverted to previous version (which uses long instead of int). The change breaks the unit tests (which otherwise work on both 32- and 64-bit machines.

	Added

	Latest and greatest eclipse/cdt settings...

	Addressed various warnings from gcc (compiled using -Wall -W -Wcast-align) as part of making the code 64-bit clean.

	Added default init of TestCommon in the copy ctors for the TestByte, ... classes.

	Added proper error return to all unit tests.

	Now GNURegex uses exceptions (std::invalid_argument and domain_error) to signal problems. Controlled using USE_EXCEPTIONS. If this passes on the nightly builds, then remove GNUerror.cc and builtin.h.

	Fixed read() method: It did not include the 16-bit int types int he switch statement.

2005-08-08  James Gallagher  <jgallagher@opendap.org>

	Fixed a leak where a specialization of BaseTypeFactory was used but not deleted.

2005-08-08  root  <root@opendap.org>

	Auto reset of Subversion properties

2005-07-28  James Gallagher  <jgallagher@opendap.org>

	Changes for the OS/X build. Particularly for the regex code in gl.

2005-07-25  James Gallagher  <jgallagher@opendap.org>

	Fixed; the macro was using ifelse and m4_syscmd/m4_sysval but these didn't seem to be working. Also replaced obsolete AC_TRY_TUN with AC_RUN_IFELSE().

2005-07-23  James Gallagher  <jgallagher@opendap.org>

	Added libdap.m4: A macro that other packages can use to check for the library. From Patrice Dumas.

2005-07-22  James Gallagher  <jgallagher@opendap.org>

	Updated requirements for automake, et cetera.

	Updated for automake 1.9.6.

2005-07-21  James Gallagher  <jgallagher@opendap.org>

	Removed calls to OK() in the set_error_code() and set_error_message() methods since these are called by the parser on partially built objects.

2005-07-20  James Gallagher  <jgallagher@opendap.org>

	Improved the documentation of BaseTypeFactory; removed DEFAULT_BASETYPE_FACTORY from Makefile.am; added a note to util.cc:prune_spaces questioning if that function is still needed; added a test of prune_spaces to generalUtilTest.

	Removed DEFAULT_BASETYPE_FACTORY switch. Updated build files using autoreconf --install --force (using automake 1.9.2 from FC3).

2005-07-19  James Gallagher  <jgallagher@opendap.org>

	Updated cdtproject file. Should this be in SVN?

	Added gl/m4 to EXTRA_DIST; needed to get the distcheck target workig with automake 1.6.3. Newer versions of automake set this correctly given that ACLOCAL_AMFLAGS is used.

	Removed $(top_srcdir) from ACLOCAL_AMFLAGS since this breaks autoreconf.

2005-07-18  James Gallagher  <jgallagher@opendap.org>

	Changed ACLOCAL_AMFLAGS from '-I gl/m4' to '-I $(top_srcdir)/gl/m4' to fix one last problem with distcheck.

	Applied Patrice's patch for unit-tests; make distcheck should now work.

	Changed the cache dirs with initial values to <cache>_init and use the cleanup.sh script to cp -r <*>_init <*> to restore them. This way the tests work w/o svn.

	Added blurb about using autoreconf to (re)build the autotools stuff.

2005-07-15  James Gallagher  <jgallagher@opendap.org>

	Updated Makefile.am and the README/INSTALL/NEWS files. The 'dist' target now works for make (although 'distcheck' fails for an odd reason).

	Copied/added

	Removed

	Moved/Added

	Moved the unit tests from 'tests' to 'unit-tests.' The unit tests are now only run when you cd into unit-tests and use make check. This change was made because those tests use network services which might not be present on some hosts used to build the package.

	More fixes for the tests

2005-07-14  James Gallagher  <jgallagher@opendap.org>

	Fixed again...

	Removed extra line. This hosed the test since it causes the HTTPCache class to think there's a second zero-size entry.

	Updated

	Updated

	Updated

	Changed URL; chages cache directory number

	AISMergeTest now works (required files are now installed on test.opendap.org). Also, applied Patrice Dumas' patch for the Makefile.am.

2005-07-13  James Gallagher  <jgallagher@opendap.org>

	Fixed HTTPConnectTest

	Spec file now includes support for a separate devel package (commented out). From Patrice Dumas.

	expr-test tests x, xa, xc, y, ya, and yc now expect to fail (and do on 64bit hosts).

	The last fix for this file? I hope so...

2005-07-12  James Gallagher  <jgallagher@opendap.org>

	Added data files for tests in DDSTest. Bug 112.

	mistakenly removed alloca_.h from svn. Fixed tests/cache_testsuite.

	Test updates: expr-test now works except that 6 tests fail on 64bit machines. Also, I updated the gnulib replacement functions so that gnulib-tool can be used in the future to update. I moved the gnulib functions into the 'gl' subdir and put the m4 macros in there inside the subdir 'gl/m4.' There's a note about the procedure to use to update the functions in INSTALL.

	Added again...

	removed

	Added

	Removed

	Removed.

2005-07-11  James Gallagher  <jgallagher@opendap.org>

	My previous fix for the gnulib mktime bug was bogus since it left a replacement copy of mktime in the library using that name (which is reserved). I've stopped using the gnulib mktime for now since it doesn't seems absolutely necessary.

	Modification from Patrice, et al. These were part of an attempt to work around a bug with using mktime but they did not work.

2005-07-08  James Gallagher  <jgallagher@opendap.org>

	Moved all tests to the 'tests' subdirectory. There are some tests that are broken; only expr-test seems broken now but was not before. Most of the broken tests require a localhost web daemon and specific test files for it to serve; configure test.opendap.org for these instead.

	Removed use of the GPL regex-0.12 code and switched to gnulib (which provides regex and other functions which are covered by LGPL). These turned out to be fairly massive changes. The work was done by Patrice Dumas (Thanks!). I removed a AC_DEFINE macro in m4/mktime.m4 to work around a compilation problem when using gnulib's mktime.c replacement function.

2005-07-06  Patrick West  <pwest@opendap.org>

	Added methods to Connect class to connect with the given URL instead of building the URL to connect with, such as adding .das, .dds, etc...

2005-07-05  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Set eol-style to native on all text file in the trunk

2005-07-05  James Gallagher  <jgallagher@opendap.org>

	Fixed the library version numbers. The order was backwards for the last two digits.

2005-07-04  James Gallagher  <jgallagher@opendap.org>

	Added Patrice Dumas' patches for libtool, et cetera.

2005-07-01  James Gallagher  <jgallagher@opendap.org>

	Moved the unit tests into the tests subdirectory.

	After adding libtool support, I ran autoreconf --force --install which in turn ran libtoolize. this updated a number of the support code for the build. Added ltmain.sh.

	Added. These generated files should be in svn.

	Added support for libtool using a patch from Patrice Dumas.

	Set exec

	ModifiedMakefile.am so that the dejagnu_driver.sh script now works.

2005-06-30  James Gallagher  <jgallagher@opendap.org>

	Automake changes; these work and build the tests. the DejaGNU test support has not been tested yet but the unit tests all run and the dejagnu drivers all build.

	Switched to automake. Not complete but functional.

	Applied patch from Patrice Dumas for the automake build.

2005-06-22  James Gallagher  <jgallagher@opendap.org>

	Added for automake build

	Started work on an automake file for this code; only partly done. The library builds but nothing else is in place. The grammars are in progress. They build but the way gse is handled is the the way they all should be unless I can get automake's lex/yacc rules to work. See Makefile.am.in_progress and configure.ac.for_am. Also included in this check in is a patch to libdap.spec from Patrice Dumas.

	Remove the attempts to utilize automake's support for bison/flex introduced in the past 9 revisions.

2005-06-21  James Gallagher  <jgallagher@opendap.org>

	moved...

	checkpoint

	moved from *.lex files for automake

	Moved from gse.lex for automake

2005-06-20  James Gallagher  <jgallagher@opendap.org>

	Fixed the source path.

	Commented out the Patch: and %patch lines since the patched code is now in svn.

	Accepted patches from Patrice Dumas <pertusus@free.fr> which improve the build by using the system's regex library if found. Also included in the patches were improvements to the rpm spec file; the file now uses the fedora template and includes a fix for Mandrake ('Tue' --> 'Tues' in the change log.

2005-06-15  James Gallagher  <jgallagher@opendap.org>

	Fixed configure so that it does not include -gstabs on OS/X.

	Changed eol-style, mime-type, other properties. Removed generated files from svn. Modified configure.ac so that it tests for bison and does not use bison -y.

	Generated... Should these even be in SCM?

2005-05-23  James Gallagher  <jgallagher@opendap.org>

	Removed cast to int at tokenlength = ... to avoid a warning about differring pointer and int sizes on x86 64-bit CPUs.

	Now uses local common-tests.exp and test.opendap.org.

	Tests now use the local copy of common-tests.exp.

	Reformat using indent and indent-eclipse plugin.

2005-05-17  Patrick West  <pwest@opendap.org>

	updated dap_version using libdap_version

2005-05-13  James Gallagher  <jgallagher@opendap.org>

	3.5.1

	3.5.1

	checkpoint

2005-05-12  James Gallagher  <jgallagher@opendap.org>

	moved

	Renamed libdap-config to dap-config to fall in line more with what other projects are doing.

	05/12/05 jhrg

	Modified install so that it no longer appends a version number to the static library or includes. When we build a dynamic lib, look into the version number thing then.

2005-05-11  James Gallagher  <jgallagher@opendap.org>

	5/11/05

2005-05-10  James Gallagher  <jgallagher@opendap.org>

	Changed to work with rpm. Don't alter the values of variables like $includedir because values for these are passed into make by rpmbuild, overriding the values set by the here. This was happening with $includedir which had the string '/libdap' appended early on in the Makefile and then @PACKAGE_VERSION@ appended in the install-header target. When 'make' was run from the command line, this worked OK, but not when rpmbuild passed in a new value for $includedir.

	Added

	5/10/2005

2005-05-06  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	3.5.0

	3.5.0

	Added a short blurb about the AIS and a pointer to README.AIS

2005-05-05  James Gallagher  <jgallagher@opendap.org>

	3.5.0

	Updated.

	Updates for 3.5.0 release.

	3.5.0

	Updated for version 3.5.0

	Made libdap-config executable

	Added

2005-04-22  James Gallagher  <jgallagher@opendap.org>

	Version 3.5.0 builds; passes most tests

	Checkpoint

	Added

	checkpoint: changes made on the mac

2005-04-21  James Gallagher  <jgallagher@opendap.org>

	Checkpoint: Build works

	Removed PTHREADS compile-time switch. Also, checkpoint for the build work.

2005-04-20  James Gallagher  <jgallagher@opendap.org>

	Updated build.

	Added

	Updated for the new CVS module.

	Moved configure.in to configure.ac

2005-04-18  Patrick West  <pwest@opendap.org>

	Remove dependence on _program_type and _program in OK method

2005-04-15  James Gallagher  <jgallagher@opendap.org>

	04/15/05 jhrg

	Remove include of config_dap.h from HTTPCache.h.

	Removed include of config_dap.h; builders must use opendap-config --cflags when they compile code which using the headers.

2005-04-07  James Gallagher  <jgallagher@opendap.org>

	Updated doxygen comments: fixed errors; updated comments about set_read_p. Removed the VirtualCtor classes. Added a README about the factory classes.

2005-03-30  James Gallagher  <jgallagher@opendap.org>

	Ran depend.

	Modified to use the new factory class.

	Now uses the BaseTypeFactory class.

	Added.

	Minor mod: ... != "" --> !....empty(). Using string::empty() may be more efficient.

	Now uses the BaseTypeFactory class.

	Now uses the BaseTypeFactory class.

	Added DEFAULT_BASETYPE_FACTORY define; use this to control whether the DDS objects suppy the BaseTypeFactory by default.

	Modified the length function (func_length()) so that it uses the DDS object's BaseTypeFactory to make the Int32 variable that holds the result.

	Added.

	Now uses the BaseTypeFactory class.

	Added DEFAULT_BASETYPE_FACTORY define; use this to control whether the DDS objects suppy the BaseTypeFactory by default.

	Added

2005-03-23  Patrick West  <pwest@opendap.org>

	algorithm and functional needed on sun and can be included on Linux, so no need to wrap in ifdef WIN32

2005-03-22  James Gallagher  <jgallagher@opendap.org>

	Added to doc/comments.

2005-03-21  James Gallagher  <jgallagher@opendap.org>

	Removed old definitions of DBYTE, et c.

2005-03-18  James Gallagher  <jgallagher@opendap.org>

	Probing for leaks...

	Mods for unit tests; tracking down memory leaks.

	Updated the old URI Copyright; removed clause about requiring credit in publications. This was never really intended and is probably unenforcable.

	Added fclose(tmp) call to print_xml_test() to address part of a memory leak in get_temp_file() that shows up with valgrind.

2005-03-17  Patrick West  <pwest@opendap.org>

	file and directory utilities

2005-03-02  James Gallagher  <jgallagher@opendap.org>

	RemovedConnections.cc/h; now in nc3-dods.

	Removed Connections.{cc,h} from the headers; this is now part of the netCDF CL code.

2005-02-24  James Gallagher  <jgallagher@opendap.org>

	A throw Error line was left in deserialize() by mistake; I removed it.

2005-02-16  Patrick West  <pwest@opendap.org>

	implemented read

	doxygen comments

	d_str changes to ::var, ::serialize and ::deserialize

2005-02-14  James Gallagher  <jgallagher@opendap.org>

	Fixed handling of strings. No longer frees storage quite a capriciously.

	Added d_str, a field to hold string values.

	Added code to use the new d_str field; a special field to hold strings.

	Added tests for strings and structures.

2005-02-11  James Gallagher  <jgallagher@opendap.org>

	Fix for bug 751: Uint16/32 --> UInt16/32 as per examples in the DAP2 specification.

2005-02-10  James Gallagher  <jgallagher@opendap.org>

	Fixed eclipse/cvs comment.

	_duplicate() now performs a deep copy on the BaseType* instances used to \n\ hold values in the field _vec (used when there's a Vector of Structures, et c.). set_vec()\n\ now calls ptr_duplicate() on the BaseType* passed in to be used as a value for \n\ element i. This might seem odd (and it might hose performance, we may have to \n\ add another method to skirt the copy for some people) but it fits with the \n\ memory model where anything allocated outside the library can be freed outside the \n\ library. Not performing the deep copy and then freeing the objects in _vec in the dtor\n\ caused all sorts of problems, as one might imagine. I also fixed up the comments.

	Added.

	Added ArrayTest which currently tests the _duplicate() method of Array (and Vector).

	Added ArrayTest as a friend class.

	Replaced old style cast with static_cast in val2buf.

2005-02-08  James Gallagher  <jgallagher@opendap.org>

	Merged with release-3-4-10.

	Added -Wno-unused to the lexer compilation so I don't have to hear about yy_fatal_error() not being used.

	Removed parens around 'string *' at line 735; gcc-3.4 complained.

2005-02-02  James Gallagher  <jgallagher@opendap.org>

	Checkpoint

2005-01-28  James Gallagher  <jgallagher@opendap.org>

	Resolved conflicts from rlease-3-4-9 merge. Also minor change to expr.y to support Sequence CEs that use the Array projection notation.

	Resolved conflicts from merge with release-3-4-9

	01/28/05 jhrg

2005-01-27  James Gallagher  <jgallagher@opendap.org>

	Modified the expression processing code in expr.y so that array-style projections on the fields of Sequences work. They should project that field of the Sequence. To test I will merge in new changes on the 3.4 branch for the dap only.

2004-11-30  James Gallagher  <jgallagher@opendap.org>

	Updaed comments.

2004-11-17  James Gallagher  <jgallagher@opendap.org>

	I made the var_value() methods (among others) virtual. This will allow me to subclass them in the netCDF CL.

2004-11-16  James Gallagher  <jgallagher@opendap.org>

	Fixed tests. Also fixed a bug intorduced in Vector where a template with no name caused some software (any code which depends on the template having the same name as the array) to fail.

	Added reverese iterators.

	Changed the prototype for add_var() so that it takes three arguments. This matches the version used elsewhere in the type hierarchy and fixes some glitches with subclasses calling the correct method, esp. in the netCDF CL.

	Modified the ctor and add_var() method so that a null variable can be added as a template.  This makes it possible for a client of the library to create an Array without allocating its template. This is used by the netCDF CL's translation software when it needs to create a set of arrays that have the same dimensions. The 'master' array object is created and then duplicated when each of the different template variables are created/added.

	Added.

	Added accessors for reverse iterators.

	Added accessors for the new reverse iterators. Also added a new method to access variables using an integer index.

	Added subclass version of add_var(). This version looks at the variable being added and, if it's an Array adds the template variable. It calls Vector::add_var() to actually add the variable.

2004-11-15  James Gallagher  <jgallagher@opendap.org>

	Added reverse iterator methods.

	Added a specialization of the add_var() method.

	Added a btp_stack paramter to var() so that it will match the prototype declared in BaseType. This fixed a problem in the inhertiance hierarchy

2004-10-22  James Gallagher  <jgallagher@opendap.org>

	Formatting...

	Modified del_attr_table() so that it returns the Attr_iter following the one that has just been deleted.

	toString() now uses type_name() in place of type().

	I've set the code to always build with debugging enabled until we are ready to release.

2004-09-16  James Gallagher  <jgallagher@opendap.org>

	Fixed the return values of buf2val() and val2buf(). They now return the size of a std::string pointer, std::string.

	Corrected the commets for set_vec() and buf2val().

2004-09-09  James Gallagher  <jgallagher@opendap.org>

	Fixed a bug in is_end_of_rows(): The d_ending_row_number field was not checked correctly. Constraints for a single row such as [0], [0:0], [1:1:1], et c., did not work properly. If a CE of [0:1] was given, the response which should have been returned from [0:0] was returned. Fixed by replacing >= with > in the test of d_ending_row_number.

2004-08-25  James Gallagher  <jgallagher@opendap.org>

	I added a second test to del_attr_table() to check the case when a scalar attribute is followed by a container. I also fixed a typo in append_container()'s error message text.

	I modified DDS::transfer_attributes() so that the _dim_? attributes generated by the HDF4 server will be added to their variable's attr table directly and not result in a nested table. This seems closer to the organization clients expect.

2004-08-03  James Gallagher  <jgallagher@opendap.org>

	Fixed for the changed definition of find().

	Fixed up the clean target WRT the tests and docs subdirs.

	Added a test for transfer_attributes().

	I changed the three static functions that are helpers for transfer_attributes() to methods. This makes them easier to test, although I never wrote any unit tests for them...

	I fixed a number of problems with the transfer_attributes() method and its support functions. First, instead of searching the top level variables, the code now searches using the var() method, which can find variables when only the leaf node name is given. The code that processes global attributes is now much smarter about what a global attribute container really looks like (it ignores empty containers if another candidate is present and actually has some attributes). Finally, the _dim_0, _dim_1, et c., attributes generated by the HDF4 server are now grouped with the variable to which they refer. Before they were lost.

	Added a test for del_attr_table().

	Fixed an error in clone() and added del_attr_table(Attr_iter).

	Fixed comment/doc errors. Added del_attr_table().

2004-08-03  Neil Godfrey  <neil@thegodfreys.net>

	...second half of the test.

	testing Neil's account.

2004-07-19  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Updates to get the core to build off the trunc after a merge.

	#include <functional> for "unary_function" under win32.

	Remove use of function under win32 via #ifdef.  It uses mkstemp.

	Patch after merge problem regarding OS X.

	Update trunc for win32 after a merge.

2004-07-18  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Make the regular-expression code compile under OS X.

	Make the Regular-expression code compile under OS X.

2004-07-09  James Gallagher  <jgallagher@opendap.org>

	Update from merge: regex-0.12 added; Makefiles rebuilt.

2004-07-09  Patrick West  <pwest@opendap.org>

	Adding Passive Data Model objects

	Parent class of DAS and DDS

2004-07-07  James Gallagher  <jgallagher@opendap.org>

	Merged with release-3-4-8FCS

	Merged with release-3-4-8FCS

2004-06-28  Patrick West  <pwest@opendap.org>

	Added DODSResponseObject and Passive data model objects

	Adding compile date and time to version

	saving string representation of response type

	html mime header

	Inherit DDS and DAS from DODSResponseObject

	Passive data model objects

	unix compiler issues

2004-06-27  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Patch for recent core changes.

	Get it compiling under win32 again by including <functional>

	Get it to compile under win32 by including <functional> and <algorithm>

	Remove out-of-date dependancies.

2004-04-12  James Gallagher  <jgallagher@opendap.org>

	Removed obsolete CURLOPT_MUTE.

2004-03-10  James Gallagher  <jgallagher@opendap.org>

	Repairs to the methods which provide access using iterators. These were using '*_iter &' type params and that made newer versions of g++ gag. I'm not absolutely sure what the problem was, but making the parameters regular value params and not references fixed it.

2004-03-01  James Gallagher  <jgallagher@opendap.org>

	Bring the trunk up to date with the code in my working directory...

2004-02-19  James Gallagher  <jgallagher@opendap.org>

	Merged with release-3-4-2FCS and resolved conflicts.

2004-02-18  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

2004-02-05  James Gallagher  <jgallagher@opendap.org>

	Removed strstream include.

	Switched from strstream to stringstream.

	Fix for bug 696; removed an errant 'ends' call in octstring(). Never use ends with the stringstream classes.

2004-01-26  James Gallagher  <jgallagher@opendap.org>

	Build fixes.

2004-01-23  James Gallagher  <jgallagher@opendap.org>

	Grammar regeneration (removed List.h; must rebuild the *.tab.c files and commit them to CVS).

	Removed errant DBG() with d_ver field (that field is no longer part of the class.

	01/23/04 jhrg

2004-01-22  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Merged with release-3-4.

	Added *.y files to XXX.tab.o dependencies. Maybe this will fix the odd problems with bison files and the tab.o files...?

	Fixed an error in the clean target; the docs directory was not removed.

2004-01-21  James Gallagher  <jgallagher@opendap.org>

	Added dot path so that a class graph and changed tabs to four spaces.

	Removed include of List.h.

2003-12-10  James Gallagher  <jgallagher@opendap.org>

	More fixes after resolving conflicts. This code still fails some tests.

	Merge with 3.4. Some of the files contains erros (some tests fail). See the ChangeLog for information about fixes.

2003-12-08  Ethan Davis  <edavis@ucar.edu>

	Merge release-3-4 into trunk

2003-09-30  James Gallagher  <jgallagher@opendap.org>

	Changes from the release-3-4 branch were small (and there was no change here); I copied the file since we're not yet ready to merge the 3.4 branch but need the new file to work on translation (over in nc3-dods).

2003-09-25  James Gallagher  <jgallagher@opendap.org>

	Misc changes.

	Made local functions static.

2003-09-05  James Gallagher  <jgallagher@opendap.org>

	Added

	Added

	Added

	Added

2003-06-02  James Gallagher  <jgallagher@opendap.org>

	Added support for retrieval of the dodsBLOB url. The intern() method takes a point to a string; on return from the call the referenced string holds the blob url.

2003-05-30  James Gallagher  <jgallagher@opendap.org>

	Refactor, first pass, complete.

	Parser now parses all data types correctly.

	Parser now parses all data types correctly. Needs to be refactored so common code can be combined.

	get_name() is now a const method. Added alias support to the print_xml() method.

	Made get_name() a const method.

	Minor fixes to the comments.

	Modified transfer_attrs() so that aliases are supported. Unfortunately, aliases are broken in the C++ code and in their design, so this addition/fix is of limited use.

	Added response enums for DDX and Response. Also added the send_ddx() method.

	Modified add_var() so that the array only adopts the name of the template variable when that name is not null!

2003-05-29  James Gallagher  <jgallagher@opendap.org>

	Parses top level attributes and simple variables.

	Added.

2003-05-28  James Gallagher  <jgallagher@opendap.org>

	Fixed spelling in one of the error messages (!)

	Added.

2003-05-27  James Gallagher  <jgallagher@opendap.org>

	Added DDX_Response to the set_response() method.

2003-05-24  James Gallagher  <jgallagher@opendap.org>

	Ran depend; removed List.o

2003-05-22  James Gallagher  <jgallagher@opendap.org>

	Changes that add support for the DDX response. I've based this on Nathan Potter's work in the Java DAP software. At this point the code can produce a DDX from a DDS and it can merge attributes from a DAS into a DDS to produce a DDX fully loaded with attributes. Attribute aliases are not supported yet. I've also removed all traces of strstream in favor of stringstream. This code should no longer generate warnings about the use of deprecated headers.

2003-05-16  James Gallagher  <jgallagher@opendap.org>

	Changed s_as_string so that it uses the correct value for _type for 's.' This value changed since I got rid of List.

2003-05-15  James Gallagher  <jgallagher@opendap.org>

	Tests changed because List has been removed from the DAP.

	Test changes because List has been removed from the DAP.

	05/15/03 jhrg

2003-05-13  James Gallagher  <jgallagher@opendap.org>

	05/13/03 jhrg

	MOdified DODSFilter so that it takes a -o switch which names the type of response to generate. This can be used to build a single hander which can return all of the responses.

2003-05-02  James Gallagher  <jgallagher@opendap.org>

	Fixes for the tests and win32 builds.

	Minor fixes: Fixed a spelling mistake and removed #if 1 ... #endif. Mostly I wanted this code in for the 3.4 branch.

2003-05-01  James Gallagher  <jgallagher@opendap.org>

	Modified the code so that perform_garbage_collection() is called only when startGC() is true. This should minimize the time spent scanning the entry entry table.

	Changed catch(...) statements to ones which explicitly declare the types of exceptions (all Error, I think). If these catch clauses re-throw the exceptions ad the method declares its exceptions, the (...) causes an immediate call to abort().

	Changed some of struct Functors to classes.

	Fixed a bug in the code that handles conditional requests. Once a conditional request was made, the curl_slist was freed but the HTTPHEADER option (set with curl_easy_setopt()) was not cleared. Subsequent calls to curl_easy_perform() would try to use the freed slist with predictably bad results. Also removed strstream code in place of Rob's stringstream replacement for Win32.

	Fixed another class interface lock bug. It would be better to lock class resources (fields) and name them so that it was obvious which were locked and by what mutex. Also, made sure garbage collection happens every time the index file is written out.

	Corrected the get_conditional_response_headers_test() given the latest mods to HTTPCache.cc.

2003-04-23  James Gallagher  <jgallagher@opendap.org>

	Changes for the unit tests. This involved merging Rob's VC++ changes and fixing a bug in escaping.cc (a call to string::insert invalidated an iterator in a loop).

2003-04-22  James Gallagher  <jgallagher@opendap.org>

	Merged with 3.3.1.

2003-04-02  Patrick West  <pwest@opendap.org>

	Upgraded tests to use cppunit, some with DBG2 statements

	Added doxygen comments to iterator adapter classes

	Fixed bug in parser-util that did not recognize illegal characters when checking float32 and float64 strings, added tests to parserUtilTest to test for illegal characters as in das-test, updated das-test as in 3.3 version.

2003-03-14  James Gallagher  <jgallagher@opendap.org>

	I tidied up process_data and changed its name to print_data. Removed <assert.h>. Added more instrumentation.

2003-03-13  James Gallagher  <jgallagher@opendap.org>

	merge() throws Error, now. Also, get_ais_resource() throws Error if the ais resource is a file and it cannot be read.

	merge() now throws Error, too.

	Added DBG statements to is_cache_enabled(). This helped find a bug that defied the debugger...

	Hacked documentation. Added process_options() and initialize(). Changed the names of the fields so that they all begin with 'd_'.

	Added process_options() and initialize() methods. These facilitate specializing this class.

	Significant changes regarding the mutex code. I found out that since config_dap.h was not being included, the mutex code was never built! Once built, I found a bunch of deadlocks. Many of the methods had to be modified to fix this/these problem(s).

	Fixed documentation. Added #include "config_dap.h" which will have to be removed somehow, after hacking up the configure script. removed the const qualifier from some methods because they lock a mutex. These could be marked const volatile, but I bet there are a lot of compilers that don't support that yet...

	Added a DBG2 statement to track down a bug. Useful when you cannot use a debugger.

	Added DODSFilterTest to the unit tests.

	Added DGB lines to track down a bug. These seem useful when you cannot use a debugger.

2003-03-12  James Gallagher  <jgallagher@opendap.org>

	Updated to the new CppUnit. This mostly works but there's one test that depends on file modification times that does not work.

2003-03-11  James Gallagher  <jgallagher@opendap.org>

	Added regular expressions to the AIS subsystem. In an AIS database (XML) it is now possible to list a regular expression in place of an explicit URL. The AIS will try to match this Regexp against candidate URLs and return the ancillary resources for all those that succeed.

	if there's no AIS database, the field d_ais_merge is null. Make sure not to dereference that pointer in that case!

2003-03-07  James Gallagher  <jgallagher@opendap.org>

	Changed dods.ini to dods.rc.

2003-03-05  James Gallagher  <jgallagher@opendap.org>

	Added Response.h, HTTPResponse.h and HTTPCacheResponse.h to the CLIENTHDRS variable.

2003-03-04  James Gallagher  <jgallagher@opendap.org>

	Fixed some of the unit tests.

	Added

	Added

	Fixed some problems with the comments...

	Removed code in #if 0 ... #endif. Added get_version(). Fixed constructor documentation.

	Removed code in #if 0 ... #endif. Added d_version and a get_version() method. This is useful for some clients, like geturl.

	Minor change; changed the order of inline and static for the get_hash() function.

	Removed code in #if 0 ... #endif. This was mostly WIN32 code that I don't think we need anymore.

	Removed code in #if 0 ... #endif.

	Added dods_keep_temps global. This is handy for debugging.

	Updated with usage info.

	Updated geturl to match changes in the Connect, HTTPConnect and HTTPCache classes. In addition, the program can be used with the prototype AIS (which works for DAS objects only). See the -A option.

	Fixed Resource::ResourceRule enum usage (fallback, overwrite, replace).

	Now uses Response objects.

	Now used Response objects.

	Removed many old methods (methods that were used with libwww). Switched to the new Response objects.

	Modified to use Response objects. Removed many old methods which no longer have any meaning (i.e., they were hold overs from several years ago).

	Modified cache_response() so that only http and https URLs are cached.

	Now uses Response objects.

	Switched to Response objects. Removed unneeded methods. The Response objects now control the release of resources such as deleting temporary files, et c.

	Now uses Response objects.

	Updated the dependencies.

	Removed DODS_DEBUG define.

	Added DBGN macro which does not print the file and line number information.

	Updated grammar files.

	Added.

2003-03-03  Patrick West  <pwest@opendap.org>

	reformatted source file and replaced (void) with ()

	reformatted source files and removed (void) parameters replacing with ()

2003-02-28  James Gallagher  <jgallagher@opendap.org>

	Added

2003-02-27  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added

	grammar updates plus added IASConnect to the Makefile.in.

	Fixed a call to connect down in the code that handles the '*' operator.

	Updated this to use the new, non-deprecated, methods in Connect (and AISConnect!). The code is a bit tighter. Added a new option, -A, which tells geturl to use the AIS when resolving a URL. In its current incarnation (early prototype) this just handles DAS objects and only uses a single AIS database found by looking for the AIS_DATABASE entry in the ~/.dodsrc configuration file.

	Added get/set_ais_database() methods along with code to parse an AIS_DATABASE entry in the configuration file.

	Added set_accept_deflate() method.

	Moved the empty constructor, et c., from private to protected so that children can define their own empty ctors to suppress the C++ default versions. Removed some old code and reorganized the declarations. There are a lot of methods here that should be removed...

	Removed old code (code inside #if 0 ... #endif) and added a call to HTTPConnect::set_credentials() and set_accept_deflate() in the constructor.

	Added to the documentation.

	Changed prune_spaces() so taht it takes a const string &.

	Added.

2003-02-27  Patrick West  <pwest@opendap.org>

	Removed ResourceRule, moving enum ResourceRule to Resource.h, renaming it to rule

2003-02-27  James Gallagher  <jgallagher@opendap.org>

	I removed old code (code inside #if 0 ... #endif) and changed the private definitions of HTTPConnect(), ... to protected definitions. These methods are present to prevent C++ defaults from being called. I made them protected so that specializations of this class can hide their own empty constructor, et cetera. When these are private a subclass cannot do that.

	Removed old code.

2003-02-26  James Gallagher  <jgallagher@opendap.org>

	Made has_resource const.

	Updated grammars.

	Updated dependencies.

	Updated; includes AIS unit tests.

	Added/updated.

	Updated tests for write_database().

	Fixed documentation comments.

	Made methods virtual.

	Changed is_resource() call to has_resource().

	Added iostream header. Moved the file open out of the constructor; this seemed to be throwing an exception when the file did not exist, even though that makes no sense...

2003-02-25  James Gallagher  <jgallagher@opendap.org>

	Changed the name of the parse() method to intern().

	Fixed call to AISDatabaseParser::intern (changed the name from parse).

	Changed name of is_resource to has_resource.

	Changed is/has_resource_test to match the new name of the method: has_resource.

	Updated. Now configures tests/Makefile.

	Fixed an errant string comparison.

	Added.

	Added entries for AISMergeTest.

	Added test the erase() method.

	Added erase() method.

	Fixed for the latest rev of ais_database.xml.

	Fixed for latest rev of the ais_database.xml.

2003-02-24  James Gallagher  <jgallagher@opendap.org>

	Added line numbers to error messages. Improved message formatting a little.

	Moved from ../

2003-02-21  James Gallagher  <jgallagher@opendap.org>

	Added fetch_url() tests for "file:" URLs.

2003-02-20  James Gallagher  <jgallagher@opendap.org>

	Repaired copyright.

	Added generated flex/bison files.

	Fixed the comment for getch_url.

	Fixed class comment.

	Fixed doxygen comment.

	Fixed copyright date.

	Added.

	Now includes the first of the AIS unit tests.

	Added throw() specification to second constructor.

	Added.

	Added.

2003-02-10  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Edit out obsolete testsuite usage.

	Almost completely new makefile.

2003-02-09  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Regenrated dependancy semi manually using Visual Studio.

	Slight mod's to include new files in win32 build of the core.

	Updates for additions/deletions of files that make up the core.

	Fix to compile under win32.  Problem with min/max diffs under win32 and unix.

	*** empty log message ***

	Pick up max() (not the macro) appropriately under both win32 and unix.

	Put core testsuite building back in after it was patched recently.

	Fix VC++ conflict using std::max with macro max().

	Fixed a conflict using std::max under win32.

	Removed use of Gui.h.  No longer exists.

2003-02-03  Patrick West  <pwest@opendap.org>

	added tests/Makefile.in and rearranged test files so no duplication

2003-02-03  James Gallagher  <jgallagher@opendap.org>

	Darn grammar files... Generated files should not be in CVS!

2003-01-31  Reza Nekovei  <rnekovei@ieee.org>

	Fixed a typo in include file name.

2003-01-27  Patrick West  <pwest@opendap.org>

	Updating tests files, including in dap configure. Removed dap_templates.cc

2003-01-23  James Gallagher  <jgallagher@opendap.org>

	01/22/03 jhrg

2003-01-22  James Gallagher  <jgallagher@opendap.org>

	Added

	Updated the copyrights on various source files. OPeNDAP is adopting the GNU Lesser GPL.

	Updated the copyright notice; this implementation of the DAP is copyrighted by OPeNDAP, Inc.

2003-01-21  James Gallagher  <jgallagher@opendap.org>

	Updated the grid-finc-testsuite.

	01/21/03 jhrg

	Added using std::vector.

	Moved dods.ini to dods.rc.

	Added/Updated from release-3-2 branch.

2003-01-15  Patrick West  <pwest@opendap.org>

	Adding files to tests director. Still need to use cppUnit and autoconf to create configuration and Makefile

2003-01-15  James Gallagher  <jgallagher@opendap.org>

	Added a cast to unsigned in check_byte().

	Removed useless casts associated with the unsigned types.

2003-01-15  Patrick West  <pwest@opendap.org>

	Removing IteratorAdapterT and replacing with non-templated versions.

2003-01-13  James Gallagher  <jgallagher@opendap.org>

	When a filter program got the -V option without a dataset, It was returning usage information. Fixed.

2003-01-10  James Gallagher  <jgallagher@opendap.org>

	I removed a number of things in this file that have been commented out in the release-3-2 code.

	01/10/03 jhrg

	I fixed the ChangeLog Id mess at the bottom of this file.

	01/10/03 jhrg

	Merged with code tagged release-3-2-10 on the release-3-2 branch. In many cases files were added on that branch (so they appear on the trunk for the first time).

	resolved conflicts from the merge with release-3-2-10.

2002-09-13  James Gallagher  <jgallagher@opendap.org>

	Added a CVS log. Added an emacs mode setting to match the rest of our code (always an ongoing process...). Reformatted so that it doesn't wrap in an 80 column editor. Added an attempt at operator==() which causes problems down in the idl command line client. I've wrapped it in guards; if the code proves useless, we should remove it.

2002-09-05  Patrick West  <pwest@opendap.org>

	Unit tests created to test changes made to classes

	Replaced the GNU data structures SLList and DLList with the STL container class vector<>. To maintain use of Pix, changed the Pix.h header file to redefine Pix to be an IteratorAdapter. Usage remains the same and all code outside of the DAP should compile and link with no problems. Added methods to the different classes where Pix is used to include methods to use STL iterators. Replaced the use of Pix within the DAP to use iterators instead. Updated comments for documentation, updated the test suites, and added some unit tests. Updated the Makefile to remove GNU/SLList and GNU/DLList.

2002-06-27  Tom Sgouros  <tsgouros@gmail.com>

	typo

2002-06-18  Tom Sgouros  <tsgouros@gmail.com>

	l Removed SLList from constructor call sequence, to match .cc file.

	Moved comments and edited to accommodate doxygen documentation-generator.

2002-06-03  James Gallagher  <jgallagher@opendap.org>

	Merged with release-3-2-9

	6/3/2002 jhrg

	Removed level stuff. The level() and set_level() methods were not being used anymore, so I removed them.

	6/3/2002 jhrg

	Added `U' suffix to the numerical constants that are unsigned. This prevents messages about values being so large that they can only be represented as unsigned values.

2002-05-23  Tom Sgouros  <tsgouros@gmail.com>

	modified for doxygen

2002-05-22  James Gallagher  <jgallagher@opendap.org>

	Updated using code from C++.

	I added a new rule called start. This rule is used to initialize objects used by the parser (like the stack of ctors). The logic of the parser have not been changed. This just localizes the code to init this object.

2001-10-29  James Gallagher  <jgallagher@opendap.org>

	Removed catch and display of Error objects thrown/returned when accessing data. These Error objects must now be caught by the code that uses libdap++.a.

	Added RCReader.{cc,h,o}.

	Fixed some errors in the comments.

	Fixed bad job of resolving conflict(s) from the last merge.

2001-10-25  Jose garcia  <jgarcia@ucar.edu>

	Added logic to remvove lock on cache file. This logic used to be in Connect, now is in the method load_cache_status.

	New Method to return dods_root.

	Modified the www_lib_init method so now it uses the class RCReader. This simplifies a lot the implementation of this class.

2001-10-13  James Gallagher  <jgallagher@opendap.org>

	Merged with release-3-2-8.

2001-10-03  Jose garcia  <jgarcia@ucar.edu>

	Modified methods name to comply with DODS naming convention. Use of 4 spaces for indentation.

2001-09-28  James Gallagher  <jgallagher@opendap.org>

	Generated file built after merging with 3.2.7.

	Merged with 3.2.7.

	Merged with 3.2.7.

	*** empty log message ***

2001-09-21  Jose garcia  <jgarcia@ucar.edu>

	Implementation of the class to handle cache resources used by class Connect.

	Class to handle cache resources used by class Connect

2001-08-27  James Gallagher  <jgallagher@opendap.org>

	Updated files generated from bison and flex.

	New depend info

	Fixed up cruft from merge.

	Merged with release-3-2-6

2001-08-24  James Gallagher  <jgallagher@opendap.org>

	Resolved conflicts from the merge of release 3.2.6

2001-06-15  James Gallagher  <jgallagher@opendap.org>

	Merged with release-3-2-4.

	Merged with release-3-2-4.

2001-05-03  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Fixed a bug where one of Connect's FILE *s was closed without using Connect::close_ouput(). This can crash a client when Connect's dtor tries to close that FILE * later on.

	Added a rule that allows varaible names to be the names of datatypes.

	Fixed a bug where an Error object was created with an error code of undefined_error (which make OK() throw and exception).

2001-02-12  James Gallagher  <jgallagher@opendap.org>

	Fixed an error with the using statements. `using std::vector<string>;' makes g++ barf, but it like using std::string; and using std::vector;.

2001-02-09  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Merged Jose's and Brent's authentication code, modifying it in the process. There are some significant changes in the functions/methods: dods_username_password, process_www_errors, extract_auth_info, read_url, fetch_url:
	dods_username_password() can now be used by both a popup and non-popup
	version of the class. The function knows how to provide humans with several
	chances to get it right but only allows statically supplied credentials one
	shot (thus avoiding an infinite loop).
	process_www_errors() is new: it reads libwww errors and throws Error if it
	finds a fatal error in the list. If it finds an authentication error, it sets
	the Error object's error_code to no_authorization. It does nothing if the
	errors are not fatal.
	extract_auth_info() is Brent's code moved to its own home.
	read_url() now calls process_www_errors. This is necessary because
	process_www_errors throws exceptions and those don't (seem to) work from
	within libwww callbacks. Understandable since libwww is C code...
	fetch_url() now calls extract_auth_info. I'd like to move this Connect's
	ctor, but this will have to do for now.

	Other changes:
	SetSignal() removed; libwww handles this now.
	I removed redundant initialization of libwww Before and After filters.
	I added calls to HTLibInit and HTLibTerminate in www_lib_init() and
	~Connect(). The LibInit call sets the client name and version number. That
	information will appear in httpd access logs.
	I've added comments about how Connect works in places where it seemed pretty
	obscure.

	Added extract_auth_info() method to parse username/password information from a URL and record it in this object. Moved set_credentials() method from the header, where it was inline, to the .cc file. Save inlines for performance optimizations. Removed set_username_password() function since dods_username_password() was modified to do its job. Added process_www_errors() to streamline error reporting for both the popup and non-popup version of this class. This friend function is called directly from Connect's methods, not via a libwww callback. This was necessary because it throws Error objects and throws don't (seem to, anyway) work from within callbacks.

	Added build for tgeturl, a copy of geturl linked with the non-popup version of libdap++. This provides a way to test the library when it's built without the popup.

	*** empty log message ***

	Removed some of the #ifdef WIN32 guards since the code works with g++ too. Fixed an error in the usage string.

2001-02-05  Jose garcia  <jgarcia@ucar.edu>

	Added support so a Connect object can be created with credentials to be able to resolve challenges issued by web servers (Basic Authentication). Added exception to notify "No Authorization".

2001-01-26  James Gallagher  <jgallagher@opendap.org>

	Merged with release-3-2-3.

	*** empty log message ***

2000-11-24  Jose garcia  <jgarcia@ucar.edu>

	In Connect::read_url added exception in case there is a fatal error loading an URL It is specially requiere for supporting Connect objects that support HTTP Authorization challenge.

2000-11-09  James Gallagher  <jgallagher@opendap.org>

	Changes for datatype translation.

2000-10-30  James Gallagher  <jgallagher@opendap.org>

	Added support for proxy servers (from cjm).

2000-10-25  James Gallagher  <jgallagher@opendap.org>

	Created

2000-10-18  James Gallagher  <jgallagher@opendap.org>

	Fixed an error in get_user_supplied_docs() which caused the data file to be read instead of a <data file>.html file.

2000-10-05  James Gallagher  <jgallagher@opendap.org>

	Changed the way serialize() calls read(). The status from read() is returned by the Structure and Sequence serialize() methods; ignored by all others. Any exceptions thrown by read() are caught and discarded. serialize() returns false if read() throws an exception. This should be fixed once all the servers build using the new read() definition.

2000-10-03  James Gallagher  <jgallagher@opendap.org>

	Fixes to the tests to accomodate debugging fixes in DDS.cc

	Put debgging output in parse() method inside DBG().

	Updated copyright

	Added dap_version() function

2000-10-03  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	string.insert(), for names that begin with 0-9 was causing an exception in that case.  Observed in the hdf server on modis data.  replaced string.insert with string = string("_") + string to fix - in id2dods().

2000-10-02  James Gallagher  <jgallagher@opendap.org>

	The Error class now has const accessors

	Changed type of num in the serialize method to int

	Removed last vestige of the munge-bison.awk script

2000-09-22  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Removed munge-bison calls

2000-09-21  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Fixes to the tests to recognize some of the new error messages. Also, the test drivers were modified to catch the exceptions now thrown by some of the parsers.

	Rearranged source files so that the CVS logs appear at the end rather than the start. Also made the ifdef guard symbols use the same naming scheme and wrapped headers included in other headers in those guard symbols (to cut down on extraneous file processing - See Lakos).

	Merged changes from Jose Garcia that add exceptions to the software. Many methods that returned error codes now throw exectptions. There are two classes which are thrown by the software, Error and InternalErr. InternalErr is used to report errors within the library or errors using the library. Error is used to reprot all other errors. Since InternalErr is a subclass of Error, programs need only to catch Error.

2000-09-20  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

2000-09-18  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Fixed earlier error where the entire double word for a double was being reversed front-to-rear.  They two words just needed swapped - one for the other.

2000-09-15  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Added changes to account for byte ordering of double floats under win32. XDR (prior to this) assumed that a double was handled as if it was two longs - the endianess of which are platform dependant.  Under win32 operating systems the whole double word associated with a float is byte reversed (7,6,5,4,3,2,1,0 vs. 0,1,2,3,4,5,6,7).

2000-09-14  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Added usage of ends and ostrstream elements in the std namespace for win32.

2000-09-11  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Rebuilt grammars

	Changed the name of Sequence::get_row_numbers() ...

	Fixed up the comments/docs.

	Added methods to make it simpler to access Sequences by row number. The new methods are: get_row(), get_row_number(), get_starting_row_number(), get_ending_row_number(), get_row_stride(), set_row_number_constraint(). The starting and ending row numbers refer to constraints placed on the sequence, to get the number of rows in the current sequence, use the length() method.

	Added Sequence selection using row numbers. This `selection' operation uses the brackets a la arrays and grids.

2000-09-08  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Removed a dangling ifdef that was for my own debugging purposes.

2000-09-07  James Gallagher  <jgallagher@opendap.org>

	Fixed another goof from the last merge; I dropped the new feature that identifiers can have dots i their names. This feature could really screw things up, but it is needed for translation. It should be the case that the CE evaluator never sees such a variable name (since the translation software should get to it first and rearrange things).

	Added SCAN_ prefix to returned constants. The prefix was lost during the last merge.

	Added SCAN_ prefix back onto returned constants. This was also lost during the last merge. Moving comments...

	Fixed a bungled merge. Watch out for long diffs in merged code when moving log comments from the start to the end of files.

2000-08-31  James Gallagher  <jgallagher@opendap.org>

	Merged with 3.1.10

2000-08-30  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Fixed lost mod for port to win32 - newlines in string constanct not ok with VC++.  (this was in usage()).

2000-08-29  James Gallagher  <jgallagher@opendap.org>

	Merged with 3.1.9

2000-08-22  James Gallagher  <jgallagher@opendap.org>

	Fixed the assert() in buf2val(). It tested _buf and when that contained 0 it would fail. This was probably copied from other methods where _buf is a pointer.

2000-08-16  James Gallagher  <jgallagher@opendap.org>

	Added tests for dots in variable names and fancier error messages

	Added dot (.) to the set of characters allowed in a variable name

2000-08-15  James Gallagher  <jgallagher@opendap.org>

	Added an option (-s) to test the Sequence::getRowNumber method.

	Added the getRowNumber method.

	Added d_row_number field and getRowNumber method.

2000-08-14  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Removed the usage() functions. These should be supplied by cgis that need them. See DODSFilter.

2000-08-08  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Trivial removal of a hack fragment left behind from a earlier fix.

2000-08-07  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Added new header that needs to be copies at install time.

	Reversed hack related to 7/19/00 and 7/21/00 changes to get around a bug in the core (which has been fixed).

	Removed default argument definition.  Under MS VC++ one can't define a default argument in both a method declaration and its's definition - plus that's redundant anyway.  Just setup default args in the declaration (in the .h) only or VC++ will choke.

	Added ifdef to account for potential conflict with certain winsock.h u_* typedef's.

	Added permanent (manually generated) code which is typically generated at configuration time under Unix - but which have to be more permanent in the case of win32.  No such compile time configuration utils under win32.

	Removed the file from the repository.

2000-08-02  James Gallagher  <jgallagher@opendap.org>

	Merged 3.1.8

	*** empty log message ***

2000-07-26  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Modified intermediate (dod*) file removal under win32 to take into account a 1-to-n correspondence between connect objects and intermediate files. Implemented solution through vector of strings containing the intermediate filenames that are removed when the connect obj's destructor is invoked. Might consider using the same code for unix in the future.  Previous win32 solution incorrectly assumed the correspondence was 1-to-1.

2000-07-24  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Just added a notation that indicates what was tried to get around libwww bugs in regards to spaces in pathnames.  Client-side caching disabled until further notice - next version of libwww may help.

2000-07-21  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Put a temporary fix in that is in lieu of an upcoming small change to the core.  Is in an ifdef with a note to remove it - but the temporary hack will work with or without the change to the core. See TMPHACK ifdef's to remove.

	Remove client-side caching entired under win32 in lieu of a permanent fix (soon).  Fixed what I broke for client-side caching under unix.

2000-07-19  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Call and return from main in a manner Visual C++ likes and exit the program with exit(0) so that DejaGnu/Cygwin based testsuite can succeed for win32.

	Delete the right type of dds (a DataDDS) so that when it is deleted, the destructors are called in the right sequence. This might be the case under win32 only (??), but I would think this change is applicable to unix also.

2000-07-18  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	I checked these in earlier, but looking closer.  It appears that perhaps they weren't in the repository for a reason (??).

	Lex/yacc generated code based upon changes for win32 port.

	Lex yacc generated code based upon changes for win32 port.

	Fixed failure to initialize a structure element appropriately when retrieving the Win32 OS version information for the WIN95_CACHE_HACK.

	Temporary short-term fix to get Dods to run on win95-based systems by turning off client-side caching on that OS.  Feature doesn't run under win9x for currently unknown reasons that _appear_ to be external to our code. Permanent fix should be forth-comming shortly.  Patch is isolated between a single WIN95_CACHE_HACK ifdef.

2000-07-17  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Changes made in an attempt to debug client-side caching under win95-based systems.  Is currently unsuccessful, but these changes made the code somewhat more generic.

	Change to set stdout to binary mode under win32 so that the output of geturl yields the exact same thing as it does Unix - i.e., no cr-nl translation of nl's within the output.

	Inserted simple trivial cast that makes VC++ happier.

	Changes to use forward slashes in args to lex and yacc (versus backslashes). Using backslashes, things still compile - but generate 100's of warnings by the backslashes being interpreted as escape characters and this causes problems debugging also.  Also, a change to removed the program database (*.pdb) used during debugging upon "make clean".

2000-07-16  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Dummy down the DOS built-in commands used within nmake so that they don't use the extended features such as those seen on w2k. This adds support for building under win95-based systems.  Stick with simple rmdir, del, mkdir and copy only.  Use no flags to those commands.

2000-07-14  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	From previous Fix, one test .obj is needed in the core after all.  TestUrl.obj. That was re-included into the core library.

	Test*.obj were mistakenly being rolled up into the core library.  No need for them to be there so the Makefile was modified accordingly.

2000-07-13  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Changed the approach to delete the intermediate file in the case of win32 (unlink() not the same under win32, needed another approach).

	Mod to keep the intermediate file name in the Connect object in the case of win32 (unlink() works differently on win32,  needed another approach).

	Added debugging flags (commented out) for convenience.

	Minor mod to compile flags.

2000-07-09  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Removed (trivial) explicit mention of namespace for iostream in flush_stream().

	Modify dependancies to build the core library more strategically and add comments that indicate the status of the test suite under win32 (must run under cygwin after building for native win32)

	Changes to increase portability, minimize ifdef's for win32 and account for differences in the iostreams implementations.

	Mods's to increase portability, minimuze ifdef's in win32 and account for differences between the Standard C++ Library - most notably, the iostream's.

	Mods to increase portability, minimize ifdef's for win32

2000-07-07  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Changes to loopback_pipe method under win32.  A difference between the iostream implementation under win32 (versus unix) means that the loopback pipe can't be a pipe at all.  See win32 code for parse_constraint() for specifics.  As of 7/2000, this code is untested but only gets used on the "server side of the core" or in the core test suite.

	Changes to DDS:send() method to use _cwait instead of waitpid() under Win32.  As of the time of check back into cvs, the method is untested under win32 but would only be use in the "server side of the core" or during running of the test suite.

	Changes for "server side of core" (in compressor()) for win32.  As of the time of check-in to cvs the changes are untested, but would only be used on the server side or in the case of the core test suite.

	Comment work.

	Added (commented out) lines to compile preserving debugging information.

2000-07-02  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Bring deflate.exe into the building of the core.

2000-06-16  James Gallagher  <jgallagher@opendap.org>

	Fixes leftover from the last merge plus needed for the merge with version 3.1.7.

	Merged with 3.1.7

2000-06-07  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Merged with verson 3.1.6

	Merged the pc port branch

2000-06-07  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Specific header file for the win32 version of the dap.

2000-06-06  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

2000-05-25  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	New dependancies for the Makefile to build dods core for win32.

	New Makefile to build dods core for win32.

2000-05-24  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	Minor mod's to quiet the makefile down considerably.

2000-05-19  Robert Morris  <Robert.O.Morris@jpl.nasa.gov>

	added code for xdr library for win32 dods.

	Dependancy file for libxdr makefile added.

	New Makefile to build libxdr for win32 dods.

2000-04-17  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Fixed problems with the _gui member and local connections. The _gui object was not initialized (correct) for local connections but *was* destroyed for them (because the code never checked for local connections in the dtor).

	Fixed an error where local connections affected the status of the __num_remote_conns field. This caused remote connections, made after one or more local connections were closed, to fail because libwww was not initialized correctly.

2000-04-06  James Gallagher  <jgallagher@opendap.org>

	Fixed expresion tests.

	*** empty log message ***

	Added exception handling

	Merged Brent's changes for the progress gui - he added a cancel button. Also repaired the last of the #ifdef Gui bugs so that we can build Gui and non-gui versions of the library that use one set of header files.

	Fixed an error in print_val() where the method worked OK for the server-side but not the client-side because it demoted any Grid whose send_p flag was not set to a Structure. Since the client-side does not have CEs, there are no projections and send_p will never be set.

2000-03-31  James Gallagher  <jgallagher@opendap.org>

	Merged with release-3-1-5

	*** empty log message ***

	Merged with version 3.1.5.

2000-03-28  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	*** empty log message ***

	*** empty log message ***

	Added libdap++-gui.a to the install and binary-tar targets.

	Removed code that sent bad dates in the response header. Also removed code that sent a Cache-Control: no-cache header.

	Now build two version of libdap++, one with and on without the progress gui.

	Modified these files so that they can be built either with and without GUI defined. The type signatures are now the same either way. Thus we can build libdap++-gui and libdap++ (without GUI support). When using the later there's no need to link with tcl, tk or X11. This makes the executables smaller. It also keeps the servers from potentially needing sharable libraries (since X11 is often sharable) which can be hard to find unless they are in the standard places. I made the same changes in Connect and Gui.

	Added a DEFAULT_EXPIRES parameter to the .dodsrc file. The default expiration time is now set by connect, using the value read from .dodsrc, rather than use the value compiled into libwww. To do this I added a new function to HTCache.c,h in libwww.

2000-03-16  James Gallagher  <jgallagher@opendap.org>

	I fixed the bug in libwww which made caching of compressed documents fail. I removed the hacks in this file that prevented data documents from being cached. I also have removed the code that wrote NEVER_DEFLATE to the rc file. The NEVER_DEFLATE option still works; I'm just not including it in the rc file by default.

2000-01-27  James Gallagher  <jgallagher@opendap.org>

	Resolved conflicts from merge with release-3-1-4

2000-01-05  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added a comment about the odd `protocol' for sending array/list lengths twice for arrays/lists of simple types. Removed some cruft.

	Added libclient++.a. Added/Fixed targets for the GSE grammar.

1999-12-30  James Gallagher  <jgallagher@opendap.org>

	Fixed up the progress indicator

1999-12-14  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added static members to help control the cache.

	More fixes for caching. Caching now works correctly for programs that use multiple Connect objects. The Cache index is now updated more frequently.

1999-12-01  James Gallagher  <jgallagher@opendap.org>

	Fixed print_val for Grids that decay to Structures.

	Added members to support caching. Added accessors for cache control. libwww 5.2.9 does not supoort these, however.

	Added rfc822_date(...). Added Date headers to all the mime header output functions. Added Cache-Control: no-cache to the binary header with deflate is true. Removed old code.

	Substantial changes for the caching software. Added a call to `terminate' the cache once we're done with the libwww code. This writes the .index file required by the cache. Additionally, changed the cache mode from validate to OK. The later forces the cache to not validate every request. Instead expiration is used and the libwww code implements a fall back in those cases where servers don't supply a Date header. Finally, compressed responses break the cache (I think this is libwww's bug) and I've disabled caching compressed data responses. So that users can cache data responses, I've added a new flag in the dodsrc file called NEVER_DEFLATE which allows users to override the clients wishes regarding compression (i.e., users can turn it off). Data responses can thus be cached.

1999-11-04  James Gallagher  <jgallagher@opendap.org>

	Result of merge with 3-1-3

	result of merge with 3-1-3

1999-10-22    <cjm@opendap.org>

	Added support for caching.  Most of the code is in www_lib_init(), there is also a modification to read_url() to make use of the cache if it is enabled.

1999-09-03  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Merged changes from release-3-1-1

1999-08-23  James Gallagher  <jgallagher@opendap.org>

	Merged changes from release 3.1.0

1999-08-18  James Gallagher  <jgallagher@opendap.org>

	Merged changes from release-3-1-0

1999-08-09  James Gallagher  <jgallagher@opendap.org>

	Merged changes from Brent for the Gui code (progress indicator)

1999-07-23  James Gallagher  <jgallagher@opendap.org>

	Added

1999-07-22  Tom Sgouros  <tsgouros@gmail.com>

	fixed doc typo

1999-07-22  James Gallagher  <jgallagher@opendap.org>

	Merged changes from the release-3-0-2 branch

	*** empty log message ***

	Fixed a bug found by Peter Fox. Array index names were not handled properly after the String to string conversion.

1999-05-28  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

1999-05-27  James Gallagher  <jgallagher@opendap.org>

	Merge from alpha-3-0-0

1999-05-26  James Gallagher  <jgallagher@opendap.org>

	Added a bit where, before sending caught Error objects to the client, we write the message to t eh httpd's error_log.

	The Gui option is now disabled; gui is always false. One call to gui()->... has been removed with #if 0 ... #endif.

	Fixed a bad call to Error's ctor. For some reason calling the four arg ctor with the last arg == to 0 caused string to gag. At least that appears to have been the problem...

	Added a message for the `unknown_error' constant. Added a test in correct_error for a NULL Gui object. If the Gui object is null, display the message text on stderr and ignore the Gui object.

	Added the calls to Error::correct_error(...). These were removed because they use the Gui object. However, they access it through the Connect::Gui() member function which will return NULL until we fix the Gui. Calling the correct_error with a NULL Gui object works in that the error message is displayed on stderr and the Gui stuff is ignored.

	Replaced a serialization of an Error object with a throw to the outer layer. This should help smooth getting errors to the outer layer of the servers so they can be sent back to the clients reliably.

1999-05-25  Dan Holloway  <dholloway@opendap.org>

	Added an optional second argument to read_ancillary_dds to support JGOFS usage.

	Added an optional second argument to read_ancillary_dds to support JGOFS usage.

	Added an optional second argument to read_ancillary_das to support JGOFS usage.

	Added an optional argument to read_ancillary_das to support JGOFS data object usage, where the location of the ancillary DAS file isn't readily available through the 'dataset' argument of the command line.

1999-05-25  Nathan Potter  <ndp@opendap.org>

	Added a trap to compare_stdout to insure that only the two supported methods ("match" and "compare") of the Tcl built in string function are passed in as string tests. 5/26/99 ndp

1999-05-25  James Gallagher  <jgallagher@opendap.org>

	Added Nathan's patch in place of mine since it prints some nice info when you're debugging (?) tests.

1999-05-24  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Moved GSEClause.h and removed second Error.h (what was that doing?) includes to fix warning about redefinition of TRUE and FALSE (from within rpc/type.h).

1999-05-21  Dan Holloway  <dholloway@opendap.org>

	Changed default 'gui' flag to 'false' in request_data, and read_data methods.

	Disabled the Gui interface in the Connect objects.  Primarily this was done in www_libc_init, constructor, destructor, and request_ calls using 'ifdef GUI' directives.  To regain use of this code use the '-DGUI' compiler flag.

1999-05-21  James Gallagher  <jgallagher@opendap.org>

	Removed debugging instrumentation left in by accident.

	Removed a bogus error message about failure to run deflate.

	Made the parser error messages a bit easier to decode by adding `Expression' to them. Still, these are pretty lame messages...

	Added instrumentation to the ctor. This simplifies debugging the interaction between the filter programs and the perl script.

1999-05-20  James Gallagher  <jgallagher@opendap.org>

	Using ifstream in parse_mime(...) confuses the downstream parser since the FILE * is not advanced. I switched back to the fgets(...) code and the some problems with the asciival client went away.

	*** empty log message ***

	Added -fPIC to libdap build. Sme files had to have special rules written

	Added

1999-05-19  James Gallagher  <jgallagher@opendap.org>

	Changed the support address from @dods to @unidata

1999-05-18  James Gallagher  <jgallagher@opendap.org>

	Perl is now started using /bin/sh.

1999-05-09  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

1999-05-06  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Update for groups changes just prior to 3.0.0a alpha release

1999-05-05  Ethan Davis  <edavis@ucar.edu>

	Added VERSION file stuff to update-version target.

1999-05-04  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added a version string parameter to all the set_mime_*() functions. If not given it defaults to the core's version string.

	The member function parse_constraint() now throws an Error object so that enclosing code will handle serializing the Error object. The member function send() takes the CGI version as an extra argument. All calls to the set_mime_*() functions include this version number.

	Added cgi_ver parameter to send() member function.

	Added version number optional argument. This provides a way for code that uses these functions to pass version information in so that it can be included in the response doc's MIME header.

	Added the get_cgi_version() member function. Added documentation about get_cgi_version() and the -V option (new).

	Modified the DataDDS class so that a version string may begin with any character sequence, not just `dods'. This means that each server can identify itself in the version string.

	Added the -V option. -v now is used to pass the version information from the CGI to the C++ software; -V triggers output of the version message. This allows the DODSFilter class to pass information about the server's version to the core software. All set_mime_*() functions are now passes the CGI version information so that all MIME headers contain information about the server's version. Added the get_cgi_version() member function so that clients of DODSFilter can find out the version number.

	*** empty log message ***

	Fixed copyright statements. Removed more of the GNU classes.

	Added

1999-04-29  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	*** empty log message ***

	Removed Function include

	Removed Map, Stack, Plex and Vec stuff.

1999-04-28  James Gallagher  <jgallagher@opendap.org>

	Merged ferret changes

	Merge of no-gnu branch

	*** empty log message ***

1999-04-22  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Comments

	Uses dynamic_cast

1999-04-09  James Gallagher  <jgallagher@opendap.org>

	Added support for the new datatypes. Removed old code. Changed header generated to include XDODS-Server.

1999-04-01  James Gallagher  <jgallagher@opendap.org>

	Switched to DODS type names and fixed float-vs-double bungle

1999-03-30  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

1999-03-29  James Gallagher  <jgallagher@opendap.org>

	Fixed (I hope) a bug in check_float{32,64} where 0.0 did not check out as a valid floating point number. Note that the DODS_{FLT,DBL}_{MIN,MAX} constants are the absolute values of the bigest and smallest numbers representable, unlike the similar constants for integer types.

1999-03-24  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added or updated for the new simple types (Int16, UInt16 and Float32)

	Added

	Added support for the Int16, UInt16 and Float32 types

	*** empty log message ***

	Added support for the new Int16, UInt16 and Float32 types.

	Added a verbose mode. Commented out the old transmit(...) function. Use constrained_trans(...) instead.

	Fixed some of the comments.

	Added minimal support for the new Int16, UInt16 and Float32 types.

	Added support for the new Int16, UInt16 and Float32 types. Removed unused error printing functions.

	Added support for the new Int16, UInt16 and Float32 types. Removed some unused versions of the error printing functions.

	Added includes and New*() definitions for the Int16, UInt16 and Float32 types. Removed declarations for the old *_ops functions.

	Removed the *_ops code. Those operations are now done by the template classes and function(s) in Operators.h. Removed old code.

1999-03-19  James Gallagher  <jgallagher@opendap.org>

	Added constants for floating point values. Changed some formatting.

	Added a call to ios::precision in read(). This sets the precision to 15. The default value, 6, was rounding some values.

	Added to the documentation for print_val(). Now contains a blurb about setprecision().

1999-03-18  James Gallagher  <jgallagher@opendap.org>

	suppres adding patches directory

1999-03-17  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added to find_ancillary_file() so that <pathname>.ext will also be checked. This ensures that ancillary DAS files such as 1998-6-avhrr.dat.das will be used properly.

1999-03-08  James Gallagher  <jgallagher@opendap.org>

	Fixed the error messages in compressor().

1999-02-24  James Gallagher  <jgallagher@opendap.org>

	release 2.21

	*** empty log message ***

1999-02-22  James Gallagher  <jgallagher@opendap.org>

	Removed more of the code in process_data. Because of fixes in the scanner, this code no longer needs to rewind after parsing the DDS of a data document. The scanner no longer reads into the binary doc. Note that real MP/MIME code would solve this by giving us two streams to work with. Some day...

	Added a YYINPUT define that looks for `Data:\n'. When seen it returns YY_NULL which tells the scanner that EOF has been found. This hack keeps flex from reading into the data while buffering from the input source. This means that the calling code does not have to rewind the input to find the start of the data. Of course, multi-part MIME docs would also solve this. Replace this hack with MP/MIME code!

	Added the get_accept_types() accessor. Changed the ctor so that the -t option is recognized.

	Added the get_accept_types() accessor. Also added to the ctor so that the -t option will be parsed properly and used to set the value of accept_types.

	Added -T option: Use this to send a list of accepted types to the server using the new XDODS-Accept-Types request header. The list must not contain spaces *even* if it is quoted.

1999-02-18  James Gallagher  <jgallagher@opendap.org>

	Added the field _accept_types and two accessor functions. See Connect.cc and the documentation comments for more information.

	Added support for the DODS experimental MIME header XDODS-Accept-Types. This will be used to send a lists of `accepted types' from the client to a server. The list tells a server which datatypes the requesting client can understand. This information may be used by both the DDS and DataDDS objects to trigger translations from one type to another.

1999-01-21  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

1999-01-21  Tom Sgouros  <tsgouros@gmail.com>

	Fixed comment formatting problems for doc++

1999-01-20  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added ce_function.h and call to add the projection function `grid_selection_func' to the set of CE functions all servers know about.

	Added include of stdio.h for FILE *.

	Added targets for the grid selection expression scanner and parser, as well as its associated test code. Also added code for the GSEClause class.

	Fixed dataset; this variable should be the filename of the dataset, not the value returned by get_data_name() which is the DODS name of the dataset. This value is not set by the dds.filename() method.

	Added extract_string_argument function. Added grid_selection projection function.

	Fixed the stupid comments...

	The dds scanner now recognizes the token `Data:' as an EOF marker. This means that the data document can be scanned without splitting the DDS and binary data parts into two files.

	Added code to test the expr scanner using strings and not files.

	Made the store_op(), ... functions static. Added glue routines for scanning strings.

	Added a new struct for the GSE (Grid Selection Expression) parser. This parser uses exceptions to signal all errors except parse errors.

	Moved prototypes to ce_functions.h

	Moved various CE functions to the file ce_functions.cc/.h.

	Created

	Moved to old

1999-01-15  James Gallagher  <jgallagher@opendap.org>

	MOved code from util.h.

	Moved code from util.cc

	*** empty log message ***

	Removed use of the move_dds() member function. The DDS parser now recognizes the `Data:' separator string as marking the end of the DDS part of a data document. This means that Connect no longer needs to copy the DDS part of the data document to a separate (temporary) text file before parsing it.

1999-01-13  James Gallagher  <jgallagher@opendap.org>

	Removed call to text_to_temp() (which copied a string to a temp file so that the file could be parsed) with code that feeds the string directly into the parser/scanner.

1999-01-08  James Gallagher  <jgallagher@opendap.org>

	Added grammar sources to test coverage targets.

1998-12-28  James Gallagher  <jgallagher@opendap.org>

	Fixed comments for get_attr().

1998-12-21  James Gallagher  <jgallagher@opendap.org>

	Corrected some of the doc comments; fixed spelling and added error return values.

1998-12-16  James Gallagher  <jgallagher@opendap.org>

	Added support for XDODS-Server MIME header. This fixes a problem where our use of Server clashed with Java

1998-12-15  James Gallagher  <jgallagher@opendap.org>

	Added fix for strides <= 0 (which results in division by zero).

	Added to the documentation on add_constraint().

1998-11-24  James Gallagher  <jgallagher@opendap.org>

	Fixed copyright.

	Added instrumentation. Used while I was removing DASVHMap.

	Replaced the DASVHMap object with an SLList of toplevel_entry structs. The DASVHMap software is not being maintained by the FSF and had bugs. There are no changes to the DAS class interface.

	Ripped out the DASVHMap class and replaced it with an SLList of structs. See DAS.h for the (private) struct definition. There are no changes to the class interface. I did add a default ctor (DAS()), but that conflicted with another (old) ctor that had defaults for its two parameters, so I bagged that for now.

	*** empty log message ***

1998-11-23  Tom Sgouros  <tsgouros@gmail.com>

	late modifications to documentation

1998-11-11  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	*** empty log message ***

1998-11-09  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Changed from std.h to gnu-std.h

	Changed text of regexp error message.

	Added to the dtors to make sure the various Clause objects are deleted.

	Patched memory leaks found with Purify.

	Changed code; now uses a list of Clause pointers instead of using a list of Clause objects. This makes it simpler for the projection functions to add `invisible' selection clauses.

	This class now holds a list of Clause pointers, not objects.

	Added `ends' to strings made with ostrstream (fixes a bug found with purify). Added catch for throws from within the CE evaluation functions.

	version_regex now fast compiled.

	*** empty log message ***

	Added purify targets. Added gnu-std.h to GNU HEADERS Misc fixes (fixed tar target).

	Fixed up memory leaks in the calls to unique_names().

	Fixed errant delete [] (should have been plain delete).

	Fixed up the doc++ comments.

	Fixed up the online help.

	Changed no_such_id() to no_such_ident() (the former is used in bastring.h).

	Delete the dds object (created with new) after calling process_data().

	Fixed a number of memory leaks (found using purify).

	Fixed a memory leak in the parser_arg dtor. If the Error object is created the dtor must delete it.

1998-11-05  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Made error message for errant CEs involving arrays better. DDS::mark() now used for array variables --- this should fix a potential problem with structures of arrays.

1998-10-28  James Gallagher  <jgallagher@opendap.org>

	Updated from automake-1.3

1998-10-22  James Gallagher  <jgallagher@opendap.org>

	Fixed an array write error where exprlval.id was over-written by writing to element ID_MAX. The end of the array is ID_MAX-1.

1998-10-21  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Removed name_in_dds using #if 0 ... #endif

	Single array element may now be refd as [<int>]. So element seven of the array `a' can be referenced as a[7]. The old syntax, a[7:7], will still work. Projection functions are now supported. Functions listed in the projection part of a CE are evaluated (executed after parsing) as they are found (before the parse of the rest of the projections or the start of the parse of the selections. These functions take the same three arguments as the boll and BaseType * functions (int argc, BaseType *argv[], DDS &dds) but they return void. They can do whatever they like, but the use I foresee is adding new (synthesized - see BaseType.cc/h) variables to the DDS.

	Now includes RValue.h. Needed because expr.tab.h needs it.

	Added typedef for projection functions (proj_func). Removed the structs rvalue and func_rvalue - these have been merged into a single class RValue which is defined in Rvalue.cc/h.

	Added some instrumentation (using DBG). This might be useful later on...

	Added RValue.cc/o/h.

	Added a proj_func member (for support of Projection Functions). Fixed up the doc++ comments.

	The find_function() member function now checks for the name AND the function type before returning a value. This means that a bool and BaseType * function may have the same name but, because of their different types, still work properly in context.

	Fixed doc++ comments. Changed member names so they start with an underscore - makes the member functions easier to read.

	Made modifications that allow null argument lists. Replaced repeated code (to build arg lists) with a function call (it's a function call because it needs to be called from inside the expr parser, too).

	Added the two member functions: synthesized_p() and set_synthesized_p(). These are used to test and record (resp) whether a variable has been synthesized by the server or is part of the data set. This feature was added to help support the creation of variables by the new projection functions. Variables that are created by projection function calls are called `synthesized variables'. Some documentation strings were fixed.

	Added the two member functions: synthesized_p() and set_synthesized_p(). These are used to test and record (resp) whether a variable has been synthesized by the server or is part of the data set. This feature was added to help support the creation of variables by the new projection functions. Variables that are created by projection function calls are called `synthesized variables'.

	Added. Based on code that used to be in expr.h/cc

1998-10-19  James Gallagher  <jgallagher@opendap.org>

	Fixed a bug in ops(): buf2val was used incorrectly and string_ops never got the right strings. since the values were always "" for both arguments, any regex match returned true! Also, removed one call to buf2val in ops() since its OK to pass the member _buf to string_ops().

1998-10-14  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

1998-10-06  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

1998-09-17  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Changes for the new variable lookup scheme. Fields of ctor types no longer need to be fully qualified. my.thing.f1 can now be named `f1' in a CE. Note that if there are two `f1's in a dataset, the first will be silently used; There's no warning about the situation. The new code in the var member function passes a stack of BaseType pointers so that the projection information (send_p field) can be set properly.

	Fix documentation. Added BaseType * stack definition using the STL vector class.

	Changes for the new variable lookup scheme. Fields of ctor types no longer need to be fully qualified. my.thing.f1 can now be named `f1' in a CE. Note that if there are two `f1's in a dataset, the first will be silently used; There's no warning about the situation. The new code in the var member function passes a stack of BaseType pointers so that the projection information (send_p field) can be set properly. Added exact_match and leaf_match.

	Added leaf_match and exact_match. Added two new versions of the var member function. Fixed documentation.

	Added leaf_match and exact_match. Added two new versions of the var member function.

	Added doc++ target.

	Fixed errant comments.

	Changes for the new variable lookup scheme. Fields of ctor types no longer need to be fully qualified. my.thing.f1 can now be named `f1' in a CE. Note that if there are two `f1's in a dataset, the first will be silently used; There's no warning about the situation. The new code in the var member function passes a stack of BaseType pointers so that the projection information (send_p field) can be set properly. Changed the implementation of print_all_vals to use type() instead of type_name(). Added leaf_match and exact_match.

	Fixes to the documentation. Added leaf_match and exact_match mfuncs (support for the new var member function).

	Changes for the new variable lookup scheme. Fields of ctor types no longer need to be fully qualified. my.thing.f1 can now be named `f1' in a CE. Note that if there are two `f1's in a dataset, the first will be silently used; There's no warning about the situation. The new code in the var member function passes a stack of BaseType pointers so that the projection information (send_p field) can be set properly.

	Fixed errant documentation.

	Added missing doc++ right brace.

	Added include files to get rid of compiler messages about missing prototypes.

	Made the error messages more verbose (that is, the text in the Error objects sent back to the client). Fixed a bug where non-existent fields could be accessed - with predictably bad results.

1998-09-10  Jake Hamby  <jehamby@anobject.com>

	Forgot to update hexstring() to generate correct high-ASCII escapes.

	Add parser-util.cc to dependencies list

	Update escaping routines to not mangle high-ASCII characters with toascii() and to generate a correct escape sequence in octstring() for such characters through judicious casting (cast to a unsigned char, then an unsigned int).

	Change Str::print_val() to quote Strings when printing them (so geturl can generate less ambiguous output).

	Correct DODS_INT_MIN and DODS_LONG_MIN values

	Update to support EGCS and link with -lrx

1998-09-09  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

1998-09-08  James Gallagher  <jgallagher@opendap.org>

	Removed PERF macro.

	Removed PERF macro calls.

	Fixed up this file for use with C as well as C++. Removed the old PERF macro since it was based on a non-POSIX time function (systime()) and was never used!

1998-09-03  James Gallagher  <jgallagher@opendap.org>

	GNU is now cleaned. jdap and url-builder are not included in source distributions.

	*** empty log message ***

1998-09-02  James Gallagher  <jgallagher@opendap.org>

	Removed func_date to avoid conflicts with a copy in ff-dods-2.15.

	*** empty log message ***

1998-09-01  James Gallagher  <jgallagher@opendap.org>

	Make sure to escape []s with \\\ (three backslashes).

1998-08-31  James Gallagher  <jgallagher@opendap.org>

	Changed check_semantics so that the array and map vectors must of composed of simple-type elements.

	Changed the check_semantics member function so that the array and map vectors must be composed of simple-type elements.

1998-08-14  James Gallagher  <jgallagher@opendap.org>

	Fixed update-version target to use dap* versus dap-*.

1998-08-13  James Gallagher  <jgallagher@opendap.org>

	Fixed error messages.

	Fixed TAGS_FLAGS.

	Added include of unistd.h for dup(2).

	Bytes are now unsigned (0..255).

	Bytes now are unsigned (0..255). Fixed this test to check that.

	Fixed test after fixing misspelled error message.

	Changed DODS_CHAR_MAX to 255. Bytes are supposed to be unsigned in DODS.

1998-08-06  James Gallagher  <jgallagher@opendap.org>

	Fixed the misuse of the read(...) member function. See Grid.c (from jeh).

	Fixed misuse of read member function in serialize. Test for a read(...) error by checking the value of the `error' parameter, not the return value of the read(...) member function. (from jeh)

	Fixed the cvs log. It cannot have the $ Log $ and the comment thing on the same line...

	Added cache dir methods and stuff to ctor (from jeh)

	Added cache_dir member (from jeh).

	Added cast in call to abs. I'm not sure why...

	Fixed some of the doc comments.

	Field added so that aliases may be displayed as such and not by displaying the aliased information.

	Now prints aliases as such rather than replicating the aliased entry.

1998-07-28  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Moved GNU libg++ code into DAP subdirectory GNU.

1998-07-15  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added as part of the process to ween the project from ling++

1998-07-13  James Gallagher  <jgallagher@opendap.org>

	Fixes from the final test of the new build process

1998-07-09  James Gallagher  <jgallagher@opendap.org>

	Added -MG to CFLAGS. This causes gcc to assume missing files are generated.

1998-06-05  James Gallagher  <jgallagher@opendap.org>

	Changed the version regex used to check for the version string pattern so that it includes a `wildcard' at the end. Thus versions like 2.15.1 and 2.15a can be read (both as major version == 2 and minor version == 15).

1998-06-04  James Gallagher  <jgallagher@opendap.org>

	Added two new member functions to get/set the www_errors_to_stderr property. Also added a new member _www_errors_to_stderr to hold that property. When true, www errors are printed to stderr in addition to being recorded in the object's Error object. The property is false by default.

	Added two new member functions to set/get the new www_errors_to_stderr property. This controls whether www errors (like host not found) are reported on stderr in addition to the Error object. The default is to NOT report them to stderr. WWW errors are now recorded in the Error object.

1998-05-19  James Gallagher  <jgallagher@opendap.org>

	Fixed up some comments about reset_ and clear_constraint.

1998-05-18  James Gallagher  <jgallagher@opendap.org>

	Fixed the documentation of update_length. This member function is deprecated.

	Removed part of the class doc comment about selection and projection since they were not quite correct.

1998-04-07  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added declaration of prune_spaces(String)

	Added a call to prune_spaces to the default ctor. Removing spaces prevents various crashes. Note that CEs can themselves contain spaces but *leading* spaces caused problems.

	Added prune_spaces(String) function. This can be used to remove leading spaces from URLs and their embedded CEs (i.e., spaces between the ? and the start of the CE). Doing this before passing the URL/CE into the web library prevents various nasty crashes. This function is called by Connect's default ctor. Users of Connect don't have to call it.

1998-04-03  James Gallagher  <jgallagher@opendap.org>

	Release 2.15b3

	*** empty log message ***

	Patch from Jake Hamby; fixed bug where Structures which contained sequences did not print properly.

	Patch from Jake Hamby. Added print_all_vals member function.

	Patch from Jake Hamby. Added print_all_vals member function. Fixed print_val so that structures with sequences work properly.

	Patch from Jake Hamby to print_all_vals(). deserialize needed to be called before the first call to print_val.

	Fixed a bug in process_data where sequences were not handled properly. Patch from Jake Hamby.

1998-03-31  James Gallagher  <jgallagher@opendap.org>

	Work-around so that String.XPlex builds without optimization. gcc 2.8.1 cannot build this code with optimization.

	*** empty log message ***

1998-03-27  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	*** empty log message ***

	Added stuff for String.cc & String.h.

1998-03-26  James Gallagher  <jgallagher@opendap.org>

	Fixed tests for the new DDS::send() mime header stuff

1998-03-25  James Gallagher  <jgallagher@opendap.org>

	Added % to the set of characters that can start and ID

	Removed DODS_DEBUG define.

	Changed from converters to the _conv member in www_lib_init.

	Added keep_temps global for use with debuggers to keep those temp file around. Added parse_mime() to gobble up the mime header generated by DDS::send()

	Added targets for GNU CC test coverage stuff. Thecode should really be compiled using -O0 but that's another issue.

1998-03-19  James Gallagher  <jgallagher@opendap.org>

	Improved the error message reporting.

	Added documentation for the new parameters to the set_mime_*() functions.

	Fixed a bug where _program was feed into strlen even when it is NULL.

	Added documentation for the new parse_constraint() member function.

	Removed code associated with the (bogus) caching scheme. Removed _connects.

	Removed old code associated with the (bogus) caching scheme. Removed the _connects field. Used _conv as a flag to ensure the www library is intialized only once.

	Fixed calls to set_mime_*(). Removed old code (that was surrounded by #if 0 ... #endif). Added a version of parse_constraint(...) that works with FILE * Completely hacked send(...). It now takes care of setting up the compression sub process. Removed `compressed' flag from parse_constraint(...).

	Fixed calls to set_mime_*(). Removed the compression code (it is now in DDS::send(). Removed old code (that was surrounded by #if 0 ... #endif).

	Removed old code (that was surrounded by #if 0 ... #endif).

	Fixed the error messages so they use `' instead of : Added Error objects for array index errors. Removed old code (that was surrounded by #if 0 ... #endif).

	*** empty log message ***

	Removed old code (that was surrounded by #if 0 ... #endif).

	*** empty log message ***

1998-03-18  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

1998-03-17  James Gallagher  <jgallagher@opendap.org>

	Added an implementation of element_count().

	Added an implementation of element_count().

	Added an implementation of element_count().

	Added an implmentation of element_count().

	*** empty log message ***

	Added mfuncs element_count(), is_simple_type(), is_vector_type() and is_comstructor_type().

1998-03-11  Tom Sgouros  <tsgouros@gmail.com>

	Added doc++-style documentation.

1998-03-10  James Gallagher  <jgallagher@opendap.org>

	Removed -fno-exceptions.

	Fixed a bug in buf2val(...) where the assert failed when the value held by the variable was 0 (which is a perfectly valid value).

	*** empty log message ***

1998-03-03  James Gallagher  <jgallagher@opendap.org>

	Fixed for loops in Makefiles

1998-02-19  James Gallagher  <jgallagher@opendap.org>

	Changes for version 2.15 build

	Changed error messages so that ones from geturl that are not obviously from geturl are prefixed by `geturl: '.

	Added do_data_transfer() back in since the jgofs servers use it.

	Changed name of ...end_of_sequence to ...start_of_sequence since that is now how it is used. I hope this will reduce confusion. Changed the name of read_end_marker to read_marker (since they are not always end markers anymore).

1998-02-17  James Gallagher  <jgallagher@opendap.org>

	Reverted to the old transfer scheme for Sequences. Added EOI/EOS markers. The code supports (via version numbers in the header of the return documents) reading from the old-style servers (which do not have EOI/EOS markers.

1998-02-11  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added prototype for deflate_exists(). Removed prototype for decompressor().

	Added support for on-the-fly decompression. Added -z flag to suppress requesting data be compressed. Added new trace options (libwww core, etc.).

	Changed x_gzip to deflate. See Connect.cc/.h Removed old code.

	Removed old code.

	Added deflate targets. It is installed in etc. Added DODS_Cache.pm installation.

	Added call to util.cc:deflate_exists() to send_data(). This means that send_data() will only try to start the compressor if an executable copy of deflate can be found. If, for any reason a copy of deflate cannot be found data is sent without trying to compress it.

	Changed x_gzip to deflate. See Connect.cc/.h

	Mayor modifications for libwww 5.1 compression support. I removed lots of old code that was superfluous and changed the way the library is initialized to make that more efficient. Removed the old Semaphore hacks. Removed the content-encoding handler (that is now done by libwww). The Ctor and www_lib_init now take a flag that controls whether the server is told that the client can decompress data. Note that this does not mean data *will* be compressed, just that the client can process it if it is.

	Changed x_gzip/x-gzip to deflate since libwww 5.1 offers internal support for deflate (which uses the same LZW algorithm as gzip without the file processing support of gzip). Added to the arguments accepted by the ctor and www_lib_init so that they can now be called with a flag used to control compression. Fixed up the comments to reflect these changes.

	Added/fixed support for on-the-fly compression of data. The current code uses a subprocess to run a compression filter, deflate, which uses the LZW compression algorithm in zlib 1.0.4.

1998-02-10  James Gallagher  <jgallagher@opendap.org>

	Added TRUE and FALSE definitions.

	Added to DAP.

1998-02-09  James Gallagher  <jgallagher@opendap.org>

	Added/fixed doc++ comments.

1998-02-05  James Gallagher  <jgallagher@opendap.org>

	DODS now compiles with gcc 2.8.x

1998-02-04  Tom Sgouros  <tsgouros@gmail.com>

	Another draft of documentation.

1998-01-14  Tom Sgouros  <tsgouros@gmail.com>

	First draft of doc++ class documentation.

1998-01-12  James Gallagher  <jgallagher@opendap.org>

	Added a copy ctor since TestSequence has its own private data members. g++ 2.7.2.3 (?) running on Linux complained (apparently) about it being missing. Also added _duplicate private member function.

	Added a copy ctor since TestSequence has its own private data members. g++ 2.7.2.3 (?) running on Linux complained (apparently) about it being missing.

1998-01-12  Tom Sgouros  <tsgouros@gmail.com>

	Second pass at class documentation.

1997-12-31  James Gallagher  <jgallagher@opendap.org>

	Enclosed print_basetype_pointer() function in #if DODS_DEBUG == 1 #endif to stop compiler warnings about it being unused.

	Added casts in serialize and deserialize to get rid of warnings about signed-ness of buffers passed to XDR functions.

	Changed name of read_level() to level() to reduce confusion in child classes. Also changed return type from unsigned int to int. This allows callers to store flags, etc. in the _level field - not the best thing, but a realistic expectation

	Removed the old, errant, test for 4 byte doubles.

1997-12-30  James Gallagher  <jgallagher@opendap.org>

	Added target for server tests.

1997-12-18  Tom Sgouros  <tsgouros@gmail.com>

	First draft of class documentation, entered in doc++ format, in the comments

	merged conflicts

1997-12-16  James Gallagher  <jgallagher@opendap.org>

	version 2.15

	*** empty log message ***

1997-12-15  James Gallagher  <jgallagher@opendap.org>

	Merged release 2.14d changes.

	Merged changes from release-2.14d.

	*** empty log message ***

	Changes from release 2.14d

	Added `-' to characters allowed in NAME lexeme.

	Added code for NAME lexeme.

	geturl is now installed in the bin dir.

	The return type of set_vec() is now bool (was void).

	Added debugging code to help finder problems reading sequences from older servers.

	Fixed what may have been a lingering problem with version number strings in the server_handler() function. Added initialization of _server to `dods/0.0' in ctor. Thus _server will have a value even for older servers that don't support server version numbers.

	Changed _version_string_to_numbers() so that it does something sensible when the version string is hosed.

	Added type checking set_vec. If the type of the element to include in the vector does not match the vector's type, set_vec() returns false.

	Changed check_semantics() so that it returns an error message instead of printing one (thus it now works like all the other implementations of check_semantics().

1997-11-20  James Gallagher  <jgallagher@opendap.org>

	Added to the name rule so that it recognizes both the ID and NAME lexeme as valid when parsing the dataset name. NAME (see dds.lex) is just like ID except that it includes `.'. Thus datasets with names like sst.reynolds.nc now parse correctly.

	Added the NAME lexeme. This is explicitly for datasets with `.' in their names. That character cannot be used in the name of a variable since in DODS it separates parts of a constructor type. However, it can be part of a dataset name. Using a separate lexeme is required by the parser.

1997-10-09  James Gallagher  <jgallagher@opendap.org>

	Resolved conflicts in merge of 2.14c to trunk.

1997-10-03  James Gallagher  <jgallagher@opendap.org>

	Release 2.14c fixes

1997-09-22  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added DDS * to deserialize parameters.

	Changed code so that the new DataDDS objects are used/created when accessing data.

	Added comment info.

	Added doc++ style comments.

	Added DDS * to deserialize parameters.

	Added DDS * to deserialize parameters. Added End of instance and end of sequence marker constants. Change serialize() and deserialize() mfuncs so that the new markers are used and embedded sequences are sent without needlessly replicating the enclosing sequence's instance.

	Added DDS * to deserialize parameters.

	Added massive amounts of code to read test data from a file.

	Fixed a bug in vec_resize.

	Added new function to read ancillary DAS and DDS files.

	*** empty log message ***

	Added data file option. Now -f can be used to specify the name of a file from which to read data. This currently only works with Sequences, but in the future all test data could be read from a file. Added use of the DataDDS class (which is required by the new core software).

	Rewrote the handling of received Sequences in `constrained-trans()'.

	Created this subclass of DDS to hold version information in the data DDS

1997-08-29  James Gallagher  <jgallagher@opendap.org>

	First version

	*** empty log message ***

1997-08-28  James Gallagher  <jgallagher@opendap.org>

	Created

1997-08-25  James Gallagher  <jgallagher@opendap.org>

	Removed errant double semicolon at the end of the Url attribute - replaced it with a single semicolon.

1997-08-22  James Gallagher  <jgallagher@opendap.org>

	Changed the way that the _error_message member is processed. Now if the message does not have explicit double quotes, print() will add them. The mfunc is smart enough to add the quotes only if needed so old code (which provides the quotes) will still work and new code without the quotes works too. This makes for a more convenient use of the Error object.

	Added to the `description' rule so that Error objects with only a code will parse.

1997-08-11  James Gallagher  <jgallagher@opendap.org>

	Really fixed the comment leaders this time...

	DODS-2.14b distribution

	Fixed comment leaders for new CVS version

1997-08-09  James Gallagher  <jgallagher@opendap.org>

	Changed the names of AttrTable_to_String and String_to_AttrTable.

	Changed/fixed the type comparison in attr_append so that code which calls unsigned int `UInt32' won't break (the type is called Uint32, but the das parser and scanner accept UInt32 as well).

	Added install of DODS_Dispatch perl library.

1997-08-07  James Gallagher  <jgallagher@opendap.org>

	Changed type of dods_byte from unsigned char to char.

1997-07-15  James Gallagher  <jgallagher@opendap.org>

	Release 2.1.4a

	Formatting.

	Fixed error message text for length function.

	Changed return type of the length member function.

	Changed return type of length member function.

	See Sequence.cc for info on changes to the length member function.

	Changed length member function to return -1 instead of 0. Thus the default, when a subclass does not define its own version of this member function, is to return -1. This value will be easy to differentiate from 0, which could mean that the sequence has zero elements.

	*** empty log message ***

1997-06-30  James Gallagher  <jgallagher@opendap.org>

	Removed some old code (commented out).

	Fixed a bug when vectors of UInt32 were used. I changed the way the type name was passed to AttrTable::append_attr() so that the names were always the same regardless of form of the name used in the DAS. Fixed a bug when Urls are used as an attribute type.

1997-06-12  James Gallagher  <jgallagher@opendap.org>

	Fixed #ifdef HAVE_EXPECT #endif.

	*** empty log message ***

1997-06-06  James Gallagher  <jgallagher@opendap.org>

	Last minute changes for version 2.14

	Wrapped DODS_ROOT in #ifndef ... #endif.

1997-06-05  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added mfuncs with char * parameters for some of the calls. See AttrTable.h

	Added mfuncs which have char * parameters for those mfuncs which accept both Pix and String parameters. This avoids a conflict between promotion of char * actuals to Pix instead of String (while the latter makes more sense, the former actually happens).

	Added parse_mime(); a tiny parser for the fields DODS uses. Not a real MIME parser. Added process_data to facilitate processing data from stdin. Modified request_data() member function so that it works when reading from stdin. Fixed a bug in the destructor where _output and _source were not set to null.

	Added read_data(), parse_mime() and process_data() mfuncs.

	Removed add_table(char *, ...).

	Added components() and projection_yields_grid() mfuncs.

	Added prototypes for new functions.

	Modified so that data can be read from stdin (similar to writeval).

	Fixed the decompresser() function - made int data[2] automatic instead of static. Fixed the spelling mistake in the function names compresser and decompresser.

	*** empty log message ***

	Changed so that compression is not used.

	Added two mfuncs: components() and projection_yields_grid(). These aid in sending Grids that have been projected in various ways. Fixed print_decl() so that a Grid that has some components projected either by explicitly listing them or by listing only some of the Grids dimensions will be sent properly. This means that some Grid objects `decay' to either Structures of Arrays or simple Arrays depending on the projection.

	Added four function that help with writing the *_dods filter programs: usage(), do_version(), do_data_transfer() and read_ancillary_dds().

	No longer install the (bad) dods-core-version perl program.

1997-05-22  James Gallagher  <jgallagher@opendap.org>

	Changed the way global attributes are ferreted out. Previously I had assumed that any attribute group that was not also the name of a variable was a group of `global' attributes. However, the new aliases change this. In response I've changed the way usage looks for global attributes; it looks for attribute groups which contain the strings `global' and/or `dods'. Case is not important.

1997-05-20  James Gallagher  <jgallagher@opendap.org>

	Added a fix for aliases between top level groups of attributes.

1997-05-13  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added instrumentation for function decompressor().

	Changed options and command `format' so that das-test is similar to dds-test.

	Added calls to close_output() in the dtor. This ensures that all files will be closed when an Connect is destroyed.

	Changed max_str_len to 32k - a temporary fix for String variables

	Added changes to handle the new Alias and lexical scoping rules.

	*** empty log message ***

1997-05-07  James Gallagher  <jgallagher@opendap.org>

	Fixed a bug where the last decompresser process exit was not handled properly. The fix was to make sure that calls for data interleaved with calls for the DAS and/or DDS objects properly wait for the exit status of the last decompression process. In addition, ensure that Connect's dtor waits for the exit status of the very last decompression process.

1997-05-06  James Gallagher  <jgallagher@opendap.org>

	Added aliases to the grammar. An alias can appear in place of an attribute and uses the syntax `alias <var1> <var2>'. If var1 exists, var2 becomes an alias to it and vice versa. If neither var1 nor var2 exists or if they both exist, and error is reported and parsing stops.

	Added Alias and Global to the set of known tokens. Added many new characters to set of things that can appear in an identifier.

1997-05-05  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

1997-05-01  James Gallagher  <jgallagher@opendap.org>

	Fixed an error in date_func where argv[0] was used as a BaseType instead of a BaseType *.

1997-04-15  James Gallagher  <jgallagher@opendap.org>

	Added optional argument to print_variable functions so that the variable can be printed using the current constraint. Changed the call to print_variable() in DDS::send() so that the constrained variable is printed.

1997-03-27  James Gallagher  <jgallagher@opendap.org>

	Update for version 2.13

	Added dods_progress() prototype. See util.cc.

	Added dods_progress() function that looks for an environment variable to see if the user wants the progress indicator visible. Thus, they can use one environment variable to control the GUI as a whole or this one to control just the progress indicator.

	Fixed depend. Again. Removed $(STRIP) and added -s option to install.

	Fixed a problem in set_mime_*() where Content-Encoding was sent with the value x-plain. This caused Netscape on Windows to barf. I'm not sure that it is a real error, but sending C-E only when its value is x-gzip or x-compressed apparently causes the message to go away.

1997-03-23  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added field _comp_childpid. See the note in Connect.cc Re: this field.

	Added temporary fix for decompression bug. When decompressing `zombie' processes were created which would fill the system's process table. The fix explicitly catches the exit of child processes. This code can be removed when/if we switch to version 5.1 of the WWW library.

1997-03-13  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	*** empty log message ***

1997-03-11  James Gallagher  <jgallagher@opendap.org>

	Removed code that set the HTTP protocol version header based on the value of the SERVER_PROTOCOL environment variable. In servers that support HTTP/1.1, the value of this env var was "HTTP/1.1" which broke our clients since the servers (which are `nph') do *not* support HTTP/1.1.

1997-03-08  James Gallagher  <jgallagher@opendap.org>

	Changed call to `unique()' to `unique_names()' (see util.cc).

	Changed default param to check_semantics() from  to String() and removed the default from the argument list in the mfunc definition

	Changed name of function unique() to unique_names() to avoid a conflict with the STL.

	*** empty log message ***

1997-03-07  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

1997-03-05  James Gallagher  <jgallagher@opendap.org>

	Added bool parameter `compressed' (defaults to true) to the send member function. See DDS.cc.

	Silly bug where show_gui() was not called in some cases.

	Now correctly gets the server protocol (HTTP 0.9, 1.0 or 1.1) from the environment variables and sets the return doc header accordingly.

	Removed the static global _logfile. See Connect.cc.

	Fixed the logfile bug; when linking with ld or cc static objects are not initialized. The _logfile member was a static global object and caused core dumps when it was not initialized.

	Added Cannot read file message to list of builtin messages.

	Added calls to set_mime_binary() in DDS::send().

	Removed bogus prototypes for compress_stdin,out.

	Changed display_message member function so that it uses Gui::response() instead of Gui::command(). The later only works for things like the progress popup for which expect does not need to wait. However, for things like dialogs, expect must wait for the user to `hit OK', hence the use of the response() member function.

1997-03-03  Reza Nekovei  <rnekovei@ieee.org>

	Changed default error object's output stream to cout. This will send it to the client side (versus the local server's log file, cerr).

1997-02-27  James Gallagher  <jgallagher@opendap.org>

	Added error messages.

	Tweaked comments.

	Corrected call to unique() in check_semantics() (added new String &msg parameter).

	Changed check_semantics() so that it now returns error messages in a String object (passed by reference).

	Added String &msg parameter to unique(). Instead of writing messages to cerr, messages are now written to this string object.

	Removed `parse error' message from parse_error() function.

	Tweaked error messages so that they no longer mumble about parse errors.

1997-02-26  James Gallagher  <jgallagher@opendap.org>

	Fixed problem with consistency check in Error::error_code().

1997-02-24  James Gallagher  <jgallagher@opendap.org>

	Removed `rule' for "." since it cannot be matched.

1997-02-18  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Changed (void) to ().

	Fixed decompressor and compressor parameter lists.

	Fixed ctors (removed lame error object initializers).

	Added childpid parameter.

	Moved the default ctor back into the public section...

	Allow empty Error objects.

1997-02-17  James Gallagher  <jgallagher@opendap.org>

	Changed output of verbose option so it is consistent for DAS, DDS and data

	Fixed silly spelling errors.

	Fixed a bug in the ctors introduced by making Error's ctor private.

1997-02-15  James Gallagher  <jgallagher@opendap.org>

	Changed comments for doc++. Moved default ctor into the private part of the object.

	Changed OK() so that empty errors return false. Added assert calls.

1997-02-14  James Gallagher  <jgallagher@opendap.org>

	Changed grammar to allow Error objects which have no `program' component. That is, the program part is absent. Previously the program part had to be there even if the fields had null values.

	Fixed error-test target.

1997-02-13  James Gallagher  <jgallagher@opendap.org>

	Added allowable and escape parameters to id2dods and dods2id so that the builtin regexs can be overridden if needed. Switched to the `fast compile' mode for the Regex objects.

	Removed reliance on the dods-hdf code. Introduced a const int MAXSTR with value 256. This matches the length of ID_MAX in the parser.h header (which I did not include since it defines a lot of software that is irrelevant to this module).

	Added to DODS core

	Added a field to store information from the MIME header `Server:'. Added a member function to access the value of the field and a MIME header `handler' function to store the value there.

	Added MIME header `handler' for the server header. Added mfuncs to access the server information (which in DODS is the version number of the core software).

	Added install of dods-core-version.

	Added printout of the DODS version number stamp (read from the MIME header). Use the verbose option to enable display.

1997-02-13  Reza Nekovei  <rnekovei@ieee.org>

	Fixed concatenation of _proj and _sel members into request_das and request_dds URLs.

1997-02-12  James Gallagher  <jgallagher@opendap.org>

	Added version switch. Made compatible with writeval's command line options.

	Added use of the optional parameter to Connect's ctor; if -t (trace) is given on the command line, then print www library informational messages. Changed trace option switch from -v (which is now used for verbose - an option that is entirely separate from trace) to -t.

	Fixed handling of non fatal errors reported by the www library. Now an optional parameter to the class ctor enables display of these informational messages. However, they are not registered as `web_errors' in the type field of the Connect object. Fixed a bug which introduced extraneous '?'s into URLs.

	Added optional parameter to the ctor for this class; it enables informational error messages from the WWW library layer.

	Fixed bass asserts in process_array_indices and process_grid_indices.

1997-02-09  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Changed return type of dods_root() from String to char *.

	Added assert() calls for pointers. Added code to fix warnings about comparisons between int and unsigned numbers. Changed return type of dods_root() from String to char *.

	Fixed bug where attribute type of int32 was broken on 64bit machines.

	Modified usage of request_data() to match new return type.

	Fixed depend lameness.

	Added assert statements for pointers

	Changed the return type of request_data() and related functions from DDS & to DDS *.

	Fixed processing of error returns. Changed return type of request_data() (and related functions) from DDS & to DDS *. The member function now return NULL if an error is detected.

	*** empty log message ***

1997-02-04  James Gallagher  <jgallagher@opendap.org>

	Fixed bugs in URL() and CE() where the _URL, _proj and _sel members were misused.

1997-01-28  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Wrapped the generic header_handler() in DBG() so that it is only used while debugging.

1997-01-13  James Gallagher  <jgallagher@opendap.org>

	Changed the name of the private member `map' to `attr_map' to avoid a name collision with the STL'd map class.

1996-12-18  James Gallagher  <jgallagher@opendap.org>

	Fixed the install-gui target

	*** empty log message ***

	Removed the DODS_PERF define.

	Fixed various problems in the install-gui, -geturl and -usage targets.

	Fixed spelling in ErrMsgT()'s message.

	Modified the parser so that it returns Error objects for certain types of errors. In order to take advantage of this, callers must examine the returned object and process it as an Error object if status is false.

	Tried to fix the online help - maybe I succeeded?

	Added massive fixes for the processing of attributes to sort out the `global attributes'. Also added changes to the overall layout of the resulting document so that the hierarchy of the data is represented. Added some new utility functions.

1996-12-12  James Gallagher  <jgallagher@opendap.org>

	Added install target for usage server. Added usage server to list of things built by `all' target.

1996-12-11  James Gallagher  <jgallagher@opendap.org>

	Created.

1996-12-03  James Gallagher  <jgallagher@opendap.org>

	Fixed a bug in the char * array DESCRIPT where "dods_error" was catenated with "web_error" (due to a missing comma).

1996-12-02  James Gallagher  <jgallagher@opendap.org>

	Added ostream and bool parameters to parse_constraint(). If the bool param is true the the code assumes it is being run in the server. In that case error objects are not evaluated but instead are serialized and set to the client via the ostream.

	Added ostream and bool params to parse_constraint(). The bool parameter is used to tell the member function that it is running in the server of the client. The ostream is the sink for error objects (server side) or messages (client side).

	func_member now does the right thing with the dds by sending dds.filename() to ops().

	Changed int_ops prototypes so that they use the dods_{uint,int}32 datatypes.

	Added `filename' field and access functions.

	Added `filename' field and access functions. This field is for recording the filename associated with the dataset from which the DDS is generated. It does not actually have to be a filename; rather it is intended to be used by BaseType's read() member function when that code must access some OS controlled resource to get data for a particular variable. For most systems it will be a file, while for some systems it may be a RDB or blank.

	Added dataset as a parameter to the ops member function.

	Added versions of int_ops for various combinations of signed and unsigned operands. Ignore the warnings about comparisons between signed and unsigned...

	Added cases for uint32 to various parts of Vector.

	Added case for unit32 to ops() member functon.

	Added case for uint32 to ops() member function.

1996-11-27  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added DDS as third parameter to function in the CE evaluator

	*** empty log message ***

	Fixed das-test dependencies. Arrgh...

	Expanded help to include all the verbose options. Added PERF macros to code around request_data() call.

	Expect this test to fail because of problems passing double quotes through Tcl/Expect.

	*** empty log message ***

1996-11-24  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added prototypes for new functions.

	Added new dods_root function. Fixed compressor(). Fixed systime().

	Added DODS_PERF macro.

	Removed compress/decompress functions. Better versions are in util.cc Changed from static global version of dods_root to function version.

	Added web-error to set of object types. Added two MIME parsers to set of friend functions. Removed unused friend functions.

	Added USE_SEM control macro - since asynchronous connects are massively broken the semaphores are not used. The _connects field is not initialized to -1 and handled so that HTLibTerminate() is never called but so that the web library is initialized before the first use of connect. Apparently calling HTLibInit() more than once (even with an interleaving call to HTLibTerminate()) breaks the 5.0a version of the library. Added the constant web_error the the set of content-descriptions. Removed use of the disk cache. Added it in later; read_url() must be modified. Never use the broken asynchronous code. Fixed processing of content-description so that web-error and dods-error messages are handled correctly.

1996-11-21  James Gallagher  <jgallagher@opendap.org>

	Removed decompress() function. Switched to decompressor function in util.cc Wrapped semaphore code in USE_SEM preprocessor define - the semaphore code may not be necessary...

	Added compressor and decompresor prototypes.

	Added compressor and decompressor functions.

1996-11-20  James Gallagher  <jgallagher@opendap.org>

	Fixed header parsing. Now I use my own header parsers for the content-description and -encoding headers. Once the values of these headers have been stored in the Connect object it is easy to operate on the data stream. This is simpler than using libwww's stream stack (at least for decompression and error document routing).

1996-11-19  James Gallagher  <jgallagher@opendap.org>

	Fixed lingering bug in compress_stdout where the user's path was not searched correctly.

	Changed the way depend works; now depending is independent of Makefile creation.

	Ripped out old code.

	Fixed a bug with HTLibTerminate() where multiple URLs caused a core dump. Fixed the progress indicator. Ripped out the semaphore stuff used with the asynchronous connects - those connects now work, at least on the Sun.

	Modified -D option to correctly process the Asynchronous option.

1996-11-18  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

1996-11-15  James Gallagher  <jgallagher@opendap.org>

	Fixed typo in install-gui.

	Fixed a bug where multiple urls failed.

	Added install of tcl GUI scripts.

1996-11-13  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	*** empty log message ***

	*** empty log message ***

	Fixed debugging.

	*** empty log message ***

	Added set_mime_error() function. Use this to send MIME headers indicating that an error has occurred. NB: Don't use this when sending back an Error object - this is for those cases where an error object won't do and you must signal an error to the WWW/HTTP software on the client side.

	Fixed the ops() function so that comparisons between UInt32 and Int32, etc. will work correctly. Untested.

	*** empty log message ***

	Added clean of the Map, Stack, Vec and Plex directories.

	Fixed the int32_ops() function so that comparisons with unsigned integers has a better shot at working. Since there are no UInt32 data sets this has not yet been tested.

	Now uses version 5.0a of the WWW library.

	Updated so that this now works with version 5.0a of the WWW library from the W3c. Fixed handling of certain types of http/www errors.

	*** empty log message ***

1996-11-12  James Gallagher  <jgallagher@opendap.org>

	Removed

1996-10-31  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added WWW_ROOT. Fixed expr-test target.

	Fix the help message so that -D is not described as -A...

1996-10-28  James Gallagher  <jgallagher@opendap.org>

	Added define of YY_NO_UNPUT to suppress creation of that function.

	Added unsigned int 32 to the list of datatypes used/supported by the DAP.

	Added unsigned int to set of possible datatypes.

	Added UInt32 to type names returned by type_name() member function.

	Added.

	Fixed compile-time bug in ops() where the type names dods_* were used where the constants dods_*_c should have been used.

	Added include of UInt32.h and prototype of NewUInt32().

	Added unsigned int to set of possible attribute value types.

	Fixed tests in check_uint(). NB: strtol() does not check for overflow on SunOS.

	Added prototypes for check_uint(...); functions that test unsigned integers.

	Added functions to test unsigned integers.

1996-10-18  James Gallagher  <jgallagher@opendap.org>

	Fixed the fix for bison 1.25...

	Fixed definition of dtor (was Int32 instead of UInt32).

	Fixed an error in the ctor where dods_int32_c was passed instead of dods_uint32_c. Changed comparisons so that unsigned 32 bit ints are used when appropriate.

	Changed variable types used for comparison operations from 16 to 32 bit integers.

	Changed request_das() and request_dds() so that they now pass any initial constraint to the DAS and DDS servers.

	Changed set_mime_binary() and set_mime_text() so that they produce a full HTTP/MIME header.

1996-10-16  James Gallagher  <jgallagher@opendap.org>

	Fixed bad operator in DODS_BISON_VER preprocessor statement.

1996-10-10  James Gallagher  <jgallagher@opendap.org>

	Fixed DODS_BISON_VER preprocessor statement. >= apparently is not recognized by g++'s preprocessor.

1996-10-08  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added test for the -D option so that a Ce can be supplied either with the -c option or using a ? at the end of the URL.

	Latest.

	Added % to the set of characters allowable in identifier names

	Fixed deserialize so that when called on a null Sequence it will return true.

	Ripped out the VPATH stuff since it gets in the way too often.

	Latest.

	Added a fix for Bison 1.25 so that PARSE_PARAM will still work

	Added fields for the projection and selection parts of a CE supplied with the URL passed to the Connect ctor.

	Added code so that a constraint expression appended to a URL is properly handled. The CE is stored in in the Connect object. When a CE is passed to the request_data member function, Connect correctly combines the projection and selection parts of that CE with the matching parts of any initial CE.

	Added symbol for Bison version; we need to test for 1.22, 1.24 and 1.25. The symbol is defined to be the version number without the decimal point.

1996-10-01  James Gallagher  <jgallagher@opendap.org>

	Changed instances of XDT_INT16 to XDR_UINT16.

	Changed XDR_SHORT to XDR_INT16 and XDR_USHORT to XDR_UINT16 (to match the Int16 and UInt16 classes).

1996-09-24  James Gallagher  <jgallagher@opendap.org>

	Fixed conflict between two version of print_all_vals prototypes.

1996-09-23  James Gallagher  <jgallagher@opendap.org>

	Fixed lame declaration of print_all_vals().

1996-09-20  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

1996-09-19  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Added code to process sequences correctly when given the -D (get data) option.

	Added Strip to the install operations. Added geturl to the set of things installed.

	Fixed syntax errors in the enum `Type'.

1996-09-18  James Gallagher  <jgallagher@opendap.org>

	Fixed a bug in the dtor which caused the _anchor WWW lib object to be deleted twice under some (likely) conditions. The efence library found the error.

1996-09-16  James Gallagher  <jgallagher@opendap.org>

	Fixed var(const String name) so that it would correctly descend names of the form <base>.<name> where <name> may itself contain `dots'.

1996-09-12  James Gallagher  <jgallagher@opendap.org>

	Fixed a nasty bug in print_array (private member function) where recursive calls were made in the wrong order causing 3+ dimension arrays to print many more values than actually exist in the array.

1996-09-11  James Gallagher  <jgallagher@opendap.org>

	Fixed two errors in xdr_str: 1) Use of max_str_len as an array dimension (max_str_len is approx 4e9; a large array by most standards...) and 2) use of storage on the stack for the return string. Now xdr_strings internal allocation mechanism (which uses malloc) is used to create the space needed by the incoming string. After that string is copied to the String object parameter it is freed using free() (Not xdr_free() as the SunOS 4 man page erroneously suggests).

1996-09-05  James Gallagher  <jgallagher@opendap.org>

	Added a new option to geturl, -D, which uses the Connect::request_data member function to get data. Thus -a, -d and -D can be used to get the das, dds and data from a DODS server. Because the request_data member function requires a constraint expression I also added the option -c; this option takes as a single argument a constraint expression and passes it to the request_data member function. You must use -c <expr> with -D.

1996-08-26  James Gallagher  <jgallagher@opendap.org>

	Changes for version 2.07

	Added.

	Added.

	Added type constants for 32 bit unsigned ints, 16 bit signed and unsigned ints and 32 bit floats.

1996-08-15  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

1996-08-13  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Generated files.

	Changed definition of the read member function.

	Added __unused__ to definition of char rcsid[].

	Added prototypes for the *_ops() functions.

	Added the *_ops() functions (moved from various class files).

	Extended definition of parser_arg so that it can serve as the interface for all the parsers. Added prototypes for all the new check_* functions.

	Added __unused__ to definition of char rcsid[]. Added a new parse_error function that builds an Error object and returns it instead of printing to stderr. Added versions of check_*() that take parser_arg and a context string. These call the new parse_error() function.

	Added __unused__ to definition of char rcsid[]. Added code so that local `URLs' are skipped.

	Added __unused__ to definition of char rcsid[]. Switched to the parser_arg object for communication with callers. Removed unused parameters from dereference_{url, variable}, make_rvalue_list and append_rvalue_list.

	Added __unused__ to definition of char rcsid[].

	Added __unused__ to definition of char rcsid[]. Uses the parser_arg object to communicate with the parser.

	Added __unused__ to definition of char rcsid[]. Now tests the Gui.

	Added on-line help. Now, always returns an exit code.

	Added parser_arg object macros. `Fixed' error messages. Changed return typw of daserror() from int to void.

	Added __unused__ to definition of char rcsid[]. Added parser.h to included files.

	Added __unused__ macro.

	Added __unused__ to definition of char rcsid[].

	Changes return type of length() member function from unsigned to int. A return value of -1 indicates that the vector has no length.

	Added __unused__ to definition of char rcsid[]. Fixed int -vs- unsigned int discrepancies.

	Added void casts to values computed in print_val() for loops.

	Added __unused__ to definition of char rcsid[]. Moved str_ops() to util.cc

	Removed trans-test from build process - it is obsolete given expr-test. Changed the way the code from bison in munged - now a single munge.awk script is used.

	Moved int32_ops to util.cc Added __unused__ to char rcsid[] definition. Removed system includes.

	Moved float64_ops to util.cc.

	Switched to parser_arg object for communication with caller. Fixed bogus declaration of Errorerror() (from int to void).

	Latest

	Added __unused__ to rcsid definition. Added include of assert.h.

	Removed system includes. Added documentation on new interfaces for display_message() and correct_error().

	Switched to the parser_arg object for passing parameters to/from the Error.y parser. NB: if an error object is bad a message is sent to stderr to avoid going round and round with bad error objects! Changed the interface to display_message; Gui is by default NULL so that calling it with an empty parameter list causes the message string to be sent to stderr. Changed the interface to correct_error(); it now returns a string which is the corrected error or "".

	The parser (dds.y) is now called using the parser_arg object. the member function eval_function() now returns a NULL BaseType * when the function in the CE does not exist.

	Removed the system includes - this is part of my drive to eliminate nested includes from the DODS core software. I'm still waffling on this, though.

	Switched to use of parse_arg object for passing values to and from the bison generated parser. Added test for error objects on return from the parser and call the display_message member function when one is detected.

	Corrected misuse of the istrstream class; added calls to the freeze member function where needed. Fixed test for URL -vs- filename in the object ctor.

	Fixed a bug in the value() member function where non-existent functions were `evaluated' (producing a core dump).

	Added _unused_ to the static global rcsid to remove warning when building with gcc -Wall. Moved the byte_ops function to util.cc.

	Added bounds checking to the add_constraint member function. add_constraint() now returns false when a bogus constraint is used.

	Changed return type of add_constraint from void to bool. Now the member function returns false when a bogus constraint (e.g.,bad array bounds) are used.

	Fixed tests so that they match the output of the parser.

	Fixed dds-test_start so that interactive programs can be tested. This was done by making the global variable `spawn_id' visible in the procedure.

1996-08-12  James Gallagher  <jgallagher@opendap.org>

	Changed for the new error message text from the parser.

	Fixed for new byte tests - -127 to 127 is now the valid range for byte values.

	Fixed a bug in check_semantics where the array name was confused with the dimension names - this may be a bug in the libg++2.7.1 implementation of the class String or a bug in our usage of the same. The problem did not show up on the SunOS 4.1.3 platform.

1996-08-09  James Gallagher  <jgallagher@opendap.org>

	Changed DEBUG and DEBUG2 to DODS_DEBUG and DODS_DEBUG2 to avoid conflicts with the WWW libraries use of that name (which it always defines...).

1996-07-17  James Gallagher  <jgallagher@opendap.org>

	Removed copy of the _output FILE * and bad logic on output() member function. Added reset of _source to 0 in closr_output().

1996-07-16  James Gallagher  <jgallagher@opendap.org>

	Added usage function. Added version option. Fixed calling logic - now a usage message is printed when no options are given. Fixed warnings about signed -vs- unsigned compares.

	Fixed/removed bogus comments.

	Fixed test version number.

	Added.

	Fixed problem with interactive runs; the global variable SPAWN_ID had to be declared as such (even though its not explicitly referenced) in das-test_start.

1996-07-15  James Gallagher  <jgallagher@opendap.org>

	Added __unused__ to rcsid to suppress warnings from g++ -Wall. Fixed a bug in xdr_str(): a pointer to the decoded string was assigned to the formal parameter BUF instead of the string value itself.

1996-07-11  James Gallagher  <jgallagher@opendap.org>

	Modified configure.in and Makefile.in so that the WWW, expect and tcl libraries are automatically found by configure.

1996-07-10  James Gallagher  <jgallagher@opendap.org>

	Fixes for libtcl.a, libexpect.a and libwww.a

	*** empty log message ***

1996-07-08  James Gallagher  <jgallagher@opendap.org>

	Added HAVE_EXPECT compile-time variable.

1996-06-21  James Gallagher  <jgallagher@opendap.org>

	Added.

	Latest version...

	Fixed a comment.

	The latest versions...

	Modified to accomodate the new Gui class.

	Added Gui.cc, .h and .o to libdap++.a.

	Added Gui pointer to the Error oject's correct_error() and display_message() mfuncs. These mfuncs now used the GUI to display messages.

	Added Gui pointer to the Error oject's correct_error mfunc call.

	Removed GUI code to a new class - Gui.

1996-06-20  James Gallagher  <jgallagher@opendap.org>

	Added conditional definition of union semun {};

	Added HAVE_SEM_UNION for hosts that do not define the union semun {} union. Changed SEM_PROTO to HAVE_SEM_PROTO to be more inline with other similar defines.

1996-06-18  James Gallagher  <jgallagher@opendap.org>

	Latest.

	Added support for the GUI progress indicator.

	Fixes for Grid constraints. These include not deleting the array indices lists after processing the Array component of a grid (but before processing the Maps...).

	Added file and line number information to the macros.

	Latest.

	Modified so that the compress/decompress functions use the DODS_ROOT enviroment-variable/define or the user's PATH to find gzip.

	Added expect and tcl library to LIBS definition (for GUI).

	Added support for a GUI. The GUI is actually contained in a separate program that is run in a subprocess. The core `talks' to the GUI using a pty and a simple command language. Removed GZIP preprocessor define and added DODS_ROOT define. Added checks in the code to use the environment variable DODS_ROOT in preference to the compile-time value (if non-null).

	Added support for a GUI. The GUI is actually contained in a separate program that is run in a subprocess. The core `talks' to the GUI using a pty and a simple command language.

	Added define SEM_PROTO which is used to control inclusion of the semaphore prototypes in Connect.cc. Removed GZIP define and replaced it with a DODS_ROOT define (which is the double quoted path to the DODS root directory of the build).

1996-06-14  James Gallagher  <jgallagher@opendap.org>

	Added `<< ends' to the lines where ostrstream objects are used (without this there is no null added to the end of the streams).

1996-06-11  James Gallagher  <jgallagher@opendap.org>

	New Features: Data can now be compressed. The header generation functions set_mime_{text,binary} can be used to `turn on' output compression by using `x_gzip' as a content-encoding value (the default is no compression which corresponds to a content-encoding value of x_plain). The implementation of Connect will automatically decompress any compressed data stream. Can should be taken not to compress very small things since they may wind up bigger! Also, the program gzip is used to perform the compression so it must either be in DODS_ROOT/etc or on the user's PATH.
	Multiple, simultaneous, connects are now supported. To do this I added a new
	parameter to serialize and deserialize. The parameter is an XDR pointer.
	There are function in cgi_util.cc which can be used to create these pointers.
	The DDS::send() member function takes care of this for the server (however,
	look in either this member function of expr-test to send how to do it
	yourself). On the client-side the Connect class manages those for you. Use the
	Connect::source() member function to get the XDR pointer associated with a
	given connection. Then pass that pointer to deserialize. Again, look in
	expr-test for example code (at the very last part of constrained_trans()).

	Grid variables can now be projected just like arrays. To find out about the
	projections, use the Array member functions for constraints on the various
	constituents of the Grid (e.g., grab the Array part of the Grid and iterate
	over the DIMENSION objects to find the size of that dimension, then look at
	the various Map arrays to see which are marked to be sent, etc.). Note that
	there is some redundant information in the Grid projection because both the
	Array part and the Map part contain the dimension limits (when one or the
	other would do). I did this so the existing serialize/deserialize code would
	work without modification.

	We now use the latest WWW library (from W3C) without modification. You must
	have that *and* (until I figure a better way to do it) its source code must
	be at /usr/local/src/WWW. Otherwise you will get lots of missing include file
	names from the compiler.

	Latest.

	Added.

	Fixed $dir.

	Removed reference to libnetio.a; it is now part of libdap++.a.

	Created.

	Fixed -k (constraint expression) option when used with -p (parser) option.

	Moved debug.h in front of all the other DODS includes - this ensures that the debug.h included in this file is the one in effect (as opposed to a copy included by some other include file). We should banish nested includes... Added support for `Grid constraints'. These are like the Array constraints - projections where the start, stop and stride of each dimension may be specified. The new feature required a grammar change (so the parser would accept grids with the array bracket notation) and two new functions: is_grid_t() and process_grid_indices(). The actual projection information is stored in the array members of the Grid.

	Fixed a bug in clear_constraint(); the dimension variables in the list _SHAPE were not correctly `cleared', now they are.

1996-06-07  James Gallagher  <jgallagher@opendap.org>

	Updated for compression, the new WWW code and content-description software.

	Added build of cgi_util_test.

	Initialized vcode to null.

	Updated set_mime_binary() and set_mime_text(). Removed old declarations for NetExecute() and NetConnect().

	Fixed a bug in name_path(). Added compression functions which create filter processes which automatically compress stdio file streams. Added to set_mime_text() and set_mime_binary() support for compression. These now correctly set the content-encoding field of the mime header. Fixed ErrMsgT so that it says `DODS server' when the name of the server is not known.

	Improved error messages in some of the type checking functions.

	Fixed comments.

	Added support for compression. The Content-Encoding header is used to determine if the incoming document is compressed (values: x-plain; no compression, x-gzip; gzip compression). The gzip program is used to decompress the document. The new software uses UNIX IPC and a separate subprocess to perform the decompression.

	Changed *_MIN limits so that they are in line with values in Harbison & Steele (which makes them one less in absolute value than the values in Sun's header). This fixes a problem when comparing signed int values to DODS_INT_MIN. Also changed the values to be base 10 (from base 16).

	Removed old type checking code - use the type checkers in parser-util.cc.

	Added GZIP define.

1996-06-06  James Gallagher  <jgallagher@opendap.org>

	Added support for wwwlib 4.0. Added support for object types.

1996-06-05  James Gallagher  <jgallagher@opendap.org>

	Moved symbols from config_netio.h.in to this file.

1996-06-04  James Gallagher  <jgallagher@opendap.org>

	Multiple connections are now possible. It is now possible to open several URLs at the same time and read from them in a round-robin fashion. To do this I added data source and sink parameters to the serialize and deserialize mfuncs. Connect was also modified so that it manages the data source `object' (which is just an XDR pointer).

1996-06-03  James Gallagher  <jgallagher@opendap.org>

	latest.

	Added declarations for Errorparse() and Errorrestart().

	Added.

1996-05-31  James Gallagher  <jgallagher@opendap.org>

	Added.

	Added.

	Updated copyright notice.

	Added.

	Removed {YYACCEPT;} from rule 2 (dataset: DATASET ...).

	Added.

	Added.

	Added.

1996-05-30  James Gallagher  <jgallagher@opendap.org>

	Added read_p and send_p to the set of members copied by _duplicate(). From Reza.

	Fixed the allocation of vectors of DODS variable objects; use the ptr_duplicate member function instead of the copy ctor in val2buf(). Fixed allocation of vector of String in buf2val(). From Reza.

1996-05-29  James Gallagher  <jgallagher@opendap.org>

	Made changes necessary to support CEs that return the value of a function instead of the value of a variable. This was done so that it would be possible to translate Sequences into Arrays without first reading the entire sequence over the network.

	*** empty log message ***

	Fixed up the copyright header.

	Removed old, useless, code.

	Added configure of header `config_netio.h'.

	Added the enum ObjectType. This is used when a Content-Description header is found by the WWW library to record the type of the object without first parsing it. Added ctors for the struct constraint. Removed the member _request.

	Added Content-Description header parsing. Removed Event loop code (HTEvent_loop()). Fixed bug where a copy of _OUTPUT was created using _OUTPUT's file descriptor. When _OUTPUT was closed the copy no longer referenced a valid data source. Fixed problems with asserts and error messaging.

1996-05-28  James Gallagher  <jgallagher@opendap.org>

	Fixed verbose arguments.

	Removed code that read from the stream after the das/dds parser built the internal object (since there was nothing in that stream after the parse geturl would always crash).

1996-05-22  James Gallagher  <jgallagher@opendap.org>

	First version. Built to test the new WWW code in the class Connect.

	Merged files from the old netio directory into the dap directory. Removed the errmsg library from the software.

1996-05-21  James Gallagher  <jgallagher@opendap.org>

	Removed files associated with verion 2.14 of the WWW library.

	Changed include netio.h to cgi_util.h.

	Added support for URLs directory to the class. This uses version 4.0D of the WWW library from W3C.

1996-05-16  James Gallagher  <jgallagher@opendap.org>

	Dan's changes for version 2.0. Added a parameter to read that returns an error code so that EOF can be distinguished from an actual error when reading sequences. This *may* be replaced by an error member function in the future.

	Dan's changes for 2.0.

1996-05-14  James Gallagher  <jgallagher@opendap.org>

	These changes have already been checked in once before. However, I corrupted the source repository and restored it from a 5/9/96 backup tape. The previous version's log entry should cover the changes.

	Update for

1996-05-06  James Gallagher  <jgallagher@opendap.org>

	Added the member functions dimension_start, _stop and _stride to this class. Changed the first argument of add_constraint from Pix &p to Pix p (the member function does not change its argument).

	Added dimension_start, _stop and _stride member functions to this class. Changed the first argument of add_constraint from Pix &p to Pix p (the member function does not change the Pix).

	Replaced calls to atof and atoi with calls to strtol and strtod.

	Replaced calls to atoi with calls to strtol.

1996-05-03  James Gallagher  <jgallagher@opendap.org>

	Fixed a bug where Float attributes with the value 0.0 were considered `bad values'.

1996-04-05  James Gallagher  <jgallagher@opendap.org>

	Misc Changes for release 2.0.1 of the core software - for developers.

	Re: XDR_INT and XDR_FLOAT; Moved cast of xdr_int, long, float and double from here to the places where the functions are passed as parameters. This fixes the bug that the return values of these functions were being cast to an incompatible type where they were used.

1996-04-04  James Gallagher  <jgallagher@opendap.org>

	Merged changes from version 1.1.1.

	latest

	Compiled with g++ -Wall and fixed various warnings.

	Merged changes from version 1.1.1. Eliminated the static global CTOR.

	Created.

	Merged changes from version 1.1.1.

	Merged changes from version 1.1.1. Fixed bug in send() - wrong number of arguments to serialize.

	Merged changes from version 1.1.1.

	Merged changes from version 1.1.1. Removed unneeded include files.

	Merged changes from version 1.1.1.

	Merged changes from version 1.1.1. Added a fix for the expr.h header which caused compilation problems on the Dec Alpha.

	Merged changes from version 1.1.1. Fixed a bug in serialize() which caused the sequence serialization to end when the current CE first evaluated to false

	Merged changes from version 1.1.1.

	Fixed comment headers.

	Merged changes from version 1.1.1.

	Merged changes from version 1.1.1.

	Merged recent changes from version 1.1.1 (including changes for the Type enum which caused a problem on the SGI).

1996-03-05  James Gallagher  <jgallagher@opendap.org>

	Addedconst to the char * function definitions.

	Added const to char * parameters and function prototypes.

	Added const to function prototypes.

	*** empty log message ***

	Fixed problems with variable scoping in for and switch statements.

	Relaced <limits.h> with "dods-limits.h".

	Fixed Errors in comments.

	Fixed bugs in the print_array software. Fixed the ctor and related CE member functions (so that projections work).

	Replaced <limits.h> with "dods-limits.h".

	Added ops member function.

	Added ce_eval to serailize member function. Added ops member function.

	Fixed serialize so that expunge() is always called when the member function finishes and FLUSH is true. Added ops member function and byte_ops interface function.

	Added ce_eval to serailize member function. Added ops member function and byte_ops interface function.

	Moved many of the DDS member functions into the subclasses clause and function. Also, because the rvalue and func_rvalue classes (defined in expr.h ane expr.cc) were expanded, most of the evaluation software has been removed. Unnecessary accessor member functions have been removed since clause and function now have their own ctors.

	Added the clause and function subclasses. Clause is used to hold a single clause of the current CE. Clause has ctors, a dtor (which is currently broken) and member function used to get the boolean value of the clause. Function is used to hold a single pointer to either a function returning a boolean or a BaseType *. The DDS class contains a list of clauses and a list of functions.

	Added ce_eval to serailize member function. Fixed serialize so that expunge() is always called when the member function finishes and FLUSH is true. Added ops member function and double_ops function.

	Added ce_eval to serailize member function. Added ops member function and float_op function.

	Fixed serialize bug where Maps might not be sent. Added ce_eval to serailize member function.

	Added ce_eval to serailize member function.

	Added ce_eval to serailize member function. Added the ops member function and int_ops function.

	Added ce_eval to serailize member function. Added the ops member function.

	Added -E flag to CFLAGS abd -b to depend.

	Added expression scanning and parsing targets.

	Added ce_eval to serailize member function.

	Added ce_eval to serailize member function. Added relational operators (the ops member function and string_ops function).

	Added ce_eval to serailize member function. Replaced <limits.h> with "dods-limits.h".

	Added ce_eval to serailize member function. Added debugging information to _duplicate member function.

	Added ce_eval to serailize member function.

1996-03-04  James Gallagher  <jgallagher@opendap.org>

	Fixed Comments.

	Fixed comments.

	Added to the Vector dtor (now the BaseType * vector is properly deleted. Created the vec_resize() member function. Modified serialize() member function so that the ce_eval flag is used.

	Added ce_eval parameter to serialize() member function. Added vec_resize() member function to class.

	Latest.

	Added _DEBUG_H to prevent multiple definition messages.

	Fixed tests of constrained tranmission so CEs with spaces will be read properly. Added new option so that a CE may be given on the command line.

1996-03-01  James Gallagher  <jgallagher@opendap.org>

	Added to the value typedef to support the complete STL syntax. Added support for the rvalue and btp_func_value classes.

	Fixed comments. Fixed a bug in store_str(); leading and trailing double quotes are now stripped from strings.

	Added support for the complete CE spec.

	*** empty log message ***

	Fixed problems with case labels and local variables.

1996-02-05  James Gallagher  <jgallagher@opendap.org>

	Added dods-limits.h to list of header files that are installed in the DODS_ROOT/include directory.

	Added. Built using the SunOS 4.1.3 limits.h file.

1996-02-03  James Gallagher  <jgallagher@opendap.org>

	Added.

1996-02-01  James Gallagher  <jgallagher@opendap.org>

	Merge changes for DODS-1.1.0 into DODS-2.x

	Merged changes between DODS-1.1 and DODS 2.x.

	Fixed save of curent makefile to backup file; replaced `makefile' with ${makefile}.

	Added list of DDSs and constraint expressions that produced them. Added mfuncs to manage DDS/CE list.

	Added mfuncs to maintain a list of DDSs and the constraint expressions that produced them. Added code in request_data to strip the incoming DDS from a data document. Fixed up bogus comments.

	Added support for lists as operands in constraint expressions.

1996-01-31  James Gallagher  <jgallagher@opendap.org>

	Added to repository.

1995-12-08  James Gallagher  <jgallagher@opendap.org>

	Added changes so that relational operators will work properly for all the datatypes (including Sequences). The relational ops are evaluated in DDS::eval_constraint() after being parsed by DDS::parse_constraint().

1995-12-06  James Gallagher  <jgallagher@opendap.org>

	Removed `List List' variables.

	Added `constrained' flag to print_decl. Removed third parameter of read. Modified print_decl() to print only those parts of a dataset that are selected when `constrained' is true.

	var(): now returns null for anything that does not define its own version. print_decl(): uses `constrained' flag.

	Changed read() from three parameters to two. Added constrained flag to print_decl(). Removed store_val() and read_val() (use buf2val() and val2buf() instead).

	Added reset_constraint(), clear_constraint() and add_constraint() to manage the new constraint-related members (in struct dimension). Fixed variour member functions to return information about sizes, ... correctly both before and after constraints are set.

	Added members to record information about array index constraints. Added mfuns to access/set those members. Changed read from three to two arguments.

	Changed read() from three to two parameters. Removed store_val() and read_val() (use buf2val() and val2buf()).

	Added print_constrained(): Prints a constrained DDS. Added eval_constraint(): Evaluates a constraint expression in the environment of the current DDS. Added send(): combines reading, serailizing and constraint evaluation. Added mark*(): used to mark variables as part of the current projection. Fixed some of the parse() and print() mfuncs to take uniform parameter types (ostream and FILE *). Fixed the constructors to work with const objects.

	Added print_constrained(): prints only those parts of the DDS that satisfy the constraint expression (projection + array selection). Added eval_constraint(): given the text of a constraint expression, evaluate it in the environment of the current DDS. Added mark*(): add the named variables to the current projection. Added send(): combines many functions like reading and serializing variables with constraint evaluation.

	Added dependencies for the CE objects modules.

	Changes read() member function from three arguments to two.

	Modified print_decl() so that the declaration is printed only if the variable is selected.

	Changed the var() and print_decl() mfuncs. var() now takes an index and returns a pointer to the BaseType object with the correct value. print_decl() takes a new flag - constrained - which causes only those dimensions selected by the current constraint expression to be printed

	Added definition of YYSTYPE.

	See dds.y

	Changed grammar so that List List ... <type> is no longer possible. This fixed some hard problems in the serailize/deserailize mfuncs.

	Added options for testing the constraint evaluator software. Added functions which test the constraint evaluator. Added function that simulates te complete client-server conversation which causes a variable to be sent after the evaluation of a CE. This manages multiple DDSs just as a real client would. This code is different than the simpler code run by evaluate_dds().

	Because the %union{} changed, the return types of some of the rules also changed. Returns integer codes for relops. Returns a tagged union for most other values.

	Added array constraints to the parser. Added functions for the actions of those new rules. Changed/added rule's return types. Changed the types in the %union {}.

	See das.lex

	See dds.lex

	See expr.lex

	Added text_to_temp(). This copies the given String to a temporary file and returns a FILE * to that file. The file is unlinked, so one the FILE * is closed, it is removed from the file system.

	Added forward decalration of text_to_temp();

1995-11-22  James Gallagher  <jgallagher@opendap.org>

	Modified so that the Vector class is now the parent class.

	Created.

1995-11-16  James Gallagher  <jgallagher@opendap.org>

	Added so that release-1-0-patches tag can be a branch.

1995-10-31  James Gallagher  <jgallagher@opendap.org>

	Added to managed sources.

1995-10-23  James Gallagher  <jgallagher@opendap.org>

	Added.

	Modified...

	Added _send_p and _read_p fields (and their accessors) along with the virtual mfuncs set_send_p() and set_read_p().

	Added targets for expr-test and the expr parser & scanner.

	Added (so that people may build the sources without Flex and Bison).

	Fixed scanner to use the new definition of YYSTYPE.

	Added includes for various classes. Aded rules, actions and functions for evaluation of projections. Changed the value of YYSTYPE so that bison's %union feature is used - rules now return several different types.

	Fixed scanner display code to match current scanner. Added code to test simple evaluator. Fixed type declarations (YYSTYPE, ...).

	Fixed cast of out_tmp in xdr_str().

	Latest.

	Removed code enclosed in #ifdef NEVER ... #endif

	Modified some rules so that they use the functions defined in parser_util.cc instead of local definitions.

	Added Log and RCSID.

	Added RCSID.

	Removed code that was NEVER'd. Changed some rules so that they call functions in parser_util.cc .

	Removed code that was NEVER'd or simply not used.

1995-10-17  James Gallagher  <jgallagher@opendap.org>

	Added *.tab.h files to dependencies for das-test, dds-test and expr-test.

1995-10-12  James Gallagher  <jgallagher@opendap.org>

	First version. Incorporates Glenn's suggestions.

	Scanner. Incorporates Glenn's suggestions.

	First version. Runs scanner and parser.

1995-09-13  James Gallagher  <jgallagher@opendap.org>

	Added to src/dap in keeping with the plan to store all include files in src dirs and `build' the include directory during `make depend' from those inlcudes.

1995-09-05  James Gallagher  <jgallagher@opendap.org>

	Fixed a bug in check_float where `=' was used where `==' should have been.

1995-08-25  James Gallagher  <jgallagher@opendap.org>

	Removed code enclosed in #ifdef NEVER #endif.

1995-08-22  James Gallagher  <jgallagher@opendap.org>

	*** empty log message ***

	Fixed the read() member function so that it works correctly for arrays/lists of Structure, ... types.

	Updated to use the newer member functions.

	xdr_str() now takes a String & instead of a String ** for arg 2.

	Uses new member functions. Added copyright notice. Switched from String to enum type representation.

	Added copyright notice. Fixed some bogus comments.

	Uses the new Type enum.

	Fixed check targets.

	Now uses newer function names. Uses the new xdr_str() function in util.cc

	Changed old, deprecated member functions to new ones. Switched from String representation of type to enum.

	Changed from old mfuncs to new(er) ones.

	Added copyright notice.

	Switched from String representation of data type to Type enum. Added type_name() member function so that it is simple to get the string representation of a variable's type. Changed the name of read_val/store_val to buf2val/val2buf.

	Removed deprecated member functions. Changed read_val/Store_val to buf2val/val2buf.

	Removed card() member function. Removed old, deprecated member functions. Changed the names of read_val and store_val to buf2val and val2buf.

	Removed DBMALLOC code. Added set_vec/vec mfuncs so that non-Array software can access the BaseType * vector. Changed names read_val and store_val to buf2val and val2buf. The old names remain. removed the card member function: used the new _type enum with a switch in its place.

1995-07-11  James Gallagher  <jgallagher@opendap.org>

	Updated for distribution with release-1-0-patches.

	Added to release-1-0-patches.

1995-07-09  James Gallagher  <jgallagher@opendap.org>

	Added copyright notice.

	Fixed date in copyright (it now reads `Copyright 1995 ...').

	Added copyright.

	Added to managed sources so that flex/bison are not required (of course if you want to modify the scanner/parser you will need those tools).

1995-07-08  James Gallagher  <jgallagher@opendap.org>

	Removed declaration of yywrap().

	Removed old code. Removed unnecessary declaration of dasparse().

	Latest.

	Edited comments. Removed unnecessary declarations.

	Added extern keyword for the external declarations of dasparse and dasrestart.

1995-06-28  Dan Holloway  <dholloway@opendap.org>

	Modifed XDR_type definitions to explicitly cast to (xdrproc_t), resolving problem associated with <rpc/xdr.h> in OSF 3.X.

	Modified constructor to explicitly cast return type to xdrproc_t, resolves problem associated with <rpc/xdr.h> under OSF 3.X.

1995-06-27  James Gallagher  <jgallagher@opendap.org>

	The mfuncs request_{das,dds,dods} accept a parameter which is appended to the URL and used by the data server CGI to select which filter program is run to handle a particular request. I changed the parameter name from cgi to ext to better represent what was going on (after getting confused several times myself).

	Modified the cgi-util-test code so that it correctly uses name_path(); the pointer returned by that function must be delteted.

1995-06-22  James Gallagher  <jgallagher@opendap.org>

	Modified confogure/Makefile to handle prefix and DODS_ROOT properly.

	Updated for the first release of DODS.

1995-06-17  James Gallagher  <jgallagher@opendap.org>

	Removed extraneous debugging code.

	Corrected depend.sh (was wrongly named depend.in).

	Updated configure to use depend.sh

	Added -I../dap to INCS so that the compile of this directory will not depend on the installation of ../dap.

1995-06-16  James Gallagher  <jgallagher@opendap.org>

	Changed from the newer getopts (newer on sun at least) to the older getopt for compatibility with Alphas.

1995-06-12  James Gallagher  <jgallagher@opendap.org>

	Changed name. Added ID token for CVS.

1995-06-01  James Gallagher  <jgallagher@opendap.org>

	Removed old code.

1995-05-30  James Gallagher  <jgallagher@opendap.org>

	Removed PostData from NetExecute() and NetConnect9) prototypes.

	Modified the request_data member function so that it accepts the variable in addition to the existing arguments.

	Added const to ErrMsgT prototype.

1995-05-22  James Gallagher  <jgallagher@opendap.org>

	Removed a paramter from the REQUEST_DATA member function: POST is not needed since we no longer use the post mechanism.

	Changed the usage of URLs: we now use straight URLs; no POSTs and no internal parsing of the URL. To select different documents from a DODS server an extension is appended to the URL.

	Added #include "config_netio.h" Removed old code.

1995-05-11  James Gallagher  <jgallagher@opendap.org>

	Really fixed the check target...

1995-05-10  James Gallagher  <jgallagher@opendap.org>

	Added dependency on libdap++.a for target `check'.

	Removed the header file `Test.h' from the Test*.cc implementation files.

	Failed to change `config.h' to `config_dap.h' in these files.

	Added GNU licenses. Added depend script.

	Changed the name of the configuration header file from `config.h' to `config_dap.h' so that other libraries could have header files which were installed in the DODS include directory without overwriting this one. Each config header should follow the convention config_<name>.h.

1995-04-28  Reza Nekovei  <rnekovei@ieee.org>

	First try at adding constraints capability. Enforce a new size calculated from constraint expression.

1995-04-16  James Gallagher  <jgallagher@opendap.org>

	Removed the `api' field.

	Added code which takes the cgi basename from the URL supplied by the user. Still, the cgi must be in `cgi-bin'.

1995-03-16  James Gallagher  <jgallagher@opendap.org>

	Fixed spaces in variable name printout.

	Minor fixes.

	Modified so that one single library is built, not six.

	Added TRACE_NEW/dbnew checks. This includes a special kluge for the placement new operator.

	Added include config.h to top of includes. Added TRACE_NEW switch dbnew debugging.

	Changed --enable-dbnew so that now it does *not* also include dbmalloc at link time.

	Fixed bugs with read()s new & delete calls.

	This class is now a subclass of Str.

	Added include config.h to top of include list. Added TRACE_NEW switched dbnew includes. Fixed bug in read_val() where **val was passed incorrectly to subordinate read_val() calls.

	Moved include of config.h to top of includes. Added TRACE_NEW switched dbnew debugging includes.

	Added include of config.h before all other includes. Fixed deletes of buffers in read_val(). Added initialization of _buf in ctor.

1995-03-16  Reza Nekovei  <rnekovei@ieee.org>

	Fixed bugs in ErrMsgT and mime type.

1995-03-09  James Gallagher  <jgallagher@opendap.org>

	Modified so that URLs built by this library no longer supply the base name of the CGI. Instead the base name is stripped off the front of the pathname component of the URL supplied by the user. This class append the suffix _das, _dds or _serv when a Connect object is used to get the DAS, DDS or Data (resp).

1995-03-04  James Gallagher  <jgallagher@opendap.org>

	Fixed List so that it will compile - it still has major bugs. Modified Makefile.in so that test cases include List even though List won't work (but at least the test cases will link and run, so long as you don't try to do anything with Lists...

	Added stuff for Vec.

	Added Vec.

	Modified these so that they fit with the changes in the DAP classes.

	Fixed xdr_str so that it works with the new String objects. Added xdr_str_array for use with arrays of String objects.

	Major modifications to the transmission and representation of values: 	Added card() virtual function which is true for classes that 	contain cardinal types (byte, int float, string). 	Changed the representation of Str from the C rep to a C++ 	class represenation. 	Chnaged read_val and store_val so that they take and return 	types that are stored by the object (e.g., inthe case of Str 	an URL, read_val returns a C++ String object). 	Modified Array representations so that arrays of card() 	objects are just that - no more storing strings, ... as 	C would store them. 	Arrays of non cardinal types are arrays of the DODS objects (e.g., 	an array of a structure is represented as an array of Structure 	objects).

1995-02-24  James Gallagher  <jgallagher@opendap.org>

	Fixed declaation of set_mime_text() (was ...test()).

	Added DVersion as a global in HTTP.c and netio.h

1995-02-23  James Gallagher  <jgallagher@opendap.org>

	Added declarations of set_mime_text and set_mime_binary.

1995-02-22  Reza Nekovei  <rnekovei@ieee.org>

	Added version number capability using CGI status_line.

1995-02-22  James Gallagher  <jgallagher@opendap.org>

	Added.

	Fixed usage of time functions in ErrMsgT; use ctime instead of localtime and asctime. Fixed TimStr bug in ErrMsgT. Fixed dynamic memory bugs in name_path and fmakeword. Replaced malloc calls with calls to new char[]; C++ code will expect to be able to use delete. Fixed memory overrun error in fmakeword. Fixed potential bug in name_path (when called with null argument). Added assetions.

1995-02-16  James Gallagher  <jgallagher@opendap.org>

	Added _in private member. It is used to keep a copy of the input FILE * so that when the next chunk of data is read in the previous one can be closed. Since the netio library unlinks the tmp file before returning the FILE *, closing it effectively deletes the tmp file.

	Added these tests. See comments in files in parent directory.

	Added these tests. They cover comments, typed attributes and various errrors.

	Fixed bug which caused Byte, ... values which were out of range to be added to the attribute table anyway. Corrected the number of expected shift-reduce conflicts.

1995-02-10  James Gallagher  <jgallagher@opendap.org>

	Modified definition of request_data() so that it takes an additional parameter specifying sync or async behavior.

	Modified request_data() so that it takes an additional (optional) parameter which specifies synchronous (default) of Asynchronous behavior.

1995-02-09  Reza Nekovei  <rnekovei@ieee.org>

	Fixed the request_data to pass arguments. The arguments string is added to the file name before being posted by NetConnect. Default arg. is null.

1995-02-09  James Gallagher  <jgallagher@opendap.org>

	Modified test cases for new comment style.

	Modified test cases for type checking.

	Removed dummy_read.cc Updates das-test.cc so that type checking gets tested.

	Removed xdr_url() since it was just a copy of xdr_str().

	Switched to sh style comments. C and C++ style comments are no longer supported.

	Added type checking.

	Scanner now returns different lexemes for each of the different scalar data types. Comments are now done as for sh; the C and C++ style comments are no longer supported.

	Added new mfuncs to access _name and _type. Made private and protected filed's names start with `_'. Added store_val() as a abstract virtual mfunc.

	Added DBMALLOC to set of flags defined with configure is given the --enable-dbnew switch.

	Modified Test<class>.h and .cc so that they used to new definitions of read_val(). Modified the classes read() so that they are more in line with the class library's intended use in a real subclass set.

	Misc comment edits.

	Added second parameter to dasparse. It is a switch that indicates that the parse went OK. Now the parser will return true even if erros were detected so long as they were recoverable errors.

	Fixed an error where two attributes could be declared with the same name (for the same variable) if they hade different types.

	Added DBMALLOC includes and switch to code which uses malloc/free. Private and protected symbols now start with `_'. Added new accessors for name and type fields of BaseType; the old ones will be removed in a future release. Added the store_val() mfunc. It stores the given value in the object's internal buffer. Made both List and Str handle their values via pointers to memory. Fixed read_val(). Made serialize/deserialize handle all malloc/free calls (even in those cases where xdr initiates the allocation). Fixed print_val().

1995-01-31  James Gallagher  <jgallagher@opendap.org>

	Added declaration of request_data() mfunc in Connect.

	Fixed problems with the return value (status, fp) in request_das, request_dds and request_data. Added declarations for set_xdrin() and set_xdr_out(). Now that NetExecute forks and reads from a child, a temp file is no longer used. I removed that code which created and sebsequently deleted that temp file.

1995-01-19  James Gallagher  <jgallagher@opendap.org>

	Fixed for new class hierarchy.

	Added read_val from dummy_read.cc to the sample set of sub-class implementations. Changed the declaration of readVal in BaseType so that it names the mfunc read_val (to be consistant with the other mfunc names). Removed the unnecessary duplicate declaration of the abstract virtual mfuncs read and (now) read_val from the classes Byte, ... Grid. The declaration in BaseType is sufficient along with the decl and definition in the *.cc,h files which contain the subclasses for Byte, ..., Grid.

	Created as an example of subclassing the class hierarchy rooted at BaseType.

	Added declarations for new utility functions which return pointers to objects in the BaseType hierarchy.

	The parser now uses the new utility functions to create new instances of the variable objects (Byte, ..., Grid). Fixed the number of shift/reduce conflicts expected (now at 60).

	Switched to the utility functions for generating pointers to Int32, ... (from the syntax: `new Int32(...)').

	Fixed LDFLAGS so that the cwd is searched for libs first. Removed `dummy_read.cc' file; use subclassed Byte, ... instead. Added Test<class> dependencies (these are the sample subclasses). Added target for trans-test.

	ptr_duplicate() mfunc is now abstract virtual. Array, ... Grid duplicate mfuncs were modified to take pointers, not referenves.

1995-01-18  Dan Holloway  <dholloway@opendap.org>

	Added member function 'request_data' which makes a data read request to the remote api server and links the object's xdrin file-pointers to the data stream.  This function requires NetConnect which has been defined in the utility function netexec.c

	Declared member function 'readVal', defined in dummy_read.cc

	Defined abstract virtual function 'readVal' which provides access to the object's buf for retrieving data subsequent to deserializing.

	Added external declarations for utility functions, new_xdrstdio and delete_xdrstdio.

1995-01-11  James Gallagher  <jgallagher@opendap.org>

	Added install of config.h to includedir.

	Added to new functions which manage XDR stdio stream pointers. One creates a new xdrstdio pointer associated wit the given FILE * and the other deletes it. The creation function returns the XDR *, so it can be used to initialize a new XDR * (see BaseType.cc).

	Added static XDR pointers to BaseType class and removed the XDR pointers that were class members - now there is only one xdrin and one xdrout for all children of BaseType. Added friend functions to help in setting the FILE * associated with the XDR *s. Removed FILE *in member (but FILE *out was kept as FILE * _out, mfunc expunge()). Changed ctor so that it no longer takes FILE * params.

	Added modifications necessary for BaseType's static XDR pointers. This was mostly a name change from xdrin/out to _xdrin/out. Removed the two FILE pointers from ctors, since those are now set with functions which are friends of BaseType.

1995-01-10  James Gallagher  <jgallagher@opendap.org>

	Created new `common code' library for the net I/O stuff.

1994-12-21  Reza Nekovei  <rnekovei@ieee.org>

	Changed the default type to String (from Str) to match DDS parser.

	Made save_str static to avoid linking conflict.

1994-12-21  James Gallagher  <jgallagher@opendap.org>

	Added these to the testsuite.

	Fixed so that tests for the parser work (scanner tests are still broken).

	Added these to test for errors and new `named dimension' feature.

	Changed CTStack in dds dependencies to BTStack.

	Repaired damage done to NEVER's definition in previous version.

	Undid 'fix' to NEVER definition - it was wrong.

1994-12-20  Reza Nekovei  <rnekovei@ieee.org>

	Added overloading functions for get_attr_num().

1994-12-19  James Gallagher  <jgallagher@opendap.org>

	Minor modifications to the print_val mfunc.

1994-12-16  James Gallagher  <jgallagher@opendap.org>

	Added cases for new tokens in dds.lex/dds.y.

	Added -L switches to LDFLAGS so that Map, Stack and Plex are searched *before* DODSROOT/lib. Removed references to CtorType. Added dependencies for dummy_read

	Switched from a CtorType stack to BaseType stack. Fixed an error in save_str() (see das.y). Fixed a bug in the use of append_dim - it was called with $4 when it should have been called with $5.

	Fixed NEVER so that it is anything not caught by the earlier rules.

	Changed NEVER to be anything not caught by the earlier rules. Fixed // style comments so that // ... <eof> works.

	Fixed a bug in save_str() where the global NAME was used instead of the parameter DST.

	Added the mfuncs var() and add_var(). These are used by ctor types. They need to be defined here so that access to them via BaseType * will work (actually, so the code will compile). These versions just print error messages. See Array.h, ... for examples of the real mfuncs.

	Added mfuncs var() and add_var() to BaseType. These print an error message when called with a simple BaseType (Int32, ...). Classes like Array use them and provide their own definitions.

1994-12-16  Dan Holloway  <dholloway@opendap.org>

	Fixed serialize() and deserialize() for arrays of strings.

	Removed inheritance from class CtorType, now directly inherits from class BaseType.

	Modified Structure class removing inheritance from class CtorType and directly inheriting from class BaseType to alloc calling BaseType's constructor directly.

1994-12-15  Dan Holloway  <dholloway@opendap.org>

	Added print_val() member function.

	Modified class Sequence inheritance hierarchy, now directly inherits from class BaseType.

	Modified Sequence class to directly inherit from class BaseType Modified constructors to reflect new inheritance.

1994-12-14  Dan Holloway  <dholloway@opendap.org>

	Fixed deserialize() to return correct size count. Fixed check_semantics() to use new Array dimension member functions.

	Added dimensions() member function definition. Removed alloc_buf() and free_buf() definitions.

	Added dimensions() member function to return number of dimensions contained in the array. Removed alloc_buf() and free_buf() member functions and placed them in util.cc.

1994-12-14  James Gallagher  <jgallagher@opendap.org>

	Added mfunc len(). Replaced size() with a mfunc that returns the size of a pointer to a string (this simplifies Structure, ...).

	Changed definition of size() so that it returns the number of bytes in the string.

1994-12-14  Dan Holloway  <dholloway@opendap.org>

	Removed dim() member function.

	Modified serialize() and deserialize() member functions to special case BaseTypes 'Str' and 'Url'.  These special cases do not call xdr_array, but iterate through the arrays using calls to XDR_STR. Modified print_val() member function to handle arrays of different BaseTypes. Modified append_dim() member function for initializing its dimension components. Removed dim() member function.

1994-12-12  James Gallagher  <jgallagher@opendap.org>

	Lastest...

	Fixed struct dimensions.

	Added enum Part - used to be part of CtorType.

1994-12-12  Dan Holloway  <dholloway@opendap.org>

	Modified Array class definition removing inheritance from class CtorType and to inherit directly from class BaseType.  Removed member function dimensions().

	Modified Array Class to be directly derived from class BaseType removing class CtorType in the process.  Added member functions add_var() and var() to class.

1994-12-09  James Gallagher  <jgallagher@opendap.org>

	Modified for new unix.exp.

	Modified for scanner (interactive) testing. That still does not work.

	Corrected.

	Added to array: so that an array decl can contain: an int or an id=int. This is for the named dimensions (see Array.{cc,h}).

	Added `=' to the set of recognized lexemes. Added `[' and `]' to the set of rejected characters.

	Fixed scanner's treatment of `//' comments which end with an EOF (instead of a \n).

	Added <unistd.h> to the include files.

	Added support for named array dimensions.

	Used the XDR_INT32 and XDR_FLOAT64 symbols defined in config.h.

1994-12-08  James Gallagher  <jgallagher@opendap.org>

	Modified the NEVER regexp so that `[' and `]' are not allowed in the input stream. Previously they were not recognized but also not reported as errors.

1994-12-08  Dan Holloway  <dholloway@opendap.org>

	Added data transmission member functions serialize() and deserialize() Modified size() member function to return cumulative size of all members. Fixed the duplicate() member function to correctly access the data members of the sequence being duplicated.

	Modified size() member to return cumulative size of all dimensions given the variable basetype. Modified serialize() and deserialize() member functions for data transmission using XDR.

1994-12-07  James Gallagher  <jgallagher@opendap.org>

	Added/modified files to test new attribute vector code. Removed tests where ID was followed by a `/' w/o space - since `/' is now a legitamite character in an ID ID/* is not ID followed by a comment but the ID `ID/' followed by the illegal char `*'.

	Added config.h Changed xdr_long to XDR_LONG (defined in config.h, based on the target machine.

	Removed config

	Added code to test the scanner - it is selected using the -s option.

	Added a new rule (var) and modified attr_val to handle attribute vectors. Each element in the vector is seaprated by a comma. Replaces some old instrumentation code with newer code using the DGB macros.

	Added `,' (comma) to set of single character tokens recognized by the scanner. Comma is the separator for elements in attribute vectors.

	Updated files to work with autoconf 2.1.

	Corrected errors.

	Modified to take advantage of autoconf 2.1 features. Added Plex to the list of subdirectories to be `made'.

	Added support for vectors of attributes (using XPlex from libg++).

1994-12-05  James Gallagher  <jgallagher@opendap.org>

	added.

1994-11-29  James Gallagher  <jgallagher@opendap.org>

	Added xdr_str and xdr_url functions (C linkage). These provide a way for the Str and Url classes to en/decode strings (Urls are effectively strings) with only two parameters. Thus the Array ad List classes might actually work as planned.

	Added mfunc for data transmission. Uses special xdr function for serialization and xdr_coder. Removed `type' parameter from ctor. Added FILE *in and *out to ctor parameter list.

	Added functions for data transmission. Added boolean parameter to serialize which, when true, causes the output buffer to be flushed. The default value is false. Added FILE *in and *out parameters to the ctor. The default values are stdin/out. Removed the `type' parameter from the ctor.

	Added mfuncs for data transmission. Made the xdr_coder function pointer xdr_bytes() while (de)serialize() uses xdr_char(). Removed `type' from ctor parameter list. Added FILE *in and *out to parameter list (they default to stdin/out).

	Added FILE * input and output buffers. All data set and all data received passes through these buffers. This simplifies testing and makes using the toolkit with files a little easier. Added xdrin and xdrout members (both are XDR *). These are the source and sink for xdr data. Modified ctor and duplicate() to correctly handle xdrin/out. Added expunge() which flushes the output buffer.

	Added mroe support for data transmission; BaseType now contains enough functionality to support transmission of all the simple datatypes. Added in and out FILE *. Added boolean flag in serialize which will cause the output buffer to be flushed when data is serialized. Added xdr_coder for serialization of arrays and lists.

1994-11-22  Dan Holloway  <dholloway@opendap.org>

	11/22/94 Modified dimension() to return total number of elements.          Modified deserialize to return (bool)status = num | 0.

1994-11-22  James Gallagher  <jgallagher@opendap.org>

	Added code for data transmission to parts of the type hierarchy. Not complete yet. Fixed erros in type hierarchy headers (typos, incorrect comments, ...).

1994-11-10  James Gallagher  <jgallagher@opendap.org>

	In the past it was possible to have a null file correctly parse as a DAS or DDS. However, now that is not possible. It is possible to have a file that contains no variables parse, but the keyword `Attribute' or `Dataset' *must* be present. This was changed so that errors from the CGIs could be detected (since they return nothing in the case of a error).

	Added `/' to the set of characters that make up an identifier.

1994-11-02  Reza Nekovei  <rnekovei@ieee.org>

	Added two overloading for function parse to make it consistent with DAS class.

	Changed the default type to match the dds parser.

1994-10-26  James Gallagher  <jgallagher@opendap.org>

	Temporary fix for CtorType.{cc,o} -- commented these out of the makefile. When the complete data trasnmission code is in the archive (and that code is needed) add them back in the Makefile.

	Added

1994-10-25  James Gallagher  <jgallagher@opendap.org>

	Lots of new features, including --enable-dbnew and --enable-debug=<level>.

	Fixed to use new configure.in/configure. Now CXX, ... are not coded in this file but get their values from the configure script. Defines moved to config.h header. Remove site.exp -- it is simpler to put the options on the command line. Fixed header install actions -- they now use bourne shell for do ... done.

	Describes contents, how to build API including the debugging options.

1994-10-17  James Gallagher  <jgallagher@opendap.org>

	Fixed error in char * [] allocation. Added debugging code.

	Added test_class code.

	Added debugging statements.

	Added depends for dds.tab.o and das.tab.o.

	Added copy ctor, dtor, duplicate, operator=. Added var() for const cahr * (to avoid confusion between char * and Pix (which is void *)). Switched to errmsg library. Added formatting to print().

	Removed unnecessary print functions.

	Added code to print_decl so that variable declarations are pretty printed. Added private mfunc duplicate(). Added ptr_duplicate(). Added Copy ctor, dtor and operator=.

	Added ptr_duplicate virtual mfunc. Child classes can also define this to copy parts that BaseType does not have (and allocate correctly sized pointers. Removed protected mfunc error() -- use errmsg library instead. Added formatted printing of types (works with DDS::print()).

1994-10-13  James Gallagher  <jgallagher@opendap.org>

	dasrestart was incorrectly declared as void dasrestart(...) in DAS.cc. This caused the alpha to say `Could not read from file' whenever dasrestart was called (which happens whenever a new file is read). Fixed the declaration and removed the test on the (phantom) return value.

	Added -p to interface: run the parser. This option makes das-test behave as it used to, with the following exceptions: 1) if `none' is given as a filename, then the associated actions (reading or writing) is not performed. This lets you test the ctors and dtors w/o anything else getting in the way. 2) - means stdin or stdout Also added AttrTable test code that gets run if -p is not given.

	Now works with the new das-test (but only when das-test is compiled w/o DEBUG and TRACE_NEW).

	Modified the debug stuff (DEBUG, TRACE_NEW, ...). Added a tags target.

	Added compile-time switched instrumentation. Removed the three definitions of DAS::print(). Added DAS::print(ostream &os = cout) -- this is the only function for printing the in-memory DAS.

	Added a new version of append_attr (it takes (const char *)s) and changed the types of the old version to (const String &).

	Added a new version of append_attr that takes (const char *)s and modified the version that takes strings to take (const String &).

1994-10-05  James Gallagher  <jgallagher@opendap.org>

	Added TYPE to each of the DAS test files. The `expect' files correcly check for that in the output.

	Added TYPE to each of the DAS test files.

	Added code to print the return value of the DAS::parse() mfunc.

	Modified the DAS grammar so that TYPE tokens (from the scanner) were parsed correcly and added to the new AttrTable class. Changed the code used to add entries based on changes to AttrTable. Consoladated error reporting code.

	Changed from Map to DLList for representation of the attribute table. Added TYPE to the attribute table.

	Added `TYPE' to the grammar for the DAS. See Also: DAS.{cc,h} which were modified to handle TYPE.

	Added BaseType.h and CtorType.h tot eh set of *.h files installed in $(includedir).

	Changed internal representation of the attribute table from a Map to a DLList<>.

	Fixed bug in the parse function(s): the bison generated parser returns 1 on error, 0 on success, but parse() was not checking for this. Instead it returned the value of bison's parser function. Changed types of `status' in print and parser functions from int to bool.

1994-09-27  James Gallagher  <jgallagher@opendap.org>

	Changed expected outcomes to match new das.print() mfunc.

	Removed the Space.cc stuff - it broke dds-test on the alpha.

	Modified to use the new DAS class and new AttrTable class.

	das-test no longer uses Space.cc for new/delete debugging - that system did not work on alphas).

	Changed the implementation of the class DAS from one which inherited from DASVHMap to one which contains an instance of DASVHMap. Added mfuncs to set/access the new instance variable.

	Makefile now builds the DAS and DDS libraries (as well as the test drivers). Installed libraries now have their headers copied to DODS_ROOT/include.

	Changed definition of the class AttrTable; it no longer inherits from AttrVHMap, instead it uses that class (contains a member that is an instance of AttrVHMap). Added mfuncs to AttrTable so that the new member could be set/accessed.

1994-09-23  James Gallagher  <jgallagher@opendap.org>

	Automatic makefile generator.

	Added test cases tot eh DDS testsuite.

	Utility functions used by DAS and DDS.

	Added code to build in-memory DDS during parse.

	Removed local print calls and replaced it with a call to DDS::print().

	Fixed some errors in comments.

	Added two library targets (map and stack). Removed das-test2.

	Added mfunc check_semantics(). Added sanity checking on the variable list (is it empty?).

	Added mfunc check_semantics(). Replaced print mfunc stub with real code. Fixed some errors in comments.

	Fixed broken header. Agian.

	Fixed errors in comments.

	Added mfunc check_semantics(). Moved definition of dtor to BaseType.cc.

	Added check_semantics mfunc. Added sanity checking for access to shape list (is it empty?). Added cvs log listing to Array.cc.

1994-09-15  James Gallagher  <jgallagher@opendap.org>

	Modified dds.y so that it can parse all the DDS types. Still no error checking beyond what bison gives you.

	Added commentary to das.y -- how does it work.

	Added many classes to the BaseType hierarchy - the complete set of types described in the DODS API design documet is not represented. The parser can parse DDS files. Fixed many small problems with BaseType. Added CtorType.

1994-09-09  James Gallagher  <jgallagher@opendap.org>

	Test software for the DDS class.

	Changed the include name to correspond with the class name changes (Var* to DAS*).

	Fixed namign of the test (was given as $srcdir/$test_name, should have been $srcdir$test_name).

	Added test that prints the result of running the test if verbose >= 1.

	Added code to test the stdin, FILE * and file descriptor functions of class DAS.

	Added testing targets. Added DDS stuff.

	Child class of BaseType -- used in the future to hold specific serialization information for integers. Should this be a class that uses BaseType?

	Changed the base name of this class's parents from `Var' to DAS. Added print() and removed operator<< (see the comments in AttrTable). Added overloaded versions of print() and parse(). They can be called using nothing (which defaults to std{in,out}), with a file descriptor, with a FILE *, or with a String givin a file name.

	Class for base type variables. Int32, ... inherit from this class.

	Removed operator<< and added print() since I have no good way to define operator>>. It seems best to define all operators from a set (like <<, >>) or none at all. Since parse() is the input mfunc, it seems that output should be a mfunc too.

1994-09-08  James Gallagher  <jgallagher@opendap.org>

	DDS Class test driver and parser and scanner.

	First version of the Dataset descriptor class.

1994-08-29  James Gallagher  <jgallagher@opendap.org>

	Test procedures for the DAS parser, scanner and C++ class.

	`Unix' target file for dejagnu test procedures.

	Input files used by the test procedures.

	Fixed a problem with quoted strings - previously quotes were stripped when scanned, but this caused problems when they were printed because the printed string could not be recanned. In addition, escape characters are no longer removed during scanning. The functions that performed these operations are still in the scanner, but their calls have been commented out.

1994-08-05  James Gallagher  <jgallagher@opendap.org>

	Init files for autoconf. Use these to generate Makefiles for different platforms.

1994-08-02  James Gallagher  <jgallagher@opendap.org>

	Changes operator<< so that it writes a parsable version of the attribute table.

	Fixed `$Log$' comments and rcsid[] variables (syntax errors due to // comments caused compilation failures. das.tab.c and .h are commited now as well.

	Added C++ statements to grammar to generate a table of parsed attributes. Added a single parameter to dasparse - an object of class DAS. Solved strange `string accumulation' bug with $1 %2 ... by copying token's semantic values to temps using mid rule actions. Added code to create new attribute tables as each variable is parsed (unless a table has already been allocated, in which case that one is used).

	Fixed error in illegal character message. Arrgh!

	Changed communication mechanism from C++ class back to daslval. Auxiliary functions now pass yytext,... instead of using globals. Fixed scanning errors. Scanner now sets yy_init on successful termination. Scanner has improved error reporting - particularly in the unterminated comment and quote cases. Better rejection of illegal characters.

	Implemetation of the DAS class. This class is a container that maps String objects which name variables to AttrTablePtr objects.

	This Class is a container that maps Strings onto AttrTable pointers. It inherits from VarVHMap.

	The implementation of AttrTable. This file defined ostream &operator<< and a static class variable String empty (it is initialized to "").

	Class which inherits from AttrVHMap. This is the class that is contained by the DAS mapping class. In addition to the methods defined by the AttrVHMap class, this class defines operator<<. It also declares a static class variable String empty which is defined in AttrTable.cc to be "". Also in this file is a typedef for a pointer to an AttrTable (that is the type actually held by the DAS container class).

	Test driver for DAS (and AttrTable) classes.

1994-07-25  James Gallagher  <jgallagher@opendap.org>

	First attempt at the DAS parsing software.
