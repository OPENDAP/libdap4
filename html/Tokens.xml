<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deprecated</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>deprecated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>strict</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group__strict.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_strict</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>group__strict.html</Path>
    <Anchor>ga030fddcb0529be0999faffd9c0fb7e16</Anchor>
    <Abstract>Get the setting of the &amp;#39;strict&amp;#39; mode. </Abstract>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_strict</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>group__strict.html</Path>
    <Anchor>gad0fb36451a4348afb0a294f709c905f2</Anchor>
    <Abstract>Set the &amp;#39;strict&amp;#39; mode to true or false. </Abstract>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_type</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group__check__type.html</Path>
    <Abstract>Can the given string be converted into a byte, ...? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_byte</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>group__check__type.html</Path>
    <Anchor>ga6159f969729b3625cfb42b97b76a29b6</Anchor>
    <Abstract>Is the value a valid byte? </Abstract>
    <DeclaredIn>parser-util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>group__check__type.html</Path>
    <Anchor>ga0e96bac2251d066910b2647830b6959c</Anchor>
    <Abstract>Is the value a valid URL? </Abstract>
    <DeclaredIn>parser-util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group__check.html</Path>
    <Abstract>Like &amp;#39;test and set,&amp;#39; check a type and set a value in one go. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_type</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group__get__type.html</Path>
    <Abstract>Convert the string to a value; throw if the conversion fails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binary_function</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>binary_function</Scope>
    </TokenIdentifier>
    <Path>classbinary__function.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Crc32</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Crc32</Scope>
    </TokenIdentifier>
    <Path>classCrc32.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AddData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Crc32</Scope>
    </TokenIdentifier>
    <Path>classCrc32.html</Path>
    <Anchor>a79e430ee82b3cec76543f345f2361784</Anchor>
    <DeclaredIn>crc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Crc32</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Crc32</Scope>
    </TokenIdentifier>
    <Path>classCrc32.html</Path>
    <Anchor>ae9fe98ed803007de13e63c03e80fe322</Anchor>
    <DeclaredIn>crc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetCrc32</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Crc32</Scope>
    </TokenIdentifier>
    <Path>classCrc32.html</Path>
    <Anchor>a386ca030f3214b8d3a9560e09478ca66</Anchor>
    <DeclaredIn>crc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Crc32</Scope>
    </TokenIdentifier>
    <Path>classCrc32.html</Path>
    <Anchor>a3722922b4cd2902eff207e78d03e66c2</Anchor>
    <DeclaredIn>crc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ceFlexLexer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>d4_ceFlexLexer</Scope>
    </TokenIdentifier>
    <Path>classd4__ceFlexLexer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_functionFlexLexer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>d4_functionFlexLexer</Scope>
    </TokenIdentifier>
    <Path>classd4__functionFlexLexer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetOpt</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>GetOpt</Scope>
    </TokenIdentifier>
    <Path>classGetOpt.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>functions::GeoConstraint</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_constraint_to_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a7b61dd0dd08d721764cced64c2b02672</Anchor>
    <Abstract>Once the bounding box is set use this method to apply the constraint. </Abstract>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_bounding_box</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>afdcce3490cf3e4e7c9427d002c9aa1d1</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GeoConstraint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a0aeedfbc40843f3edc332fabc2395de6</Anchor>
    <Abstract>Initialize GeoConstraint. </Abstract>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_lat_lon_maps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a225f1a1ef91e1df9f6a9da4879858725</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>categorize_latitude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>af89805663f0534a8addedaea2f3073cd</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>categorize_notation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a8e57a12e7c30c0a6834759b203470833</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_latitude_indeces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a74db78b6220b59f1f4fb3564d7974754</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_longitude_indeces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>aba588b366dbb024457c89ce33a7ebb38</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lat_lon_dimensions_ok</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>adba123828c5e852139d00e1ca6e92a5b</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reorder_data_longitude_axis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a4dcd6ab2bcfe9f1a31cc22d036525e01</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reorder_longitude_map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a44066d960eb11d1395ea6762e511ad4b</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_longitude_to_neg_pos_notation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a465ae9bfaf84501740e0c90a13f88d17</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_longitude_to_pos_notation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a42facca9c9db0f8d41e41dbae81edc7d</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transpose_vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>aebcb9ed78095f98c047622cd66448466</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>functions::GeoGridFunction</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>functions::GeoGridFunction</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoGridFunction.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canOperateOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoGridFunction</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoGridFunction.html</Path>
    <Anchor>a59fde66559f6222db4c55479a42ec782</Anchor>
    <DeclaredIn>GeoGridFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canOperateOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunction</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunction.html</Path>
    <Anchor>a8a3921a3d3a0ef39e1ee6bdd6011ccaf</Anchor>
    <DeclaredIn>ServerFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunction</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunction.html</Path>
    <Anchor>a3235a206a2933b96360c00d5b021a1e5</Anchor>
    <DeclaredIn>ServerFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>functions::GridFunction</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>functions::GridFunction</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GridFunction.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canOperateOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GridFunction</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GridFunction.html</Path>
    <Anchor>abe8f0692c35c711151d5d81a8e5a308d</Anchor>
    <DeclaredIn>GridFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canOperateOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunction</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunction.html</Path>
    <Anchor>a8a3921a3d3a0ef39e1ee6bdd6011ccaf</Anchor>
    <DeclaredIn>ServerFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunction</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunction.html</Path>
    <Anchor>a3235a206a2933b96360c00d5b021a1e5</Anchor>
    <DeclaredIn>ServerFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>functions::GridGeoConstraint</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>functions::GridGeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GridGeoConstraint.html</Path>
    <DeclaredIn>GridGeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_constraint_to_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GridGeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GridGeoConstraint.html</Path>
    <Anchor>aef185fdc0541881d39d19d6e1fd364d7</Anchor>
    <DeclaredIn>GridGeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_bounding_box</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>afdcce3490cf3e4e7c9427d002c9aa1d1</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GridGeoConstraint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GridGeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GridGeoConstraint.html</Path>
    <Anchor>aea3d88980a9c0500c1c51e877b3347b5</Anchor>
    <Abstract>Initialize GeoConstraint with a Grid. </Abstract>
    <DeclaredIn>GridGeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>categorize_latitude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>af89805663f0534a8addedaea2f3073cd</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>categorize_notation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a8e57a12e7c30c0a6834759b203470833</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_latitude_indeces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a74db78b6220b59f1f4fb3564d7974754</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_longitude_indeces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>aba588b366dbb024457c89ce33a7ebb38</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reorder_data_longitude_axis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a4dcd6ab2bcfe9f1a31cc22d036525e01</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reorder_longitude_map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a44066d960eb11d1395ea6762e511ad4b</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_longitude_to_neg_pos_notation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a465ae9bfaf84501740e0c90a13f88d17</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_longitude_to_pos_notation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>a42facca9c9db0f8d41e41dbae81edc7d</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transpose_vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GeoConstraint</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GeoConstraint.html</Path>
    <Anchor>aebcb9ed78095f98c047622cd66448466</Anchor>
    <DeclaredIn>GeoConstraint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>functions::gse_arg</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>functions::gse_arg</Scope>
    </TokenIdentifier>
    <Path>structfunctions_1_1gse__arg.html</Path>
    <DeclaredIn>gse_parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>functions::GSEClause</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>functions::GSEClause</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GSEClause.html</Path>
    <DeclaredIn>GSEClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GSEClause</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GSEClause.html</Path>
    <Anchor>a7fd18899b9cbab6f866fe21a8330e163</Anchor>
    <DeclaredIn>GSEClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GSEClause</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GSEClause.html</Path>
    <Anchor>a421d3e10992fca87eff85d5baa5a7e74</Anchor>
    <Abstract>Get a pointer to the map variable constrained by this clause. </Abstract>
    <DeclaredIn>GSEClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_map_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GSEClause</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GSEClause.html</Path>
    <Anchor>a1973c47ef5ecc920d7a79ac627cfc335</Anchor>
    <Abstract>Get the name of the map variable constrained by this clause. </Abstract>
    <DeclaredIn>GSEClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GSEClause</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GSEClause.html</Path>
    <Anchor>ad3c0a7c9c9989cdae01e5c106ae18aa8</Anchor>
    <Abstract>Get the starting index of the clause&amp;#39;s map variable as constrained by this clause. </Abstract>
    <DeclaredIn>GSEClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GSEClause</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GSEClause.html</Path>
    <Anchor>a6d2a1d6a8356c627e5280d1fc9bf867c</Anchor>
    <Abstract>Get the stopping index of the clause&amp;#39;s map variable as constrained by this clause. </Abstract>
    <DeclaredIn>GSEClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_map_min_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GSEClause</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GSEClause.html</Path>
    <Anchor>adb2676c9f7409cd092414b5ee6835a8a</Anchor>
    <Abstract>Get the minimum map vector value. </Abstract>
    <DeclaredIn>GSEClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_map_max_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GSEClause</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GSEClause.html</Path>
    <Anchor>abc9a7d7b0ee725eaa7ff0a028d47f607</Anchor>
    <Abstract>Get the maximum map vector value. </Abstract>
    <DeclaredIn>GSEClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GSEClause</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GSEClause.html</Path>
    <Anchor>ae7e84764029f1fb554aa10ceb09aa386</Anchor>
    <Abstract>Set the pointer to the map vector contrained by this clause. </Abstract>
    <DeclaredIn>GSEClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GSEClause</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GSEClause.html</Path>
    <Anchor>ab1ea8b17260adabda8b44e23aad574d3</Anchor>
    <Abstract>Set the starting index. </Abstract>
    <DeclaredIn>GSEClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>functions::GSEClause</Scope>
    </TokenIdentifier>
    <Path>classfunctions_1_1GSEClause.html</Path>
    <Anchor>a5f0309f54e1735acd8d0406f7f54d107</Anchor>
    <Abstract>Set the stopping index. </Abstract>
    <DeclaredIn>GSEClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Abstract>top level DAP object to house generic methods </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseTypeRow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a2282a2360f34712dee8d85da65229a14</Anchor>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4SeqRow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a37b6f78da686ad9fefd03232f7d8c378</Anchor>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4SeqValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>adfc0200c041e26204ad14e51956cefc1</Anchor>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ErrorCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a4d08204a35e99e555cda79022648362f</Anchor>
    <Abstract>An enumerated type for common errors. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SequenceValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a9cf10a1365a3abac18c17e4cc18ebbd2</Anchor>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_space_encoding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a67170660297bc012a29fe03ac7ebd349</Anchor>
    <DeclaredIn>AttrTable.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AttrType_to_String</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a84d1b6bca4eb21023f90f7b4ae6f382b</Anchor>
    <DeclaredIn>AttrTable.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_btp_args</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a928b16257bc714971a2a3c91cb42d882</Anchor>
    <DeclaredIn>RValue.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_byte</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>group__check__type.html</Path>
    <Anchor>ga6159f969729b3625cfb42b97b76a29b6</Anchor>
    <Abstract>Is the value a valid byte? </Abstract>
    <DeclaredIn>parser-util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>group__check__type.html</Path>
    <Anchor>ga0e96bac2251d066910b2647830b6959c</Anchor>
    <Abstract>Is the value a valid URL? </Abstract>
    <DeclaredIn>parser-util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close_temp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a9696b8596e7a5858d494e8a8d7d082c1</Anchor>
    <DeclaredIn>HTTPConnect.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cmp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a786edd1e80b39397432942d12d1f2c2b</Anchor>
    <DeclaredIn>Operators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D2type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a84c3754d6e7ab7deeea26297434b1468</Anchor>
    <Abstract>Returns the type of the class instance as a string. Supports all DAP2 types and not the DAP4-only typ...</Abstract>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4AttributeTypeToString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a8f24f0478f336e494fd6307b32e569c7</Anchor>
    <DeclaredIn>D4Attributes.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4RValueFactory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>ad6f176510a4e6240272e60b3b4a17e77</Anchor>
    <Abstract>Build an appropriate RValue. </Abstract>
    <DeclaredIn>D4RValue.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>aa452631fa64311abbcda885ee07f3876</Anchor>
    <Abstract>Returns the type of the class instance as a string. Supports all DAP4 types and not the DAP2-only typ...</Abstract>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dap_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>affccb78f3a718e01f5fac17b682430d1</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>date_time_str</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>ab9983dcf36d072b24f4ecee5558d790a</Anchor>
    <DeclaredIn>util_mit.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dir_exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a786f5711d1671e3f8af85c545fc627c5</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>double_eq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a7e55035aed27d6e56f7219405c803628</Anchor>
    <DeclaredIn>util.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>downcase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a7edce266869606fc7bb46124f8d63809</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>esc2underscore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a164a636683af9444c41c17c84d88e5f7</Anchor>
    <DeclaredIn>escaping.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>escape_double_quotes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>aa26bd967ca156771d2bd79db8bd3a91f</Anchor>
    <DeclaredIn>escaping.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>escattr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a17b72fe083734a5fefaf5542f640d87e</Anchor>
    <DeclaredIn>escaping.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extract_double_array</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>ae9717ce6442b4909dcd7add356a7ff88</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extract_double_array</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>aa04d5fddff07ca50affc36529e4bc0c8</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extract_double_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a3c8b08223f4ea1841cf82dfc743a0d3a</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extract_string_argument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>aca7eee077ab6dadb25126a92cf82737a</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillConstructorAttrTable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>af39f3758ad6050f66d1a0d7f7013fb09</Anchor>
    <Abstract>Recursive helper function for Building DAS entries for Constructor types. </Abstract>
    <DeclaredIn>DDS.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a68a16ef70e29c367dabd3cb5165c386a</Anchor>
    <DeclaredIn>HTTPCacheTable.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_temp_file</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a38c36ee6057b9229779ba3053bb37d4c</Anchor>
    <DeclaredIn>HTTPConnect.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>acae01d86178254213ffd234c1e1fd8b4</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>abf6c5d7d890cc00d0545d72b05265a53</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>has_dap2_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a26c34b4f9cb1a6515ce4412ed65b0d59</Anchor>
    <DeclaredIn>DDS.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>has_dap2_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a9b8d3200efbd82d48ade94bf7e599206</Anchor>
    <DeclaredIn>DDS.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id2www</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>afbd709ed83699c11234a213463d16b9c</Anchor>
    <DeclaredIn>escaping.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id2www_ce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>adc33774947740cc181b6d4d7ca90e22d</Anchor>
    <DeclaredIn>escaping.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id2xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a62463a13bf510db3a14c0053fea14f4d</Anchor>
    <DeclaredIn>escaping.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>aaa5926a7932be603a4ef9a89a96b135b</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_hop_by_hop_header</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a1987f9d225c2778a297eab61a6a612b3</Anchor>
    <DeclaredIn>HTTPCache.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_host_big_endian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a3abf36cb3ebe713e8ff377085b4637a4</Anchor>
    <Abstract>Does this host use big-endian byte order? </Abstract>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_integer_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>ab99b40f36be23399fdf10fe3fa055afe</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_quoted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>af5f0e11f33c1eb25b831c02d65b2a9ee</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a73e3f05015e5722fab9553d0d30441fe</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>ab4b80891f6216b0cda757788cbc6feb2</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a3c2e481465a4567eaf6d1f22d84c0ef9</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open_temp_fstream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a14d91991ecd682d9bc212a00ac45d43c</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>ab3c20d5978c31aa69a0d4b5b61aaa0d3</Anchor>
    <DeclaredIn>AISResources.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>ae3c75369b7863f4284f3fae3feacf71c</Anchor>
    <DeclaredIn>AISResources.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse_time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>abaf4e1a6a665dbfe9324b25ec9fa701a</Anchor>
    <DeclaredIn>util.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>path_to_filename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a38d9163360ace25ebe5dec96b17039ac</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prune_spaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a4b1fc86f3e9e75f967ad66f07962d406</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_quotes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a37a24fcba1630ac658ec4c8a902dd92c</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_space_encoding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>aba04c51de3fc39e8e8cc41e4f1fd1286</Anchor>
    <DeclaredIn>AttrTable.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save_str</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a88b0cc055e14caf84865c2d5730d4fb3</Anchor>
    <Abstract>Save a string to a temporary variable during the parse. </Abstract>
    <DeclaredIn>parser-util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_array_using_double</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a5d52ca5c40dd022353469e7b5d8a9ad4</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StrCmp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a0cacdf95ef71800420109088d0928d7b</Anchor>
    <DeclaredIn>Operators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>systime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>aa865553d4933d667330f305dcb2564b0</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a53e4b7d109c66e3b5ab39e9c2ae5da3c</Anchor>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unescape_double_quotes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a4c3ce7a705067cd34a90d2481033fdb6</Anchor>
    <DeclaredIn>escaping.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unescattr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a8ea51bd234898fe461d77dfbe3a678fe</Anchor>
    <DeclaredIn>escaping.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>www2id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a376f9593431111a80ef78c98b8f4a0e2</Anchor>
    <DeclaredIn>escaping.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml2id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a613e8502fe2c16fd938d1bd9065fceb0</Anchor>
    <DeclaredIn>escaping.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>last_modified_time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a394c0b1380a16e886f96bf4a9081ed3a</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rfc822_date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>addaf5cee5de886a546a7861b4f37f206</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>do_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a7e95f81049cb65e60edcc5ec41d445d7</Anchor>
    <Abstract>Send a version number. </Abstract>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ErrMsgT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>ac76ab0ba8dd2e6d2db8e4d07175ea266</Anchor>
    <Abstract>Logs an error message. </Abstract>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name_path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a3afc3528d387dce83384c0cb9d87d840</Anchor>
    <Abstract>Returns the filename portion of a pathname. </Abstract>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>aceb42dce2c3676ca9785ee89190ab4ce</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_description_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a284c1c548cbcea75bb1b7c8374dc04e9</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_next_mime_header</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>af40aaa18e8202054344f62bea89a843c</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_next_mime_header</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a9b9ec754b75ede55b1d84b5bec3d15f7</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse_mime_header</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a3853818a415408fd980e8f3a9321d5d8</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_boundary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>adf7e4c413496dc6047a0ea00855e78cb</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_multipart_boundary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a1ad87923a4c147b72d5bbeefa727a2cb</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_multipart_headers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a96c1d42b551af831c26287053386e244</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cid_to_header_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a305177e6d1357f0315156510475cc633</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_mime_header</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a84080cf0736578f62620dde0fd3f2110</Anchor>
    <Abstract>Read and discard the MIME header of the stream in. </Abstract>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_mime_header</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a6cfae80981a6cc8aa55ab2fb437f4c82</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_text</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>aef829d3d34220c1f9db6cd02ae56847a</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_text</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a7a785b8fcc89e5be01284c06a9dbc97d</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_text</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>ade7dc06f598ad61f115cc82264a0ed6c</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_html</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a244daa3bbc88d3d96624ec6359d07bcc</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_html</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a2d47123836f484835fd6d85d66ca0129</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_html</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>ac3041f3ea7e105872be409fdf78d745d</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_binary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a57a713334cf4756cabd29e7468ef8bae</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_binary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>ae55c70a6b2073269d49dd7654d625710</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_binary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a0182d4b204fc9c5bb3e7216c34ed44df</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_multipart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a8d713feb5dc68aa9ec81058f39ca9a95</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a21859ebeabd395e729583e2b15328cfa</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>ab2d00f30883d50ec4c6a7e48e489f8c0</Anchor>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_not_modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a46842454008837163552f30754a7388a</Anchor>
    <Abstract>Send a `Not Modified&amp;#39; response. </Abstract>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_mime_not_modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a9ff38622675d29e932726aea56525a40</Anchor>
    <Abstract>Send a `Not Modified&amp;#39; response. </Abstract>
    <DeclaredIn>mime_util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size_ok</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a36c4fc80766718669c9790c6cb20c895</Anchor>
    <Abstract>sanitize the size of an array. Test for integer overflow when dynamically allocating an array...</Abstract>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pathname_ok</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap</Scope>
    </TokenIdentifier>
    <Path>namespacelibdap.html</Path>
    <Anchor>a7c34f89476954f3a2fd0eaa1d1e8cd32</Anchor>
    <Abstract>Does the string name a potentially valid pathname? Test the given pathname to verify that it is a val...</Abstract>
    <DeclaredIn>util.cc</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::AISConnect</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::AISConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISConnect.html</Path>
    <DeclaredIn>AISConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AISConnect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISConnect.html</Path>
    <Anchor>a30a96b7d5fde2d619185879a8dbcb264</Anchor>
    <DeclaredIn>AISConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AISConnect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISConnect.html</Path>
    <Anchor>ad4142b6a66d33862c69e7f0846658d18</Anchor>
    <DeclaredIn>AISConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a0e55cc99530cab779ae83984c2a22f51</Anchor>
    <Abstract>Get the Connect&amp;#39;s constraint expression. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_protocol</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a4223a898b3da719509d173dd990c45f1</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a30fe6746add5a210d59b5dc9d678355f</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>ae50d98d353023b9786c9bd5b0833a7de</Anchor>
    <Abstract>Read data which is preceded by MIME headers. This method works for both data dds and data ddx respons...</Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_data_no_mime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a486b095a58614dfc2be0321035784306</Anchor>
    <Abstract>Read data from a file which does not have response MIME headers. This method is a companion to read_d...</Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_das</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISConnect.html</Path>
    <Anchor>acddb989623fc4e3aed42710a50f45178</Anchor>
    <DeclaredIn>AISConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_das_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>abcf814710de1e252e74a4e1b72d3c6b3</Anchor>
    <Abstract>Get the DAS from a server. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a814e98ac5e99927ccc79bb0feb32d241</Anchor>
    <Abstract>Get the DAS from a server. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_data_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>ac8582099411b8d74b03e761129df5b5c</Anchor>
    <Abstract>Get the DAS from a server. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_dds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>aad5ef370110577e9ca2a0161928f9efa</Anchor>
    <Abstract>Get the DDS from a server. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_dds_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a08795a9e160db409423fcd9058ba975d</Anchor>
    <Abstract>Get the DDS from a server. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_ddx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a4395cc18cf5ec1a5167795a5a5491958</Anchor>
    <Abstract>Get the DDX from a server. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_ddx_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a9a3e1fe01455b60a90a1974a7e871bb4</Anchor>
    <Abstract>The &amp;#39;url&amp;#39; version of request_ddx. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_protocol</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>aaa1ab562899da9a4630de01f943d1aa9</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>ac7a5896a09882004b75e581999940526</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_accept_deflate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a186f76bfea3b61dc3587bcff5760ed8b</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_cache_enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a25c97c4ad0239a9dd10812c880c40efe</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_credentials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a847af75e149f123a51a560119dfc06aa</Anchor>
    <Abstract>Set the credentials for responding to challenges while dereferencing URLs. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_xdap_protocol</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a4af759a2313d9ecbc1db1c811f549379</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a523bf24520185e3d71f36ac0203b98e6</Anchor>
    <Abstract>Get the object&amp;#39;s URL. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AISConnect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISConnect.html</Path>
    <Anchor>a9e9aad50a31427df596f04b39fb15be3</Anchor>
    <DeclaredIn>AISConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::AISDatabaseParser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::AISDatabaseParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISDatabaseParser.html</Path>
    <DeclaredIn>AISDatabaseParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISDatabaseParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISDatabaseParser.html</Path>
    <Anchor>abbe7487f5e9b25db0919cdf80c8ec2ce</Anchor>
    <DeclaredIn>AISDatabaseParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aisStartDocument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::AISDatabaseParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISDatabaseParser.html</Path>
    <Anchor>a9fdcd3abdf636bcab9def08fba9895f8</Anchor>
    <DeclaredIn>AISDatabaseParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aisEndDocument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::AISDatabaseParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISDatabaseParser.html</Path>
    <Anchor>acf0d559e97ccd9bf16f46d3fed5e6fba</Anchor>
    <DeclaredIn>AISDatabaseParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aisStartElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::AISDatabaseParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISDatabaseParser.html</Path>
    <Anchor>a2e8fe3a27faf0140897a1e037ece43d0</Anchor>
    <DeclaredIn>AISDatabaseParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aisEndElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::AISDatabaseParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISDatabaseParser.html</Path>
    <Anchor>ac9906556bd78127332d12d32d9e18184</Anchor>
    <DeclaredIn>AISDatabaseParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aisGetEntity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::AISDatabaseParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISDatabaseParser.html</Path>
    <Anchor>a7c8d19b0ebfb926e154a413d72165a90</Anchor>
    <DeclaredIn>AISDatabaseParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aisWarning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::AISDatabaseParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISDatabaseParser.html</Path>
    <Anchor>a2e896bce2dce2b89feb09f118db3bb50</Anchor>
    <DeclaredIn>AISDatabaseParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aisError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::AISDatabaseParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISDatabaseParser.html</Path>
    <Anchor>aec6c4f504d1278539045d468e35ff039</Anchor>
    <DeclaredIn>AISDatabaseParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aisFatalError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::AISDatabaseParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISDatabaseParser.html</Path>
    <Anchor>adb51810ab85a2f8dbe5537e6e79e9bb4</Anchor>
    <DeclaredIn>AISDatabaseParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::AISDatabaseReadFailed</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::AISDatabaseReadFailed</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISDatabaseReadFailed.html</Path>
    <DeclaredIn>AISExceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>aaca0caca09e939602cade604cbc9824f</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ab24a61e4974aae62962a40f9975e674c</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>acf3ab60821773bd8b62284750b02cfc0</Anchor>
    <Abstract>Is the Error object valid? </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ac705b3c1cfab1f7530d66a974eb0e8b6</Anchor>
    <Abstract>Parse an Error object. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a552d711be27e6695854bd2b977a5cf31</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a4c58ef196c2b247bd37529bb7ad6a666</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a47c0f4b6a38d8ca075d1056076d2845d</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a3ca90d33bf1c95529c9eefdfe8646e34</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>accc5eeb469c8c18ec16dbf7fefe3cc41</Anchor>
    <Abstract>The pointer is valid only for the lifetime of the Error instance. jhrg 9/22/20. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::AISDatabaseWriteFailed</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::AISDatabaseWriteFailed</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISDatabaseWriteFailed.html</Path>
    <DeclaredIn>AISExceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>aaca0caca09e939602cade604cbc9824f</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ab24a61e4974aae62962a40f9975e674c</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>acf3ab60821773bd8b62284750b02cfc0</Anchor>
    <Abstract>Is the Error object valid? </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ac705b3c1cfab1f7530d66a974eb0e8b6</Anchor>
    <Abstract>Parse an Error object. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a552d711be27e6695854bd2b977a5cf31</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a4c58ef196c2b247bd37529bb7ad6a666</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a47c0f4b6a38d8ca075d1056076d2845d</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a3ca90d33bf1c95529c9eefdfe8646e34</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>accc5eeb469c8c18ec16dbf7fefe3cc41</Anchor>
    <Abstract>The pointer is valid only for the lifetime of the Error instance. jhrg 9/22/20. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::AISMerge</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::AISMerge</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISMerge.html</Path>
    <Abstract>Merge AIS resources. </Abstract>
    <DeclaredIn>AISMerge.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AISMerge</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISMerge</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISMerge.html</Path>
    <Anchor>ac8bbb72add970ed61f8e5a98ae269571</Anchor>
    <DeclaredIn>AISMerge.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ais_resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISMerge</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISMerge.html</Path>
    <Anchor>a998f5e989f6707d1a4c40a1f6b22b8a7</Anchor>
    <DeclaredIn>AISMerge.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>merge</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISMerge</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISMerge.html</Path>
    <Anchor>a39cdca8a9bcf3834f826ebbb45694961</Anchor>
    <DeclaredIn>AISMerge.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AISMerge</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISMerge</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISMerge.html</Path>
    <Anchor>a51595e4888180773cf9bfcd26f6c80d8</Anchor>
    <DeclaredIn>AISMerge.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::AISResources</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::AISResources</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISResources.html</Path>
    <Abstract>Manage AIS resources. </Abstract>
    <DeclaredIn>AISResources.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AISResources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISResources</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISResources.html</Path>
    <Anchor>a1bc02aaf8ce2ade3aae43cdb9ae52da7</Anchor>
    <DeclaredIn>AISResources.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AISResources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISResources</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISResources.html</Path>
    <Anchor>ad78ad28fe4984fc735cbe2acca8d298c</Anchor>
    <DeclaredIn>AISResources.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISResources</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISResources.html</Path>
    <Anchor>a35cb470d61a9e94a013520f45514f600</Anchor>
    <DeclaredIn>AISResources.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>has_resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISResources</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISResources.html</Path>
    <Anchor>a5db1857c00f33c7962ba02f7ffff08ef</Anchor>
    <DeclaredIn>AISResources.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_database</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISResources</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISResources.html</Path>
    <Anchor>aa8bef9e8affa5cdffbf40a6a73935fd3</Anchor>
    <DeclaredIn>AISResources.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_database</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISResources</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISResources.html</Path>
    <Anchor>a2867d445f918e4902ec6fe45c695ebb1</Anchor>
    <DeclaredIn>AISResources.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_url_resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISResources</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISResources.html</Path>
    <Anchor>adc3494e028bbacd2fc2e1c34f929fad4</Anchor>
    <DeclaredIn>AISResources.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_url_resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISResources</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISResources.html</Path>
    <Anchor>a84c7411fe8b00a2f96a578695cca676a</Anchor>
    <DeclaredIn>AISResources.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_regexp_resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISResources</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISResources.html</Path>
    <Anchor>abb38b5dda71db72797538218ae16305d</Anchor>
    <DeclaredIn>AISResources.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_regexp_resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AISResources</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISResources.html</Path>
    <Anchor>a596d28e5be60838234b3efe64532e25f</Anchor>
    <DeclaredIn>AISResources.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>libdap::AISResources</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AISResources.html</Path>
    <Anchor>a56056b9b3a7729494d6790e56394abbb</Anchor>
    <DeclaredIn>AISResources.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::AlarmHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::AlarmHandler</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AlarmHandler.html</Path>
    <DeclaredIn>AlarmHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AlarmHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AlarmHandler</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AlarmHandler.html</Path>
    <Anchor>a27edcc310cb14706adb1dd42eb50e136</Anchor>
    <DeclaredIn>AlarmHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle_signal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AlarmHandler</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AlarmHandler.html</Path>
    <Anchor>abe52f8939c85b0285c2a8cb48b970a9b</Anchor>
    <DeclaredIn>AlarmHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Ancillary</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Ancillary</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Ancillary.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_ancillary_file</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::Ancillary</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Ancillary.html</Path>
    <Anchor>ab1bcf7b1c9c9dc3d981db69aa58f24c1</Anchor>
    <Abstract>Find a file with ancillary data. </Abstract>
    <DeclaredIn>Ancillary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_group_ancillary_file</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::Ancillary</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Ancillary.html</Path>
    <Anchor>a2732498600d700e6fb806db2ba39d024</Anchor>
    <DeclaredIn>Ancillary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Array</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Abstract>A multidimensional array of identical data types. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dim_citer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>aa36e3487697c25295d1b74a346b82720</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dim_iter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a7a557c05085a83d1501dbfa249d3cc52</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_constraint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a538f7c336e26b873f50e033d553bba26</Anchor>
    <Abstract>Adds a constraint to an Array dimension. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>ac9a68fa480403f9b80285073c653570c</Anchor>
    <Abstract>Add the BaseType pointer to this constructor type instance. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append_dim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a76e2d807204976c179ca07e7a3f6f142</Anchor>
    <Abstract>Add a dimension of a given size. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Array</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>ae9a0d029981757fdb6b67c6c020c37e0</Anchor>
    <Abstract>Array constructor. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Array</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a3c9bb7698219bdcdc4dba1fa38543975</Anchor>
    <Abstract>Array constructor. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Array</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a893a3fa9df80aae3ec926037fd2debea</Anchor>
    <Abstract>The Array copy constructor. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>af20a56a72c3108b31418ebf01f779253</Anchor>
    <Abstract>Copies data from the Vector buffer. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>aa2dcec843f64da6142a7a3208651a5e4</Anchor>
    <Abstract>Check semantic features of the Array. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_all_dims</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a9640d5aa2c37123f06220b9c3d77ce82</Anchor>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_constraint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a151f9eaea5f7b22980b1ef86c75723ce</Anchor>
    <Abstract>Clears the projection; add each projected dimension explicitly using add_constraint. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ac12023f8bf9ecc97998c3bb021ba2772</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a9c61fcb646f1813e350549b6ddf48204</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a512a356f31ed6c4c1a368da0b054408a</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>aba86cc0f3915d85e37f4b9e00ebfde7e</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ad78d293754a1d78b90c86f8e33c22bec</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dim_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>ae6e6943cd895fa8dc1c58621ffad42a0</Anchor>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dim_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a1e6b13c4a5d3e825df7ebae3a9dc300d</Anchor>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dimension_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a594eec9c83ef39c93f735e6cc3216c8b</Anchor>
    <Abstract>Returns the name of the specified dimension. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dimension_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a8f29497af9c33c0d66939d5f9a16d92a</Anchor>
    <Abstract>Returns the size of the dimension. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dimension_start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a12084880777d27d782b0e1f2f4d5ae01</Anchor>
    <Abstract>Return the start index of a dimension. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dimension_stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a446f239be3ef678a4476058c8041552a</Anchor>
    <Abstract>Return the stop index of the constraint. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dimension_stride</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>afc530e71ace953992a5b314a6f885d31</Anchor>
    <Abstract>Returns the stride value of the constraint. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>afa75d1ff3c75b8359d03b3f382bfd179</Anchor>
    <Abstract>Return the total number of dimensions in the array. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a19bf36db03a5a700c80ec33e76bfc9a6</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ab78981c9e05e7d1dc24f913dbd2021d7</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a285ee3b0cc0adf6a54ea388ea71a69fc</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_compound_buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ad6d99474ab74d8b9752e4e77b3350121</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_str</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ab53f2eb57de3f0f99961f6ab6f470638</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_value_capacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a16b89988deda0413d1eb2cdc615a38df</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a6b5ee8fec4de3700e2564a64ef4f6d76</Anchor>
    <Abstract>read data into a variable for later use </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>abe772a228c62c7960bf2eb92be77732f</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a2476a541aad16bedc64d99805fcc9c0c</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8a0000be2a244e3e07abda3020af8800</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend_dim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>adcb475b8a855515df7d9ddd254c3f08a</Anchor>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_as_map_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>abafb35e8c77673793f2d3897ca1eec4b</Anchor>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_as_map_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a5a3d7064fae4cfc94d4fc9026fce0667</Anchor>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a976af6f6189ee1f404cd7995df51eabc</Anchor>
    <Abstract>Print the DAP4 representation of an array. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a62456490e14832bd55b9b79d6e37397a</Anchor>
    <Abstract>Prints a DDS entry for the Array. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>ada4cee027a63ce185940fd8c019741d7</Anchor>
    <Abstract>Prints a DDS entry for the Array. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>af7bdf05ad5a57a517aa6b122b03f06df</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>aedea9b76dc355fde465f8163d80fafbb</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a3ce1bd161426e6950dc97511f33b2845</Anchor>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a630bb8bac280ba540af9035df5968c2b</Anchor>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_core</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>ad38718861c5dd21a677746a2211059f1</Anchor>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_core</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a29755e9dcff905940b9ee6138ee556be</Anchor>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>af27b27e6edec29098e938bd7bb26d8f6</Anchor>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a31dc321bd9314239474f30d290e0599a</Anchor>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename_dim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a843af00a8cdb4e4c87eae166d57db5d4</Anchor>
    <Abstract>Renames dimension. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserve_value_capacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>aaaa7c0f36266ef3df9f4fb90de220867</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserve_value_capacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>adade15ffa55c59f6205e1c3c9ea78a35</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset_constraint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>ac375d728d50c8b27422c766c84e12300</Anchor>
    <Abstract>Reset constraint to select entire array. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a993d46232faadb5914cc0519d013e9b2</Anchor>
    <Abstract>Serialize a Vector. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>af478e3d5cbb3235081fe8daa6d6629a9</Anchor>
    <Abstract>The DAP4 serialization method. Serialize a variable&amp;#39;s values for DAP4. This does not write the DMR pe...</Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a05a61e24fd295934dfc3c37c9f55ca57</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>aacfca48c7db65e3a2c3c94734dee8c36</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a58712de8871e28a48fdc95e72a09df71</Anchor>
    <Abstract>Indicates that the data is ready to send. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a64815467570490a4a6cddc89f09a2413</Anchor>
    <Abstract>Indicates that the data is ready to send. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value_slice_from_row_major_vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a559d8ca948ca40f179e4e3da0bfdfdc4</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_vec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a8bf6e565dcb2eab1f3f7037518a9acb3</Anchor>
    <Abstract>Sets element i to value val. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_vec_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a175f1a51686798061c2147f2eccde33a</Anchor>
    <Abstract>Sets element i to value val. Set the ith element to val. Extend the vector if needed. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a1cc230189460ef65076e8091cf3b6e36</Anchor>
    <Abstract>Transforms this instance of a D4Array into the corresponding DAP2 object. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a2dea8a711559cb0e0b9c36bf41df6473</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a4c4fe08ce144a3fa2d6b15b7ae15ccc0</Anchor>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a96ecf84f2798065878755d9a9014ee69</Anchor>
    <Abstract>Reads data into the Vector buffer. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>aa5ccb30d1f27ae587f35216b859feec7</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ac07a950727d2ac58934ba4cc03206c8d</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>adf286762e63295675850c41cedf33370</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ad180a87244b0b6f32b47711a4ae0330e</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a8fe5d7b06814653b6cf5408b2a8671db</Anchor>
    <Abstract>Returns the width of the data, in bytes. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Array</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>ad30dc4754b0040a453d00cf5e0b4ddb7</Anchor>
    <Abstract>The Array destructor. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>abd6e429e907214c593b6fb37f97511ee</Anchor>
    <Abstract>set the value of a string or url array </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a068afd2353ad32f904361253e1b6e807</Anchor>
    <Abstract>set the value of a string or url array </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a0725f0e3304f9ad00bf90a19b5650368</Anchor>
    <Abstract>Get a copy of the data held by this variable. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>af9fd1c331a511989ac2bf4a0ad5b27da</Anchor>
    <Abstract>Get a copy of the data held by this variable using the passed subsetIndex vector to identify which va...</Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>aca5000630369cb4217827c2f136afec0</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_create_cardinal_data_buffer_for_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>af175806a557f627a0ee70c5f05ed7c5c</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_delete_cardinal_data_buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ad2e46d6d52fcb609658baf5ac1f9892e</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_is_cardinal_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ac00c2a2ebd65c86022b82dfb1a32485c</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_set_cardinal_values_internal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a1fb2c5dc539e55203fc61845089c67e8</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_array</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a435534a45cea53181d30dc09d46734a7</Anchor>
    <Abstract>Print the value given the current constraint. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_array</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Array</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Array.html</Path>
    <Anchor>a88a4492771892695010496d2dfb6071e</Anchor>
    <Abstract>Print the value given the current constraint. </Abstract>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Array::dimension</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Array::dimension</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Array_1_1dimension.html</Path>
    <DeclaredIn>Array.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>libdap::Array::dimension</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Array_1_1dimension.html</Path>
    <Anchor>afe3967fd170363af8cf22785e500e6e6</Anchor>
    <Abstract>Size of dimension once constrained. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>libdap::Array::dimension</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Array_1_1dimension.html</Path>
    <Anchor>a4b4b2890af4664c2708fb2097e7e76b8</Anchor>
    <Abstract>If not null, a weak pointer to the D4Dimension. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>libdap::Array::dimension</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Array_1_1dimension.html</Path>
    <Anchor>a3a669f3c6655d1abe8d425ea2ee9b6f1</Anchor>
    <Abstract>The name of this dimension. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>libdap::Array::dimension</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Array_1_1dimension.html</Path>
    <Anchor>a9755d2f4f1ee36ef45c6d72ab2231841</Anchor>
    <Abstract>The unconstrained dimension size. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>libdap::Array::dimension</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Array_1_1dimension.html</Path>
    <Anchor>a6f00f58d28ba435d093c5e7f1683dde3</Anchor>
    <Abstract>The constraint start index. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>libdap::Array::dimension</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Array_1_1dimension.html</Path>
    <Anchor>ac5f0e3960dde02014e031d6a3e457c4c</Anchor>
    <Abstract>The constraint end index. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stride</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>libdap::Array::dimension</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Array_1_1dimension.html</Path>
    <Anchor>a056a67e3c91acd7c815f279c2dab2ea8</Anchor>
    <Abstract>The constraint stride. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>use_sdim_for_slice</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>libdap::Array::dimension</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Array_1_1dimension.html</Path>
    <Anchor>a6b32a6d4afbc18a696217ffff0a6ea4e</Anchor>
    <Abstract>Used to control printing the DMR in data responses. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::AttrTable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Abstract>Contains the attributes for a dataset. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_container_alias</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>acd28a0951ff0764a6d740fbc30d3052f</Anchor>
    <Abstract>Add an alias to a container held by this attribute table. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_value_alias</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a77971a429d7c23360fd41a4df177489c</Anchor>
    <Abstract>Add an alias for an attribute. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append_attr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a7a526505d174c7a2f33e6b57761f8bc4</Anchor>
    <Abstract>Add an attribute to the table. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append_attr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a5b55410e211497f89ebcfad559920cbf</Anchor>
    <Abstract>Add an attribute to the table. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append_container</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a03f3a1197f9529d4c0328830c765cfe1</Anchor>
    <Abstract>Add a container to the attribute table. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append_container</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>aa731fefe3e52fb193f7f2b5a39e04a4d</Anchor>
    <Abstract>Add a container to the attribute table. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attr_alias</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a2b9a67d2cc96dee860e6fb2d713a8252</Anchor>
    <Abstract>Adds an alias to the set of attributes. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attr_alias</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>aaf0369980f799252f9f133390c8b4d79</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>adf622bbd401676f089b194812bac7290</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>aad6a9557cc76cfb925e55077e0470859</Anchor>
    <Abstract>Erase the attribute table. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a33653c34e856e2e5fc0578240eb7a959</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_container</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>ae403d070910c829f74a59fbf4648588f</Anchor>
    <Abstract>Find an attribute with a given name. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>aaaec827895fd8897594969159f1203e6</Anchor>
    <Abstract>Get the name of this attribute table. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>ac5889e66ffa861ce098628de19840d89</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>acdacb74f3a5f5c8ce7eb022562a8f971</Anchor>
    <Abstract>Get the number of entries in this attribute table. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>acc2d83b4f1c8e704a6f83ff966a999c8</Anchor>
    <Abstract>Prints the attribute table. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a785014928633842a93352cc05038ea38</Anchor>
    <Abstract>Prints the attribute table. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a93a445b9e6fb665076834e99dd7e4a0e</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a5e27ea09f83831eded1b3d86de7f4534</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a21ee9e5f68e06fb698ef93553dcdc592</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>ab85de16a14335a3c1b757ae271d13644</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recurrsive_find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>aefdc93c9514013ebd644488cd8365924</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a3d09ff6bf5a12789308b20440dcaf302</Anchor>
    <Abstract>Set the name of this attribute table. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>simple_find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>ae7824f413ad036d91df0ef62cac14351</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a4010172de5c41cd88f2422d5e1975522</Anchor>
    <Abstract>Get an attribute container. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a689563c3beb8e6f571387c5105821f27</Anchor>
    <Abstract>Get the type name of an attribute within this attribute table. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>aefcd82370930ba94a288f135d9417a93</Anchor>
    <Abstract>Get the type of an attribute. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_num</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a1c86cb6c91dfdc37b9787828dd09483c</Anchor>
    <Abstract>Get the number of attributes in this container. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a7352d886789e9e38d530fc44c6cbef30</Anchor>
    <Abstract>Get a vector-valued attribute. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_attr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a9c8feb09ec38a783817bcd2fbd3421c8</Anchor>
    <Abstract>Deletes an attribute. </Abstract>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attr_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a8881bb7044577dae3098f4a1d8bf4f2f</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attr_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a543955729bad6b7a9d1d6b336596b1ba</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_iter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a8b9dd1020a256e884747e8ecf57c10a3</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>ad7ce1789497599e99014696aa5afe736</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_container</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a2ca5cf1e2aa163259b00affe49547a0d</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>afd8cf7a6bf36504f48eda8a6ff11a56c</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>abcdd3b10325085a3dd345343df159e48</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>abfdfb5b51ff84a41596ebf0f28ca77df</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a0893b78039439185dd39c69beaf0324e</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_num</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>acd12f3bd820be114b3cc3dd97aad7d89</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a060eb65435ff7deb0905c640f17b35dc</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a19f9153c5bad64f5bc783d493ffa0733</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a4fa4213ffc8bd5ab96ff6ba148fd9eb1</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>simple_print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>a1abee354d7f609ed55b849b0431bc48f</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>simple_print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::AttrTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1AttrTable.html</Path>
    <Anchor>ae167683da221e8d64aaf2fab58dbf22f</Anchor>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::AttrTable::entry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::AttrTable::entry</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1AttrTable_1_1entry.html</Path>
    <DeclaredIn>AttrTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::BaseType</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Abstract>The basic data type for the DODS DAP types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af4a9a00892a89fea323acbc391aeef32</Anchor>
    <Abstract>The BaseType constructor. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3100d033d3d321486f0f2939fcb2b14a</Anchor>
    <Abstract>The BaseType constructor. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae11f0e6e4286438aad85bf01dba8ddfd</Anchor>
    <Abstract>The BaseType copy constructor. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a512a356f31ed6c4c1a368da0b054408a</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adea4e1a5116f488343825c9657e92ffe</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8a0000be2a244e3e07abda3020af8800</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0b130311c9901fb8a7ab11ea19090ef0</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a433dcd53f227a431c6479234d1b52220</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>accb15b7411e1988ef0a085ebdc88ce5d</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ac360679317a411d7812ca235a1528281</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adc24a735977e28acb0e6f78667c1dd21</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adacd263e05baa44861eec811037dee05</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a30331db8b6a7cdc843652376fa683b71</Anchor>
    <Abstract>The DAP4 serialization method. Serialize a variable&amp;#39;s values for DAP4. This does not write the DMR pe...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1f27d99250e857efd86ac9db788bbf1b</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a10101e702d03e2a30ebecc341ebc7a08</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afb5e13838a599ec0efe2adbb2ae18f47</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a94edd5b610afb1432144158740710488</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::BaseTypeFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::BaseTypeFactory</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseTypeFactory.html</Path>
    <DeclaredIn>BaseTypeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NewVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseTypeFactory</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseTypeFactory.html</Path>
    <Anchor>a1ac2aff8a85bbfba4c012e01f087149c</Anchor>
    <DeclaredIn>BaseTypeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseTypeFactory</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseTypeFactory.html</Path>
    <Anchor>a7715687224ed81f7e94b3af463ca5b8b</Anchor>
    <DeclaredIn>BaseTypeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Byte</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Abstract>Holds a single byte. </Abstract>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a2de44757203d23419d59c8731ca0b96c</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Byte</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a6b22d844cd6418102466954f8e1e3106</Anchor>
    <Abstract>The Byte constructor. </Abstract>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Byte</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>aa0470214af169a5e1c080baa8257fbba</Anchor>
    <Abstract>The Byte server-side constructor. </Abstract>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a9aceffe3fc1b898adf50ce44151c2444</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a44a8efbbd1e0423b4959bc76baf92dfd</Anchor>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a11a4fa1e2e5c6477c38af9fa5c3118b4</Anchor>
    <Abstract>Deserialize the char on stdin and put the result in _BUF. </Abstract>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a9ffbfab78e18db036bfcf03fd0afc05c</Anchor>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a3cf81110f37a9b2d31a491de936b6d51</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>ad97b380875f85f6e7c3d02488f209afa</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a54af53582af918c4a94ad98ba9845630</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>adc3565bb42fd7454205e61a8f16119e4</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a599c7dec30fe35df45c9a66cbb7030be</Anchor>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>aa70aeb6aaddd570ed5bc32215b53c88e</Anchor>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a2799f2bb1a9f1992ec57c7f31761abe1</Anchor>
    <Abstract>Serialize a Byte. </Abstract>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>ad79ed596e502d99c450a8a1e23b381b7</Anchor>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a21e180be842b140b3d0772dc94ab4583</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a8b8afd3348f7d22e6ff02c0c605c7bfd</Anchor>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a96312bb8da28d27316a0077143e42360</Anchor>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Byte</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Byte.html</Path>
    <Anchor>a4d4eb99a6d1022ca4e1808776438399d</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>Byte.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::cache_entry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::cache_entry</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1cache__entry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::ce_parser_arg</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::ce_parser_arg</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1ce__parser__arg.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::ChildLocker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::ChildLocker</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ChildLocker.html</Path>
    <DeclaredIn>MarshallerThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChildLocker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ChildLocker</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ChildLocker.html</Path>
    <Anchor>a310d79ab9441523c68541035bf2d511a</Anchor>
    <DeclaredIn>MarshallerThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::chunked_inbuf</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::chunked_inbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__inbuf.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chunked_inbuf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_inbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__inbuf.html</Path>
    <Anchor>a26d2bc25f975262555a73e42ae13cf98</Anchor>
    <Abstract>Build a chunked input buffer. </Abstract>
    <DeclaredIn>chunked_istream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_next_chunk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_inbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__inbuf.html</Path>
    <Anchor>a70b29d2d6f5c4772e7950e8930ed71cb</Anchor>
    <Abstract>Read a chunk Normally the chunked nature of a chunked_istream/chunked_inbuf is hidden from the caller...</Abstract>
    <DeclaredIn>chunked_istream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>underflow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_inbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__inbuf.html</Path>
    <Anchor>a45c0f6e2f7bfc6bd4f953e5de8dbd241</Anchor>
    <Abstract>Insert new characters into the buffer This specialization of underflow is called when the gptr() is a...</Abstract>
    <DeclaredIn>chunked_istream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xsgetn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_inbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__inbuf.html</Path>
    <Anchor>ac98a38a08d371dfb97c32c9235bbc129</Anchor>
    <Abstract>Read a block of data This specialization of xsgetn() reads num bytes and puts them in s first reading...</Abstract>
    <DeclaredIn>chunked_istream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::chunked_istream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::chunked_istream</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__istream.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bytes_in_buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_istream</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__istream.html</Path>
    <Anchor>af6d129dcc1a429bfdf8162500713bd1a</Anchor>
    <DeclaredIn>chunked_istream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twiddle_bytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_istream</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__istream.html</Path>
    <Anchor>adb26664f72dbcd5a9563b73196e781b6</Anchor>
    <DeclaredIn>chunked_istream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::chunked_ostream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::chunked_ostream</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__ostream.html</Path>
    <Abstract>A C++ stream class for chunked data. This class uses the chunked_outbuf class to provide for chunked ...</Abstract>
    <DeclaredIn>chunked_ostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chunked_ostream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_ostream</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__ostream.html</Path>
    <Anchor>a4f41bc4f32e8d08cb68d8b71620aa0de</Anchor>
    <DeclaredIn>chunked_ostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_data_chunk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_ostream</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__ostream.html</Path>
    <Anchor>a823bbbcdabed51009b401abb3a45122c</Anchor>
    <Abstract>Send the current contents of the buffer as a data chunk. Normally, the chunked_ostream object waits u...</Abstract>
    <DeclaredIn>chunked_ostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_end_chunk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_ostream</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__ostream.html</Path>
    <Anchor>ab8c65417a57f00ab08c69b00facd802d</Anchor>
    <Abstract>Send an end chunk. Normally, an end chunk is sent by closing the chunked_ostream, but this method can...</Abstract>
    <DeclaredIn>chunked_ostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_err_chunk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_ostream</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__ostream.html</Path>
    <Anchor>aea5b6730d0194747d98b43a9f2a83d8f</Anchor>
    <Abstract>Send an error message down the stream. When called, this method dumps all the data currently in the b...</Abstract>
    <DeclaredIn>chunked_ostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::chunked_outbuf</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::chunked_outbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__outbuf.html</Path>
    <Abstract>output buffer for a chunked stream This performs buffered output encoding the data in the stream usin...</Abstract>
    <DeclaredIn>chunked_ostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data_chunk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_outbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__outbuf.html</Path>
    <Anchor>a2eb3a61bf3e82204a8ffca358558dead</Anchor>
    <Abstract>Write out the contents of the buffer as a chunk. </Abstract>
    <DeclaredIn>chunked_ostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end_chunk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_outbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__outbuf.html</Path>
    <Anchor>a1c6c9891d360d5d9b7085ec8cf543610</Anchor>
    <Abstract>Send an end chunk. </Abstract>
    <DeclaredIn>chunked_ostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>err_chunk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_outbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__outbuf.html</Path>
    <Anchor>abefa71794597aa2b9edcfc9d7101bba1</Anchor>
    <Abstract>Send an error chunk While building up the next chunk, send an error chunk, ignoring the data currentl...</Abstract>
    <DeclaredIn>chunked_ostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overflow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_outbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__outbuf.html</Path>
    <Anchor>ade3250bbda968c561cfb390ba77504db</Anchor>
    <Abstract>Virtual method called when the internal buffer would overflow. When the internal buffer fills...</Abstract>
    <DeclaredIn>chunked_ostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_outbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__outbuf.html</Path>
    <Anchor>ad31279e06619ddbe49382adf03cf5803</Anchor>
    <Abstract>Synchronize the stream with its data sink. </Abstract>
    <DeclaredIn>chunked_ostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xsputn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::chunked_outbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1chunked__outbuf.html</Path>
    <Anchor>a07bcec83a5f20ac5a8f76e3c490d0768</Anchor>
    <Abstract>Write bytes to the chunked stream Write the bytes in s to the chunked stream. </Abstract>
    <DeclaredIn>chunked_ostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Clause</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Clause</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Clause.html</Path>
    <Abstract>Holds a fragment of a constraint expression. </Abstract>
    <DeclaredIn>Clause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boolean_clause</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap::Clause</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Clause.html</Path>
    <Anchor>a80d81003665b96012ee3ba175d80e608</Anchor>
    <Abstract>Return true if the clause returns a boolean value. </Abstract>
    <DeclaredIn>Clause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap::Clause</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Clause.html</Path>
    <Anchor>aeaccc72688521a8b08aeae970d983473</Anchor>
    <Abstract>Checks the &quot;representation invariant&quot; of a clause. </Abstract>
    <DeclaredIn>Clause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap::Clause</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Clause.html</Path>
    <Anchor>abfff44c4db49ad7462d14665b2458588</Anchor>
    <Abstract>Evaluate a clause which returns a boolean value This method must only be evaluated for clauses with r...</Abstract>
    <DeclaredIn>Clause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap::Clause</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Clause.html</Path>
    <Anchor>a7b124a939247dce1320c494a3b18f6a1</Anchor>
    <Abstract>Evaluate a clause that returns a value via a BaseType pointer. This method should be called only for ...</Abstract>
    <DeclaredIn>Clause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value_clause</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>libdap::Clause</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1Clause.html</Path>
    <Anchor>a7bd5122be1851f0bf32ec1c58b46eaa9</Anchor>
    <Abstract>Return true if the clause returns a value in a BaseType pointer. </Abstract>
    <DeclaredIn>Clause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Connect</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Abstract>Holds information about the link from a DAP2 client to a dataset. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a0e55cc99530cab779ae83984c2a22f51</Anchor>
    <Abstract>Get the Connect&amp;#39;s constraint expression. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a03b8c9f6773a25c3c837b9890099d5e8</Anchor>
    <Abstract>Create an instance of Connect. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_protocol</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a4223a898b3da719509d173dd990c45f1</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a30fe6746add5a210d59b5dc9d678355f</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>ae50d98d353023b9786c9bd5b0833a7de</Anchor>
    <Abstract>Read data which is preceded by MIME headers. This method works for both data dds and data ddx respons...</Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_data_no_mime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a486b095a58614dfc2be0321035784306</Anchor>
    <Abstract>Read data from a file which does not have response MIME headers. This method is a companion to read_d...</Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_das</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a816ef3bb8e729712ffeb6523f2cc4f0e</Anchor>
    <Abstract>Get the DAS from a server. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_das_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>abcf814710de1e252e74a4e1b72d3c6b3</Anchor>
    <Abstract>Get the DAS from a server. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a814e98ac5e99927ccc79bb0feb32d241</Anchor>
    <Abstract>Get the DAS from a server. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_data_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>ac8582099411b8d74b03e761129df5b5c</Anchor>
    <Abstract>Get the DAS from a server. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_dds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>aad5ef370110577e9ca2a0161928f9efa</Anchor>
    <Abstract>Get the DDS from a server. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_dds_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a08795a9e160db409423fcd9058ba975d</Anchor>
    <Abstract>Get the DDS from a server. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_ddx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a4395cc18cf5ec1a5167795a5a5491958</Anchor>
    <Abstract>Get the DDX from a server. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_ddx_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a9a3e1fe01455b60a90a1974a7e871bb4</Anchor>
    <Abstract>The &amp;#39;url&amp;#39; version of request_ddx. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_protocol</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>aaa1ab562899da9a4630de01f943d1aa9</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>ac7a5896a09882004b75e581999940526</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_accept_deflate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a186f76bfea3b61dc3587bcff5760ed8b</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_cache_enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a25c97c4ad0239a9dd10812c880c40efe</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_credentials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a847af75e149f123a51a560119dfc06aa</Anchor>
    <Abstract>Set the credentials for responding to challenges while dereferencing URLs. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_xdap_protocol</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a4af759a2313d9ecbc1db1c811f549379</Anchor>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Connect.html</Path>
    <Anchor>a523bf24520185e3d71f36ac0203b98e6</Anchor>
    <Abstract>Get the object&amp;#39;s URL. </Abstract>
    <DeclaredIn>Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::ConstraintEvaluator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Abstract>Evaluate a constraint expression. </Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append_clause</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>a796b573bb1ec8bbce8c22c4caf58af2e</Anchor>
    <Abstract>Add a clause to a constraint expression. </Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append_clause</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>a2439b21977caf80d57c5faa0342dfcb4</Anchor>
    <Abstract>Add a clause to a constraint expression. </Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append_clause</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>af4769219d99fe7ec3f4f4d7b1cd560dc</Anchor>
    <Abstract>Add a clause to a constraint expression. </Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append_constant</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>abf7511f38a4c5f8fc0cde0eca91ef338</Anchor>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boolean_expression</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>a155da913af4458d96fa60ecd0ecbe377</Anchor>
    <Abstract>Does the current constraint expression return a boolean value? </Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clause_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>a81135cc86f8bef397b59577dfa224f62</Anchor>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clause_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>ad193b3ca4cef59d2b46c04ab08f4675f</Anchor>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clause_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>a5c53cfac881da05b7ed6eb6404b0c4f9</Anchor>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eval_function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>a989c6db94b0a4079ea4ee333f4b699bf</Anchor>
    <Abstract>Evaluate a function-valued constraint expression. </Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eval_function_clauses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>ab0dba1657e9aadd85b3ce713c6a4036a</Anchor>
    <Abstract>Evaluate a function-valued constraint expression that contains several function calls. </Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eval_function_clauses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>a0e36171a34caa85d21e18adbd83a831b</Anchor>
    <Abstract>Evaluate a function-valued constraint expression that contains several function calls. Takes and returns a DataDDS. </Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eval_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>a25acac693348360167a2c352df746acb</Anchor>
    <Abstract>Evaluate a boolean-valued constraint expression. This is main method for the evaluator and is called ...</Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>a27ed41e76c8147cde9456dd516053ca7</Anchor>
    <Abstract>Find a Boolean function with a given name in the function list. </Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>a0845a2c4494e9ce1ecbb636da434b01f</Anchor>
    <Abstract>Find a BaseType function with a given name in the function list. </Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>adf406811a741bd0461b192d493b96710</Anchor>
    <Abstract>Find a projection function with a given name in the function list. </Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>function_clauses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>a9985c6a30247ced32a4b6e764deebf45</Anchor>
    <Abstract>Does the current constraint expression contain function clauses. </Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>functional_expression</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>add46ce1d9ef36fa26a2913d8d7c51096</Anchor>
    <Abstract>Does the current constraint expression return a BaseType pointer? This method does not evaluate the c...</Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse_constraint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ConstraintEvaluator.html</Path>
    <Anchor>a6290d897c82ddba106741ee8720f7ea0</Anchor>
    <Abstract>Parse the constraint expression given the current DDS. </Abstract>
    <DeclaredIn>ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Constructor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a2585c69c45b9ebec9c63993248eb5b4b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>abdb52463a46e1b10040f245d4ed7642b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac4dc7e8099322b5b403a7d0ae9079006</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>afe010638fd2ca9aab00dd1c21a9e4825</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a287ab9a4deb81a8ced6d8432be647925</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a512a356f31ed6c4c1a368da0b054408a</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af38d3785c4a7cd0063cbb9fc5943333c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a63763d2bae05463b100e823fb461a784</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a6f4253236d69c3c0ef64343136b5039b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a8efdfb84ef6b287142442252c00b4444</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a1c2eecff00fa7e3af175c711d00fb86e</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>afa6c06dab830b4e089641b44fea8293c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_var_index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac2b4b28ed9d6f435129aa599ab809799</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_vars_iter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a1e6d8224e04d75e3d2a21263957cd42f</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a065056826ef9c6fb2d08463af9e15a34</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a822a036364c56df5288a55670f51197e</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_linear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af26f89e9c0732a9c32bd5e15d716a7d7</Anchor>
    <Abstract>Check to see whether this variable can be printed simply. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8a0000be2a244e3e07abda3020af8800</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a0f130e129b06773a9f3c94e3b492bb5c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab7fb094be8da2a9f80f6d3b85e452934</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a6c2c4d7cbe1d6239c037272ec865f80b</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aa7f9cce8ca18461af332aab61123bf23</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af50641301757ed26eb75fb2d29eae7ee</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a32de0413045173aa8803f540a6cea39b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a7bbe6beabd94f576140e132e7a1017ff</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab775a5e7e63757ac961b43800a95635f</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0b130311c9901fb8a7ab11ea19090ef0</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ad0af40e2565972fa44985d173370c264</Anchor>
    <Abstract>simple implementation of read that iterates through vars and calls read on them </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a64268840654a0b37a15ccc601dbcfd33</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab868fe97d5075b702bd084c2e9540913</Anchor>
    <Abstract>Serialize a Constructor. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac30becb1ffe7d2cd4cbcd24fc216c9a3</Anchor>
    <Abstract>Set the in_selection property. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af52e60d8589eed1a18a14e9c6a57db65</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aafbcf9bef6719fe60ac707e02956e09d</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a799d2bd8ef9505b1d493d8cd73b72746</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a3affad818961b2e7e984415cdd3c6e9e</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac742b1bf93889e541128b1d123821ee6</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a36a7412da7b5257d7666add726fea1a6</Anchor>
    <Abstract>btp_stack no longer needed; use back pointers (BaseType::get_parent()) </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a68f1779dc328f890062722d90fad084a</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>adeafe3d6c82d07b456a598a7b446c2c6</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a936b38c7c35ffb4fe17c5b8e85bdaaa2</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rbegin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aa025cf546ca35250454653c1ec684d91</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aede7cf5889e101db1ea8f22c3a84a5d3</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a0b1e3ae7195f95c42ca98f42826a1ff5</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Constructor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aada6a0aa97adc6adff2398f8c7d0ff35</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4AsyncUtil</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4AsyncUtil</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4AsyncUtil.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeD2AsyncRequired</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4AsyncUtil</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4AsyncUtil.html</Path>
    <Anchor>acb8335ad353653ec35148f8c38895a54</Anchor>
    <Abstract>Write the DAP2 AsyncRequired response . Write the DAP2 AsyncRequired in XML form. ...</Abstract>
    <DeclaredIn>D4AsyncUtil.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeD4AsyncAccepted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4AsyncUtil</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4AsyncUtil.html</Path>
    <Anchor>ad7ce372878ff0d5a6ebda401c7e630f6</Anchor>
    <Abstract>Write the DAP4 AsyncAccepted response. Write the AsyncAccepted in XML form. </Abstract>
    <DeclaredIn>D4AsyncUtil.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeD4AsyncPending</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4AsyncUtil</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4AsyncUtil.html</Path>
    <Anchor>a8d8e9c8eb128fc4d8e799f2e7faa3205</Anchor>
    <Abstract>Write the DAP4 AsyncPending response. Write the DAP4 AsyncPending in XML form. </Abstract>
    <DeclaredIn>D4AsyncUtil.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeD4AsyncRequired</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4AsyncUtil</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4AsyncUtil.html</Path>
    <Anchor>a9f98ddda0707692370fe2af20f894b45</Anchor>
    <Abstract>Write the DAP4 AsyncRequired response. Print the AsyncRequired in XML form. </Abstract>
    <DeclaredIn>D4AsyncUtil.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeD4AsyncResponseGone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4AsyncUtil</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4AsyncUtil.html</Path>
    <Anchor>ae46e9b6a9eddbd13edbd5a503a8e71dc</Anchor>
    <Abstract>Write the DAP4 AsyncResponseGone response. Write the DAP4 AsyncRequired in XML form. </Abstract>
    <DeclaredIn>D4AsyncUtil.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeD4AsyncResponseRejected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4AsyncUtil</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4AsyncUtil.html</Path>
    <Anchor>a398106b8e1d5c52bf23fc7f556bd7d26</Anchor>
    <Abstract>Write the DAP4 ResponseRejected response. Write the DAP4 AsyncRequired in XML form. </Abstract>
    <DeclaredIn>D4AsyncUtil.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4Attribute</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4Attribute</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Attribute.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Attribute</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Attribute.html</Path>
    <Anchor>ad0609a07cdfb90a2c1be50b27c60460f</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>D4Attributes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4Attributes</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4Attributes</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Attributes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attribute_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Attributes</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Attributes.html</Path>
    <Anchor>a759970f338df1b66060f0607c35d4f52</Anchor>
    <Abstract>Get an iterator to the start of the enumerations. </Abstract>
    <DeclaredIn>D4Attributes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attribute_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Attributes</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Attributes.html</Path>
    <Anchor>a8584405e7329078e51364cdbb27a3092</Anchor>
    <Abstract>Get an iterator to the end of the enumerations. </Abstract>
    <DeclaredIn>D4Attributes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Attributes</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Attributes.html</Path>
    <Anchor>adefff20cb6cdcf82469529c7b309a910</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>D4Attributes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Attributes</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Attributes.html</Path>
    <Anchor>a2a7201c33ab93bfbd7b876ba8e93444f</Anchor>
    <DeclaredIn>D4Attributes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_attrs_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Attributes</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Attributes.html</Path>
    <Anchor>abcc9c129081018d9c4c411052382caaa</Anchor>
    <Abstract>Copy the attributes from this D4Attributes object to a DAP2 AttrTable. </Abstract>
    <DeclaredIn>D4Attributes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Attributes</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Attributes.html</Path>
    <Anchor>a1dfd8c42a188d627be7d11857fe723b6</Anchor>
    <Abstract>copy attributes from DAP2 to DAP4 </Abstract>
    <DeclaredIn>D4Attributes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4BaseTypeFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4BaseTypeFactory</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4BaseTypeFactory.html</Path>
    <DeclaredIn>D4BaseTypeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NewEnum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4BaseTypeFactory</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4BaseTypeFactory.html</Path>
    <Anchor>aa8100d8119cc1ffcc4875b144cfa347f</Anchor>
    <DeclaredIn>D4BaseTypeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NewURL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4BaseTypeFactory</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4BaseTypeFactory.html</Path>
    <Anchor>aff5d085d548134aa931dbf3527249b0a</Anchor>
    <DeclaredIn>D4BaseTypeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NewVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4BaseTypeFactory</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4BaseTypeFactory.html</Path>
    <Anchor>ad1ba5f8a8aa850d5eb66b1b398013180</Anchor>
    <DeclaredIn>D4BaseTypeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4BaseTypeFactory</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4BaseTypeFactory.html</Path>
    <Anchor>a134cf00bb72aacbd3ce737c35f575168</Anchor>
    <DeclaredIn>D4BaseTypeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4CEScanner</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4CEScanner</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4CEScanner.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4Connect</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Connect.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4Connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Connect.html</Path>
    <Anchor>a03973f6a80a96bdbe031dc03d869221d</Anchor>
    <Abstract>Create an instance of Connect. </Abstract>
    <DeclaredIn>D4Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_credentials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Connect.html</Path>
    <Anchor>ab124422662436dc0ede86cd1b3e4f467</Anchor>
    <Abstract>Set the credentials for responding to challenges while dereferencing URLs. </Abstract>
    <DeclaredIn>D4Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_accept_deflate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Connect.html</Path>
    <Anchor>a380e999d58c53bd1d6911bafbb0654ee</Anchor>
    <DeclaredIn>D4Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_xdap_protocol</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Connect.html</Path>
    <Anchor>a86734a9dd1c1de2017548cc54afd01e3</Anchor>
    <DeclaredIn>D4Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_cache_enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Connect.html</Path>
    <Anchor>a85c1176feebb30cd484c6ef20c22e01d</Anchor>
    <DeclaredIn>D4Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Connect.html</Path>
    <Anchor>ad778bc535395b26df0b15870760086d9</Anchor>
    <DeclaredIn>D4Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_protocol</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Connect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Connect.html</Path>
    <Anchor>a1ab3646633cc0049c281dc1f855b76e2</Anchor>
    <DeclaredIn>D4Connect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4ConstraintEvaluator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4ConstraintEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4ConstraintEvaluator.html</Path>
    <DeclaredIn>D4ConstraintEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4Dimension</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4Dimension</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Dimension.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fully_qualified_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Dimension</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Dimension.html</Path>
    <Anchor>a91a7616fcd4ac5f59248de675dbae3f2</Anchor>
    <Abstract>Get the FQN for the dimension. </Abstract>
    <DeclaredIn>D4Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Dimension</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Dimension.html</Path>
    <Anchor>a816571e2cbc792e1aa53cbb2829bb147</Anchor>
    <Abstract>Print the Dimension declaration. Print the Dimension in a form suitable for use in a Group definition...</Abstract>
    <DeclaredIn>D4Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_constraint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Dimension</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Dimension.html</Path>
    <Anchor>ab63edc1e631b4501178d2bc3018577e9</Anchor>
    <DeclaredIn>D4Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4Dimensions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4Dimensions</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Dimensions.html</Path>
    <DeclaredIn>D4Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4DimensionsIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>libdap::D4Dimensions</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Dimensions.html</Path>
    <Anchor>a24b00181a66826733d2e779cbc4df817</Anchor>
    <Abstract>Iterator used for D4Dimensions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_dim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Dimensions</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Dimensions.html</Path>
    <Anchor>a6a5a16bc3375f9e23ca7aaca4646bec2</Anchor>
    <DeclaredIn>D4Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_dim_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Dimensions</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Dimensions.html</Path>
    <Anchor>a54589e5cdb731298d8ef7e28068d967e</Anchor>
    <DeclaredIn>D4Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dim_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Dimensions</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Dimensions.html</Path>
    <Anchor>acdde711563706573cf03888bee31105e</Anchor>
    <Abstract>Get an iterator to the start of the dimensions. </Abstract>
    <DeclaredIn>D4Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dim_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Dimensions</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Dimensions.html</Path>
    <Anchor>aae49956b1831fadab0477846c9576819</Anchor>
    <Abstract>Get an iterator to the end of the dimensions. </Abstract>
    <DeclaredIn>D4Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Dimensions</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Dimensions.html</Path>
    <Anchor>ac8392d924d693bf312e215cabb384c76</Anchor>
    <Abstract>Does this D4Dimensions object actually have dimensions? </Abstract>
    <DeclaredIn>D4Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_dim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Dimensions</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Dimensions.html</Path>
    <Anchor>adf5daf7a4ff69d794f4ee8f6141748a4</Anchor>
    <DeclaredIn>D4Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_dim_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Dimensions</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Dimensions.html</Path>
    <Anchor>a848b4d805a85adcbda0810a88b209644</Anchor>
    <DeclaredIn>D4Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4Enum</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Abstract>Holds a DAP4 enumeration. </Abstract>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>a5508dbda78827898d8728590bb1130b4</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>a5353acc53445e30f4c189e07ae1f3aa1</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a512a356f31ed6c4c1a368da0b054408a</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>a4e9df94181f86c427666f10b2b7211bf</Anchor>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>a59b75c34bcb3210f235e226482529e81</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>a300dfa8bd3ce44b3e2123397ac8c6415</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>a87421c728d4728c38a6d62154306d420</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>a87c488f6f90a079df648d45b6c0657ef</Anchor>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>a8585358b06d90e8d689f572fb09ee326</Anchor>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>a524417cc7f1fd3776be4680c0af5c669</Anchor>
    <Abstract>Serialize a D4Enum Use the (integer) data type associated with an Enumeration definition to serialize...</Abstract>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>abc945a62587b02fe85c9146fd92a392b</Anchor>
    <Abstract>Set the value of the Enum Template member function to set the value of the Enum. The libdap library c...</Abstract>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>a0c3a33d704e3970e53922b6e7d0a541d</Anchor>
    <Abstract>Convert an Enum to a DAP2 int type. </Abstract>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>a9eff2897992fa47ddb3e459d19c54838</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>ac8a61f83c03511688b764d18ba53c0a8</Anchor>
    <Abstract>Get the value of an Enum Get the value of this instance. The caller is responsible for using a type T...</Abstract>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Enum</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Enum.html</Path>
    <Anchor>a7c97d06faba4257c9d50af2a7edd54d1</Anchor>
    <Abstract>Return the number of bytes in an instance of an Enum. This returns the number of bytes an instance of...</Abstract>
    <DeclaredIn>D4Enum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adc24a735977e28acb0e6f78667c1dd21</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1f27d99250e857efd86ac9db788bbf1b</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afb5e13838a599ec0efe2adbb2ae18f47</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4EnumDef</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4EnumDef</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4EnumDef.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_valid_enum_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4EnumDef</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4EnumDef.html</Path>
    <Anchor>af2c114ec827866cd344fc4dc620caa06</Anchor>
    <DeclaredIn>D4EnumDefs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4EnumDefs</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4EnumDefs</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4EnumDefs.html</Path>
    <DeclaredIn>D4EnumDefs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_enum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4EnumDefs</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4EnumDefs.html</Path>
    <Anchor>a79d4486eb22736c01552a591a48239f3</Anchor>
    <DeclaredIn>D4EnumDefs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enum_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4EnumDefs</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4EnumDefs.html</Path>
    <Anchor>adc6ee4d3059ddc1c78e38416df6aede4</Anchor>
    <Abstract>Get an iterator to the start of the enumerations. </Abstract>
    <DeclaredIn>D4EnumDefs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enum_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4EnumDefs</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4EnumDefs.html</Path>
    <Anchor>a791cd139eb848e2dc4ba13387abbea4a</Anchor>
    <Abstract>Get an iterator to the end of the enumerations. </Abstract>
    <DeclaredIn>D4EnumDefs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_enum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4EnumDefs</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4EnumDefs.html</Path>
    <Anchor>a4988b9d5ad3729b3ecc86ee914d04b96</Anchor>
    <Abstract>Insert a D4EnumDef. Insert a D4EnumDef before the position specified by the iterator. </Abstract>
    <DeclaredIn>D4EnumDefs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4FilterClause</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4FilterClause</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4FilterClause.html</Path>
    <Abstract>DAP4 filter clauses. </Abstract>
    <DeclaredIn>D4FilterClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4FilterClause</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4FilterClause</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4FilterClause.html</Path>
    <Anchor>a74c6d2b4e479c186b924d96ddff9466f</Anchor>
    <DeclaredIn>D4FilterClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4FilterClause</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4FilterClause.html</Path>
    <Anchor>ab49550e5f468040ee40bf54a72156b1a</Anchor>
    <Abstract>Get the value of this relational expression. This version of value() works for function clauses...</Abstract>
    <DeclaredIn>D4FilterClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4FilterClause</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4FilterClause.html</Path>
    <Anchor>a4860fa85c00f973512f4bf86ae4126f4</Anchor>
    <Abstract>Get the value of this relational expression. This version of value() will not work for clauses where ...</Abstract>
    <DeclaredIn>D4FilterClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4FilterClauseList</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4FilterClauseList</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4FilterClauseList.html</Path>
    <Abstract>List of DAP4 Filter Clauses. </Abstract>
    <DeclaredIn>D4FilterClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4FilterClauseList</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4FilterClauseList.html</Path>
    <Anchor>ae559b853739a7394299311f8e32e55c4</Anchor>
    <Abstract>Evaluate the list of clauses. </Abstract>
    <DeclaredIn>D4FilterClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4FilterClauseList</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4FilterClauseList.html</Path>
    <Anchor>a7bcb42d6670d47622f1666e709b20f47</Anchor>
    <Abstract>Evaluate the list of clauses. </Abstract>
    <DeclaredIn>D4FilterClause.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4FunctionEvaluator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4FunctionEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4FunctionEvaluator.html</Path>
    <DeclaredIn>D4FunctionEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4FunctionEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4FunctionEvaluator.html</Path>
    <Anchor>a71d80e1a6835ebc27104460698a3ac75</Anchor>
    <DeclaredIn>D4FunctionEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4FunctionEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4FunctionEvaluator.html</Path>
    <Anchor>aa652eafd055aa4781a5804ee765b1767</Anchor>
    <DeclaredIn>D4FunctionEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4FunctionEvaluator</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4FunctionEvaluator.html</Path>
    <Anchor>add490246e6e7726cf1f8f19536147b80</Anchor>
    <DeclaredIn>D4FunctionEvaluator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4FunctionScanner</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4FunctionScanner</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4FunctionScanner.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4Group</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a2585c69c45b9ebec9c63993248eb5b4b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>abdb52463a46e1b10040f245d4ed7642b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac4dc7e8099322b5b403a7d0ae9079006</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>afe010638fd2ca9aab00dd1c21a9e4825</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a287ab9a4deb81a8ced6d8432be647925</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a512a356f31ed6c4c1a368da0b054408a</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4Group</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>ae112f35481f750daceca3511700b865c</Anchor>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4Group</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>a89252477edc2d38676e75c69fb8a84ac</Anchor>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4Group</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>a7f9e2d2bc50eb55e3772cba4f0d7c273</Anchor>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af38d3785c4a7cd0063cbb9fc5943333c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a63763d2bae05463b100e823fb461a784</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>a702bdf9b8fa0a218594220d0f8b9bab1</Anchor>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dims</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>a034d8c0e622ad5de382d4dfd21ad2ff9</Anchor>
    <Abstract>Get the dimensions defined for this Group. </Abstract>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a8efdfb84ef6b287142442252c00b4444</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a1c2eecff00fa7e3af175c711d00fb86e</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enum_defs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>a8b9ac5b00e42a4fd6e8b1e276fe33cd7</Anchor>
    <Abstract>Get the enumerations defined for this Group. </Abstract>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_dim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>a14e4b548e4e5b53c68c4a27fea9133d4</Anchor>
    <Abstract>Find the dimension using a path. Using the DAP4 name syntax, lookup a dimension. The dimension must b...</Abstract>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>a40872115c2d90536dac4f98f998416c4</Anchor>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>a49310c234dfeb5ac8e40e20881199794</Anchor>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_var_index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac2b4b28ed9d6f435129aa599ab809799</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_vars_iter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a1e6d8224e04d75e3d2a21263957cd42f</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>grp_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>a4e1ccf4eac9bf132014f175ffa934d35</Anchor>
    <Abstract>Get an iterator to the start of the values. </Abstract>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>grp_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>a893a28e64abefede77aca1d5a38e55e9</Anchor>
    <Abstract>Get an iterator to the end of the values. </Abstract>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a065056826ef9c6fb2d08463af9e15a34</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>a368a83899f9abbbda1deaba7db8920bb</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_linear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af26f89e9c0732a9c32bd5e15d716a7d7</Anchor>
    <Abstract>Check to see whether this variable can be printed simply. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8a0000be2a244e3e07abda3020af8800</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>ae18a505436325aac9b7522fe293638e6</Anchor>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab7fb094be8da2a9f80f6d3b85e452934</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a6c2c4d7cbe1d6239c037272ec865f80b</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aa7f9cce8ca18461af332aab61123bf23</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af50641301757ed26eb75fb2d29eae7ee</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a32de0413045173aa8803f540a6cea39b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a7bbe6beabd94f576140e132e7a1017ff</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab775a5e7e63757ac961b43800a95635f</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>aa56c17b1f5cca717df57604b9c7614d0</Anchor>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ad0af40e2565972fa44985d173370c264</Anchor>
    <Abstract>simple implementation of read that iterates through vars and calls read on them </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>ace2c9ad32397a47d87fdad9111693420</Anchor>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a64268840654a0b37a15ccc601dbcfd33</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>ae2f8b233c32b222df7106661860b68dd</Anchor>
    <Abstract>Serialize a Group. </Abstract>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac30becb1ffe7d2cd4cbcd24fc216c9a3</Anchor>
    <Abstract>Set the in_selection property. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>a391e0b9fa30f8afbd9dea69d5f5fd897</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>a71f6bd0a32c30966ded9ccf8578f5cfb</Anchor>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a799d2bd8ef9505b1d493d8cd73b72746</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Group</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Group.html</Path>
    <Anchor>ab8aa023211f1ed226b73def5e11da787</Anchor>
    <Abstract>Transform the D4Group&amp;#39;s variables to DAP2 variables. </Abstract>
    <DeclaredIn>D4Group.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a3affad818961b2e7e984415cdd3c6e9e</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac742b1bf93889e541128b1d123821ee6</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a36a7412da7b5257d7666add726fea1a6</Anchor>
    <Abstract>btp_stack no longer needed; use back pointers (BaseType::get_parent()) </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a68f1779dc328f890062722d90fad084a</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>adeafe3d6c82d07b456a598a7b446c2c6</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a936b38c7c35ffb4fe17c5b8e85bdaaa2</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rbegin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aa025cf546ca35250454653c1ec684d91</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aede7cf5889e101db1ea8f22c3a84a5d3</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a0b1e3ae7195f95c42ca98f42826a1ff5</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4Map</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4Map</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Map.html</Path>
    <DeclaredIn>D4Maps.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Map</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Map.html</Path>
    <Anchor>a98ec8c14264c5a37d7009db73bd96e89</Anchor>
    <Abstract>The Array that holds this Map. </Abstract>
    <DeclaredIn>D4Maps.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4Maps</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4Maps</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Maps.html</Path>
    <DeclaredIn>D4Maps.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Maps</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Maps.html</Path>
    <Anchor>afc9c47e9fcf1372407567a047f6642b5</Anchor>
    <DeclaredIn>D4Maps.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4Opaque</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>a144049483741bfd39e3ac17bc480f6e4</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>a1902dc3e133b35b1cab454b8136525b3</Anchor>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>a084b31aa9073775472a8ca16d30950a6</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a512a356f31ed6c4c1a368da0b054408a</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>a055e793d61a140ffbfcde18d0395f6f6</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>a05a39516928c96e53b5c63ebf003de01</Anchor>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>aaa416d5ed6dc0d114abbbd32e7c17c05</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>a23a23d312b74ec2989372033aebaa72f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>aedf47172b055ecbe59363808903b5f94</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>ae4521e7e5c38c7002dea687ada0e46f9</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>ae27d35b688dd9a246c4ac0d9eed8d2cb</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>ada8cd83c8995fa8099adc1e23b8aeb1f</Anchor>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>a5d6753586eefbca214e866fea703e743</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>a83417f08ec539cc7ec6a1c76fd9029a8</Anchor>
    <Abstract>The DAP4 serialization method. Serialize a variable&amp;#39;s values for DAP4. This does not write the DMR pe...</Abstract>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>ae2a2a38798436fcff40bdf0f2d7895b2</Anchor>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>a055cc952c257d9069d4da12c47f1f148</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>abaec2b7412c175c02116ace998b57bf2</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>ab5240d13c4373a6913d1e263567cd5b6</Anchor>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Opaque</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Opaque.html</Path>
    <Anchor>a209fc10e6550ae7a5e19ad12453a7e26</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>D4Opaque.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4ParseError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4ParseError</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4ParseError.html</Path>
    <DeclaredIn>D4ParseError.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>aaca0caca09e939602cade604cbc9824f</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ab24a61e4974aae62962a40f9975e674c</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>acf3ab60821773bd8b62284750b02cfc0</Anchor>
    <Abstract>Is the Error object valid? </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ac705b3c1cfab1f7530d66a974eb0e8b6</Anchor>
    <Abstract>Parse an Error object. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a552d711be27e6695854bd2b977a5cf31</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a4c58ef196c2b247bd37529bb7ad6a666</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a47c0f4b6a38d8ca075d1056076d2845d</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a3ca90d33bf1c95529c9eefdfe8646e34</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>accc5eeb469c8c18ec16dbf7fefe3cc41</Anchor>
    <Abstract>The pointer is valid only for the lifetime of the Error instance. jhrg 9/22/20. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4ParserSax2</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4ParserSax2.html</Path>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_strict</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>group__strict.html</Path>
    <Anchor>ga030fddcb0529be0999faffd9c0fb7e16</Anchor>
    <Abstract>Get the setting of the &amp;#39;strict&amp;#39; mode. </Abstract>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4ParserSax2.html</Path>
    <Anchor>a0470239619369dc7f3110dd0119d1ca4</Anchor>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_strict</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>group__strict.html</Path>
    <Anchor>gad0fb36451a4348afb0a294f709c905f2</Anchor>
    <Abstract>Set the &amp;#39;strict&amp;#39; mode to true or false. </Abstract>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dmr_start_document</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4ParserSax2.html</Path>
    <Anchor>a38cecaf3381b7246174ff6f7e778d1ad</Anchor>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dmr_end_document</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4ParserSax2.html</Path>
    <Anchor>aa277fa53252611de8eb328d444bd9e68</Anchor>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dmr_start_element</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4ParserSax2.html</Path>
    <Anchor>a3ff316744cfc6089eb97af4f279fa41f</Anchor>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dmr_get_characters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4ParserSax2.html</Path>
    <Anchor>a8141fef163be7a66638a3cbb0dc39226</Anchor>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dmr_ignoreable_whitespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4ParserSax2.html</Path>
    <Anchor>a5ef9554850be4d66c774a8c57246dcec</Anchor>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dmr_get_cdata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4ParserSax2.html</Path>
    <Anchor>ad7764b38a30bc591dc5de3f00ff0af02</Anchor>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dmr_get_entity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4ParserSax2.html</Path>
    <Anchor>aef046d4042bd2f28ce897472f3dfc88e</Anchor>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dmr_fatal_error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::D4ParserSax2</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4ParserSax2.html</Path>
    <Anchor>af3d2bb4ddbb574e821f051311cb2a23c</Anchor>
    <DeclaredIn>D4ParserSax2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4RValue</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4RValue</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4RValue.html</Path>
    <DeclaredIn>D4RValue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_kind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4RValue</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4RValue.html</Path>
    <Anchor>a0ec4de806c9988928ba70ddf370e8b57</Anchor>
    <Abstract>What kind of thing holds the value Values in DAP4 constraints are either constants, dataset variables or function results. It might be nice to know the source of a given value in order to optimize the evaluation of certain kinds of expressions. </Abstract>
    <DeclaredIn>D4RValue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4RValue</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4RValue.html</Path>
    <Anchor>adf12fcbb253d9c336527ae12354ae56d</Anchor>
    <Abstract>Get the value for a RValue object Return the BaseType * for a given RValue. For a dataset variable...</Abstract>
    <DeclaredIn>D4RValue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4RValue</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4RValue.html</Path>
    <Anchor>a2f997dd3fef21a46b2655bb4e44f4821</Anchor>
    <Abstract>Get the value for a RValue object. </Abstract>
    <DeclaredIn>D4RValue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4RValueList</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4RValueList</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4RValueList.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4Sequence</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Abstract>Holds a sequence. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a2585c69c45b9ebec9c63993248eb5b4b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>abdb52463a46e1b10040f245d4ed7642b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac4dc7e8099322b5b403a7d0ae9079006</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>afe010638fd2ca9aab00dd1c21a9e4825</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clauses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>a5dd9d6d34a348bae0dcbc0f69f41bcea</Anchor>
    <Abstract>Access the filter clauses for this D4Sequence. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>afb387a094931d25177c61fd0fff9c833</Anchor>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a287ab9a4deb81a8ced6d8432be647925</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a512a356f31ed6c4c1a368da0b054408a</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4Sequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>a2aaf91e5a87163c7cc9f345c93cd15c7</Anchor>
    <Abstract>The Sequence constructor. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4Sequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>ae702ae63e21cc1751466ca0358ef2ddb</Anchor>
    <Abstract>The Sequence server-side constructor. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4Sequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>aa1c1e3db85c05113ec8f894f147e427a</Anchor>
    <Abstract>The Sequence copy constructor. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af38d3785c4a7cd0063cbb9fc5943333c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>aa0bee29380a5dd0de2b87f13ea7787d7</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>a86cf5e86a736777e4211fd8e82f4bb2a</Anchor>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>acbe77409b7341fd19c03d6bb6e827819</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a1c2eecff00fa7e3af175c711d00fb86e</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>afa6c06dab830b4e089641b44fea8293c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_var_index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac2b4b28ed9d6f435129aa599ab809799</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_vars_iter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a1e6d8224e04d75e3d2a21263957cd42f</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>af9e0a54e85a84702353dacef30ead588</Anchor>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>a714bcce811fd596d88cd81c104e928c1</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_linear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af26f89e9c0732a9c32bd5e15d716a7d7</Anchor>
    <Abstract>Check to see whether this variable can be printed simply. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>afd54c5799e2d87fde4f1a28cdd5ff95d</Anchor>
    <Abstract>The number of elements in a Sequence object. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8a0000be2a244e3e07abda3020af8800</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a0f130e129b06773a9f3c94e3b492bb5c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab7fb094be8da2a9f80f6d3b85e452934</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a6c2c4d7cbe1d6239c037272ec865f80b</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aa7f9cce8ca18461af332aab61123bf23</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>a12be119aa3e3ef128a213c3c3ed162d2</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a32de0413045173aa8803f540a6cea39b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a7bbe6beabd94f576140e132e7a1017ff</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab775a5e7e63757ac961b43800a95635f</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>a784f34f6c6c058546d03341a59a4d228</Anchor>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ad0af40e2565972fa44985d173370c264</Anchor>
    <Abstract>simple implementation of read that iterates through vars and calls read on them </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_next_instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>a10c99a2d311fa1db0c4ffd09499d33e6</Anchor>
    <Abstract>Read the next instance of the sequence While the rest of the variables&amp;#39; read() methods are assumed to...</Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>row_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>a01ae73579db91a6d55ace7278ecd58a1</Anchor>
    <Abstract>Get a whole row from the sequence. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>a2fb5f1dea7b57cef2ffb184f4855a3f4</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>aac396e4b859d246caf2a719be66a3cac</Anchor>
    <Abstract>Serialize the values of a D4Sequence This method assumes that the underlying data store cannot/does n...</Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac30becb1ffe7d2cd4cbcd24fc216c9a3</Anchor>
    <Abstract>Set the in_selection property. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>abb2e9c282480cee7f53f7af00618a441</Anchor>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af52e60d8589eed1a18a14e9c6a57db65</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aafbcf9bef6719fe60ac707e02956e09d</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>a1f5efd16cb2c3d0a6f3ef12eb2f0fc67</Anchor>
    <Abstract>Set the internal value. The &amp;#39;values&amp;#39; of a D4Sequence is a vector of vectors of BaseType* objects...</Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a799d2bd8ef9505b1d493d8cd73b72746</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a3affad818961b2e7e984415cdd3c6e9e</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac742b1bf93889e541128b1d123821ee6</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>a6d5152308495305816b986891a7d3529</Anchor>
    <Abstract>Get the values for this D4Sequence This method returns a reference to the values held by the instance...</Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value_ref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>aee7a551768b2b80ad1189c48fd92f832</Anchor>
    <Abstract>Get the sequence values by reference This method returns a reference to the D4Sequence&amp;#39;s values...</Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a36a7412da7b5257d7666add726fea1a6</Anchor>
    <Abstract>btp_stack no longer needed; use back pointers (BaseType::get_parent()) </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a68f1779dc328f890062722d90fad084a</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>adeafe3d6c82d07b456a598a7b446c2c6</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a936b38c7c35ffb4fe17c5b8e85bdaaa2</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rbegin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aa025cf546ca35250454653c1ec684d91</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aede7cf5889e101db1ea8f22c3a84a5d3</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>ac7d746f2ab07a0779d7c9219dfadf31c</Anchor>
    <Abstract>Get the BaseType pointer to the named variable of a given row. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>ac47ec6d389020cea11e414a7fe2e65b0</Anchor>
    <Abstract>Get the BaseType pointer to the $i^{th}$ variable of row. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a0b1e3ae7195f95c42ca98f42826a1ff5</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_sequence_values</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4Sequence.html</Path>
    <Anchor>aba8a56e291c0aa8058c80be4f956bd74</Anchor>
    <Abstract>Read a Sequence&amp;#39;s value into memory. </Abstract>
    <DeclaredIn>D4Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4StreamMarshaller</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Abstract>Marshaller that knows how to marshal/serialize dap data objects to a C++ iostream using DAP4&amp;#39;s receiv...</Abstract>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checksum_update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Anchor>ae2d562a21a2631f32f305eb387817014</Anchor>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4StreamMarshaller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Anchor>a978005078f2c0810e424a97dcf9f3317</Anchor>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Anchor>a92b392f76e951b1611796870b82a3af9</Anchor>
    <Abstract>dump the contents of this object to the specified ostream </Abstract>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Anchor>af8ab8224637c2c673b59baa6dd583759</Anchor>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Anchor>a16a0f121e713cb391fe00284f6c656c4</Anchor>
    <Abstract>Write the checksum Write the checksum for the data sent since the last call to reset_checksum() to th...</Abstract>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Anchor>a9ac90afeac1465d2c35719ede1e3c0ec</Anchor>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Anchor>a8f6b04b483ed9847e4e36969af2a08e0</Anchor>
    <Abstract>Write a fixed size vector. </Abstract>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Anchor>af8ee88d2bbe84932a14719c7b176167d</Anchor>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_float32</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Anchor>a6fb8d61bd9c50d6e6821d849e02d9fb5</Anchor>
    <Abstract>Write a fixed size vector. </Abstract>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_float64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Anchor>af2513d572ee927a7ffc98ab4a271fac6</Anchor>
    <Abstract>Write a fixed size vector of float64s. </Abstract>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_part</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Anchor>a792123584b2e6700a8f61663ebbf0460</Anchor>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Anchor>a20af2f5bb5f046c1749b4dad380047ed</Anchor>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamMarshaller.html</Path>
    <Anchor>a4009f8aba9d7c19ae464af849c504177</Anchor>
    <DeclaredIn>D4StreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::D4StreamUnMarshaller</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::D4StreamUnMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamUnMarshaller.html</Path>
    <Abstract>Read data from the stream made by D4StreamMarshaller. </Abstract>
    <DeclaredIn>D4StreamUnMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4StreamUnMarshaller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamUnMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamUnMarshaller.html</Path>
    <Anchor>a5a42def8c559570e04f46ea6feba7efa</Anchor>
    <Abstract>Build a DAP4 Stream unMarshaller. </Abstract>
    <DeclaredIn>D4StreamUnMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D4StreamUnMarshaller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamUnMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamUnMarshaller.html</Path>
    <Anchor>afcf81b26351507aa4ed3b011648646b6</Anchor>
    <DeclaredIn>D4StreamUnMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamUnMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamUnMarshaller.html</Path>
    <Anchor>ab25aaee0813767bad8309e21945fe8fb</Anchor>
    <Abstract>dump the contents of this object to the specified ostream </Abstract>
    <DeclaredIn>D4StreamUnMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamUnMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamUnMarshaller.html</Path>
    <Anchor>a891d4d6570feaac2cf6558940b0c82ed</Anchor>
    <DeclaredIn>D4StreamUnMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_opaque_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamUnMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamUnMarshaller.html</Path>
    <Anchor>a98fcfd8205bc819fc4548acba9402946</Anchor>
    <DeclaredIn>D4StreamUnMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_source_big_endian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::D4StreamUnMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1D4StreamUnMarshaller.html</Path>
    <Anchor>a476fdcae5c5b7a077548fa138275b842</Anchor>
    <Abstract>Is the data source we are reading from a big-endian machine? We need this because the value of the CR...</Abstract>
    <DeclaredIn>D4StreamUnMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::DAPCache3</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Abstract>Implementation of a caching mechanism for compressed data. This cache uses simple advisory locking fo...</Abstract>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cache_too_big</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>a485d7a65317308cefff252998acdd142</Anchor>
    <Abstract>look at the cache size; is it too large? Look at the cache size and see if it is too big...</Abstract>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create_and_lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>afcf4ad0cb6808bf453a262d29b8f6169</Anchor>
    <Abstract>Create a file in the cache and lock it for write access. If the file does not exist, make it, open it for read-write access and get an exclusive lock on it. The locking operation blocks, although that should never happen. </Abstract>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DapObj</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DapObj.html</Path>
    <Anchor>a51e52c3fbaad17173676a8bd48d16047</Anchor>
    <Abstract>dump the contents of this object to the specified ostream </Abstract>
    <DeclaredIn>DapObj.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>a7c688942b296c46d7977e4f87a7220e0</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exclusive_to_shared_lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>a89b43f4929a90b4708c155257b40fae2</Anchor>
    <Abstract>Transfer from an exclusive lock to a shared lock. If the file has an exclusive write lock on it...</Abstract>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_cache_file_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>a3620d839ba6727d0245c61541ef8e6d0</Anchor>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_cache_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>a20cccf6a9c84957acf358418f2f920fe</Anchor>
    <Abstract>Get the cache size. Read the size information from the cache info file and return it...</Abstract>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_read_lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>a5065a7f6678bdb34ba3e9615e9f5554e</Anchor>
    <Abstract>Get a read-only lock on the file if it exists. </Abstract>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lock_cache_read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>a8b68e963914b0fe307a37b86a6986599</Anchor>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lock_cache_write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>af75c177ee450c8f18e3570c0ebefd8ac</Anchor>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>purge_file</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>a48cd52daa0ae17a1b3abc84473d0e66e</Anchor>
    <Abstract>Purge a single file from the cache. </Abstract>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unlock_and_close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>a782bf630f76e5bcab4c356db6101d346</Anchor>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unlock_cache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>a72f2d56a33176ac93ade3bf16c6c7ec6</Anchor>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update_and_purge</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>ae115f42c90bdadc1e6700994c85c9176</Anchor>
    <Abstract>Purge files from the cache. </Abstract>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update_cache_info</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>ac3cc2b1e37e3c54080bb38d1abbc3b60</Anchor>
    <Abstract>Update the cache info file to include &amp;#39;target&amp;#39;. </Abstract>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DAPCache3</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAPCache3.html</Path>
    <Anchor>adfa607870d67dba981060b5fd4b0b768</Anchor>
    <DeclaredIn>DAPCache3.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::DapIndent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::DapIndent</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DapIndent.html</Path>
    <Abstract>class with static methods to help with indentation of debug information. </Abstract>
    <DeclaredIn>DapIndent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::DapObj</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::DapObj</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DapObj.html</Path>
    <Abstract>libdap base object for common functionality of libdap objects </Abstract>
    <DeclaredIn>DapObj.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DapObj</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DapObj.html</Path>
    <Anchor>a51e52c3fbaad17173676a8bd48d16047</Anchor>
    <Abstract>dump the contents of this object to the specified ostream </Abstract>
    <DeclaredIn>DapObj.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::DapXmlNamspaces</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::DapXmlNamspaces</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DapXmlNamspaces.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDapNamespaceString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DapXmlNamspaces</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DapXmlNamspaces.html</Path>
    <Anchor>aa0a6679dce20e370363fdecc3e3db900</Anchor>
    <DeclaredIn>DapXmlNamespaces.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGrddlTransformation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DapXmlNamspaces</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DapXmlNamspaces.html</Path>
    <Anchor>a87412eeeda4437acaace734d57fd2340</Anchor>
    <DeclaredIn>DapXmlNamespaces.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchemaLocationDeclarationString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DapXmlNamspaces</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DapXmlNamspaces.html</Path>
    <Anchor>aa658834413eb190efdf5b5fdc1cf3f48</Anchor>
    <DeclaredIn>DapXmlNamespaces.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchemaLocationString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DapXmlNamspaces</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DapXmlNamspaces.html</Path>
    <Anchor>abc94ce74db1226a909f3c7af182fd45b</Anchor>
    <DeclaredIn>DapXmlNamespaces.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXmlNamespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DapXmlNamspaces</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DapXmlNamspaces.html</Path>
    <Anchor>ac9d92de72bc32998a15d5a3568a5b791</Anchor>
    <DeclaredIn>DapXmlNamespaces.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXmlXsiNamespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DapXmlNamspaces</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DapXmlNamspaces.html</Path>
    <Anchor>af5894367a3b41eb87352e3c473efb5c8</Anchor>
    <DeclaredIn>DapXmlNamespaces.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::DAS</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Abstract>Hold attribute data for a DAP2 dataset. </Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>container</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>ae5d31b2dd7b948ed3b1fa71db3fa32eb</Anchor>
    <Abstract>Returns the current attribute container when multiple files used to build this DAS. </Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>container_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>afbb88a74e1fcfa857526019e4f730b57</Anchor>
    <Abstract>Returns the name of the current attribute container when multiple files used to build this DAS...</Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>container_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>a46a47320689bd71f2f640de1848e958c</Anchor>
    <Abstract>Sets the name of the current attribute container when multiple files used to build this DAS...</Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>a95501eff38ff4c1078a9d659fc6bd14b</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>aee2b84645cf0825b20e0e68cca07bd2f</Anchor>
    <Abstract>erase all attributes in this DAS </Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>af4463849acea7b327626fc6f5f58da28</Anchor>
    <Abstract>Returns the name of the referenced variable attribute table. </Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>a6b096a1c76874f7338a8e4a1d17ea724</Anchor>
    <Abstract>Returns the number of attributes in the current attribute table. </Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>ac0cd00dbb4425986999832275ce84303</Anchor>
    <Abstract>Returns the referenced variable attribute table. </Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>a64edb34eb9e89df6f5b1cd383319afde</Anchor>
    <Abstract>Returns the variable attribute table with the given name. </Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_top_level_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>a3bce04e836fabf8b0303e6a2dfd8664b</Anchor>
    <Abstract>Returns the top most set of attributes. </Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>a8983b961e6fba3a6fd33ffcfd944eaf2</Anchor>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>a32e72f6ecc303f270e40724dc7d3dfb7</Anchor>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>a0f2d73b7f882231e2ff452cb4e89c113</Anchor>
    <Abstract>Returns a reference to the attribute table for the first variable. </Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>a9a9c295e437408d7c91641f8d8dd23f7</Anchor>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>a77e38a71ab41ab58fd098603e1cd9cb8</Anchor>
    <Abstract>Adds a variable attribute table to the DAS or the current dataset container attribute table...</Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>aa84ac295a96a12f9f083a8210732f5a8</Anchor>
    <Abstract>Reads a DAS from the named file. </Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>a24a6bf97aae19d9d05f8172b424b11e2</Anchor>
    <Abstract>Read attributes from a file descriptor. </Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DAS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DAS.html</Path>
    <Anchor>a9afb27cb11b659ec8252c04b68935ba8</Anchor>
    <Abstract>Reads a DAS from an open file descriptor. </Abstract>
    <DeclaredIn>DAS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::DataDDS</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::DataDDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DataDDS.html</Path>
    <Abstract>Holds a DAP2 DDS. </Abstract>
    <DeclaredIn>DataDDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>ade87418e97ee5c7efd92279cd41e421c</Anchor>
    <Abstract>Adds a copy of the variable to the DDS. Using the ptr_duplicate() method, perform a deep copy on the ...</Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a0a9c873e5cbd8e75b4427875a38455bd</Anchor>
    <Abstract>Adds the variable to the DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a0d1bf35c18c77a15bb266a895f99f1c6</Anchor>
    <Abstract>Check the semantics of each of the variables represented in the DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataDDS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DataDDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DataDDS.html</Path>
    <Anchor>a726223338475f0ad01315475b358c0c6</Anchor>
    <Abstract>Make an instance of DataDDS A DataDDS instance is a DDS with additional information about the version...</Abstract>
    <DeclaredIn>DataDDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a7030e5bf19371742219f14d6b3aeeedf</Anchor>
    <Abstract>Removes a variable from the DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>ac06f060770215ad790aa5437e567a215</Anchor>
    <Abstract>Removes a variable from the DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a6ae053eca0eadcfa1368da8486bf5e06</Anchor>
    <Abstract>Removes a range of variables from the DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DataDDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DataDDS.html</Path>
    <Anchor>a386e17c1cd81a9c01ebf80489aee7127</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>DataDDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a177e3df069cb0dcb3b30c0dcd236f8b3</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_dap_major</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>aced9c6fed3f727de8bff5d759780b966</Anchor>
    <Abstract>Get the DAP major version as sent by the client. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_dap_minor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a8ecd1a8f622ead2c379567295f6b99a4</Anchor>
    <Abstract>Get the DAP minor version as sent by the client. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_das</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>aa02904d9b79b8d7a92b4f3bcbacc68aa</Anchor>
    <Abstract>Get a DAS object. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_factory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a28fe4bd419122bd8a82ededae0ab4a8b</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_namespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a3c066d28e6aec58d2169a9099d0979a2</Anchor>
    <Abstract>Get the namespace associated with the DDS - likely set only by DDX responses. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_request_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a51bc473c9614419e880378686e7462b2</Anchor>
    <Abstract>Get the estimated response size. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_request_xml_base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>ac2c33bda0c2148fce3da754f27a0323f</Anchor>
    <Abstract>Get the URL that will return this DDS/DDX/DataThing. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_response_limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>af37da63ace68d6f07649913ac7ab95d2</Anchor>
    <Abstract>Get the maximum response size, in Bytes. Zero indicates no limit. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_var_index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a5161e73a84f49c759bd411c8a3c3c356</Anchor>
    <Abstract>Get a variable. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_vars_iter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a415f3083d3864eb04d6508772b3c4128</Anchor>
    <Abstract>Get an iterator. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DataDDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DataDDS.html</Path>
    <Anchor>a1c8b566c9413d7f50a9bcea1a4b23d46</Anchor>
    <Abstract>Get the server version string, unparsed. </Abstract>
    <DeclaredIn>DataDDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_version_major</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DataDDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DataDDS.html</Path>
    <Anchor>a88cab0c2f0a783017691a47f7067c254</Anchor>
    <Abstract>Returns the major version number. </Abstract>
    <DeclaredIn>DataDDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_version_minor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DataDDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DataDDS.html</Path>
    <Anchor>ab86723ce18922f12e0d24e7dcb0579c7</Anchor>
    <Abstract>Returns the minor version number. </Abstract>
    <DeclaredIn>DataDDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a828c46d43447678bd736135946c9bacc</Anchor>
    <Abstract>Insert a variable before the referenced element. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_var_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>abf72254ae41d26940b300c792611fa4e</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mark</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a88c063f273e5aa68b38df4d8e09fb426</Anchor>
    <Abstract>Mark the send_p flag of the named variable to state. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mark_all</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a03c7fb8494b890e227279e70ba4b483e</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a3e99a99da58051c745cc8a3ab82e3b38</Anchor>
    <Abstract>Returns the number of variables in the DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a733c8e49ed42ab47d74afe68056340e6</Anchor>
    <Abstract>Parse a DDS from a file with the given d_name. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a3af2c3d3707f1a9c91d9c00937bb7325</Anchor>
    <Abstract>Parse a DDS from a file indicated by the input file descriptor. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a02857d9355cd01dec621ae0bdf453075</Anchor>
    <Abstract>Parse a DDS from a file indicated by the input file descriptor. Read the persistent representation of...</Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a471a9e61f7154518b040a7818fa5a2b5</Anchor>
    <Abstract>Print the entire DDS to the specified file. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a535b5900c31f0038061f4aef5fa1c6c1</Anchor>
    <Abstract>Print the entire DDS to the specified ostream. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_constrained</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>aac3dca048c1d085d72b44df8b7088cd5</Anchor>
    <Abstract>Print a constrained DDS to the specified file. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_constrained</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>ab2e1cacd542373312d5154565b3c1571</Anchor>
    <Abstract>Print a constrained DDS to the specified ostream. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_das</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>afb0339f6ff59ad01a00cf132d68cb548</Anchor>
    <Abstract>write the DAS response given the attribute information in the DDS </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dmr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a06da8fda5e65e039be2000f8fd22d295</Anchor>
    <Abstract>Print the DAP4 DMR object using a DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a80902a2bd86bd08392abbd3178a49b8b</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>af319354a044d02ea89732160131004dc</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>af1b1fca603ab8d48220218a7771d064c</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_dap_major</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a03062495c46ed3fad9fa0a5f6f6e8d00</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_dap_minor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a358929d8f517dcdfe439037fb402351b</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_dap_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>adcb80ef551e544b1cf527163cf54a30a</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_dap_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a38cc72c3b47c508d597535b9c9a39c37</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_factory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>abd73e1da6d32409062399c6e3333814a</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_namespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a0d1c1e04bc651072a5a56210d86dd801</Anchor>
    <Abstract>Set the namespace for this DDS/DDX object/response. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_request_xml_base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a1872d99f10b845eb15960916229a2457</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_response_limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a1d8dc5bcfaf287b360a10857837da952</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DataDDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DataDDS.html</Path>
    <Anchor>a971a9fa89f7a210c2d6fd2207a0041e5</Anchor>
    <DeclaredIn>DataDDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tag_nested_sequences</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a9d4421c2ccfdbc5ebd4a7d963ab53795</Anchor>
    <Abstract>Traverse DDS, set Sequence leaf nodes. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a2810a944fbdc7d21b08f2d8c19022b52</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a74c67b99babe3317a0f76c8d8f7ba37a</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>ab53f39cffc45142b4cb38117e5650487</Anchor>
    <Abstract>Find the variable with the given d_name. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>aac98f248cd5730a8769f9d71af9788d3</Anchor>
    <Abstract>Return an iterator to the first variable. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>ad204bbd6eed8d440fb996f41bc986058</Anchor>
    <Abstract>Return an iterator. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rbegin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a395947ea7f5abab45e7bfe7541ec9dc2</Anchor>
    <Abstract>Return a reverse iterator. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a098d88f09002ad80e27acdb81a52659e</Anchor>
    <Abstract>Return a reverse iterator. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_dataset_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a60042aabde37ccaefd56174641284673</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_dataset_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a0138ce1c3b26968f968a6b723ec70dfb</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a1106220194c07459b481a2c190f62482</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a3dc8062cbb44db0d9b5f47b1109effd9</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>container_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>aaca262d193346e04d4a6caa7acd117e2</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>container_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a025d5fef84ebc2d958a59e4297883d20</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>container</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>add7c78964a7574239e2d3dd6717a0f31</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::DDS</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>ade87418e97ee5c7efd92279cd41e421c</Anchor>
    <Abstract>Adds a copy of the variable to the DDS. Using the ptr_duplicate() method, perform a deep copy on the ...</Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a0a9c873e5cbd8e75b4427875a38455bd</Anchor>
    <Abstract>Adds the variable to the DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a0d1bf35c18c77a15bb266a895f99f1c6</Anchor>
    <Abstract>Check the semantics of each of the variables represented in the DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DDS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a9c1073a70ad827f48791d62c472399e3</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DDS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a4baeb0eea6ebee7c0ed684817aca1f27</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DDS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>aee64217da3a62758690e62767e25168d</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a7030e5bf19371742219f14d6b3aeeedf</Anchor>
    <Abstract>Removes a variable from the DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>ac06f060770215ad790aa5437e567a215</Anchor>
    <Abstract>Removes a variable from the DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a6ae053eca0eadcfa1368da8486bf5e06</Anchor>
    <Abstract>Removes a range of variables from the DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>afb88b506187aac19b45cfe8b7d28af86</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a177e3df069cb0dcb3b30c0dcd236f8b3</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_dap_major</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>aced9c6fed3f727de8bff5d759780b966</Anchor>
    <Abstract>Get the DAP major version as sent by the client. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_dap_minor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a8ecd1a8f622ead2c379567295f6b99a4</Anchor>
    <Abstract>Get the DAP minor version as sent by the client. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_das</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>aa02904d9b79b8d7a92b4f3bcbacc68aa</Anchor>
    <Abstract>Get a DAS object. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_factory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a28fe4bd419122bd8a82ededae0ab4a8b</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_namespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a3c066d28e6aec58d2169a9099d0979a2</Anchor>
    <Abstract>Get the namespace associated with the DDS - likely set only by DDX responses. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_request_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a51bc473c9614419e880378686e7462b2</Anchor>
    <Abstract>Get the estimated response size. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_request_xml_base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>ac2c33bda0c2148fce3da754f27a0323f</Anchor>
    <Abstract>Get the URL that will return this DDS/DDX/DataThing. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_response_limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>af37da63ace68d6f07649913ac7ab95d2</Anchor>
    <Abstract>Get the maximum response size, in Bytes. Zero indicates no limit. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_var_index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a5161e73a84f49c759bd411c8a3c3c356</Anchor>
    <Abstract>Get a variable. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_vars_iter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a415f3083d3864eb04d6508772b3c4128</Anchor>
    <Abstract>Get an iterator. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a828c46d43447678bd736135946c9bacc</Anchor>
    <Abstract>Insert a variable before the referenced element. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_var_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>abf72254ae41d26940b300c792611fa4e</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mark</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a88c063f273e5aa68b38df4d8e09fb426</Anchor>
    <Abstract>Mark the send_p flag of the named variable to state. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mark_all</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a03c7fb8494b890e227279e70ba4b483e</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a3e99a99da58051c745cc8a3ab82e3b38</Anchor>
    <Abstract>Returns the number of variables in the DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a733c8e49ed42ab47d74afe68056340e6</Anchor>
    <Abstract>Parse a DDS from a file with the given d_name. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a3af2c3d3707f1a9c91d9c00937bb7325</Anchor>
    <Abstract>Parse a DDS from a file indicated by the input file descriptor. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a02857d9355cd01dec621ae0bdf453075</Anchor>
    <Abstract>Parse a DDS from a file indicated by the input file descriptor. Read the persistent representation of...</Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a471a9e61f7154518b040a7818fa5a2b5</Anchor>
    <Abstract>Print the entire DDS to the specified file. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a535b5900c31f0038061f4aef5fa1c6c1</Anchor>
    <Abstract>Print the entire DDS to the specified ostream. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_constrained</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>aac3dca048c1d085d72b44df8b7088cd5</Anchor>
    <Abstract>Print a constrained DDS to the specified file. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_constrained</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>ab2e1cacd542373312d5154565b3c1571</Anchor>
    <Abstract>Print a constrained DDS to the specified ostream. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_das</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>afb0339f6ff59ad01a00cf132d68cb548</Anchor>
    <Abstract>write the DAS response given the attribute information in the DDS </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dmr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a06da8fda5e65e039be2000f8fd22d295</Anchor>
    <Abstract>Print the DAP4 DMR object using a DDS. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a80902a2bd86bd08392abbd3178a49b8b</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>af319354a044d02ea89732160131004dc</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>af1b1fca603ab8d48220218a7771d064c</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_dap_major</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a03062495c46ed3fad9fa0a5f6f6e8d00</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_dap_minor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a358929d8f517dcdfe439037fb402351b</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_dap_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>adcb80ef551e544b1cf527163cf54a30a</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_dap_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a38cc72c3b47c508d597535b9c9a39c37</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_factory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>abd73e1da6d32409062399c6e3333814a</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_namespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a0d1c1e04bc651072a5a56210d86dd801</Anchor>
    <Abstract>Set the namespace for this DDS/DDX object/response. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_request_xml_base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a1872d99f10b845eb15960916229a2457</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_response_limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a1d8dc5bcfaf287b360a10857837da952</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tag_nested_sequences</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a9d4421c2ccfdbc5ebd4a7d963ab53795</Anchor>
    <Abstract>Traverse DDS, set Sequence leaf nodes. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a2810a944fbdc7d21b08f2d8c19022b52</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a74c67b99babe3317a0f76c8d8f7ba37a</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>ab53f39cffc45142b4cb38117e5650487</Anchor>
    <Abstract>Find the variable with the given d_name. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>aac98f248cd5730a8769f9d71af9788d3</Anchor>
    <Abstract>Return an iterator to the first variable. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>ad204bbd6eed8d440fb996f41bc986058</Anchor>
    <Abstract>Return an iterator. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rbegin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a395947ea7f5abab45e7bfe7541ec9dc2</Anchor>
    <Abstract>Return a reverse iterator. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a098d88f09002ad80e27acdb81a52659e</Anchor>
    <Abstract>Return a reverse iterator. </Abstract>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_dataset_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a60042aabde37ccaefd56174641284673</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_dataset_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a0138ce1c3b26968f968a6b723ec70dfb</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a1106220194c07459b481a2c190f62482</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a3dc8062cbb44db0d9b5f47b1109effd9</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>container_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>aaca262d193346e04d4a6caa7acd117e2</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>container_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>a025d5fef84ebc2d958a59e4297883d20</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>container</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDS</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDS.html</Path>
    <Anchor>add7c78964a7574239e2d3dd6717a0f31</Anchor>
    <DeclaredIn>DDS.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::DDXParseFailed</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::DDXParseFailed</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDXParseFailed.html</Path>
    <DeclaredIn>DDXExceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>aaca0caca09e939602cade604cbc9824f</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ab24a61e4974aae62962a40f9975e674c</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>acf3ab60821773bd8b62284750b02cfc0</Anchor>
    <Abstract>Is the Error object valid? </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ac705b3c1cfab1f7530d66a974eb0e8b6</Anchor>
    <Abstract>Parse an Error object. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a552d711be27e6695854bd2b977a5cf31</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a4c58ef196c2b247bd37529bb7ad6a666</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a47c0f4b6a38d8ca075d1056076d2845d</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a3ca90d33bf1c95529c9eefdfe8646e34</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>accc5eeb469c8c18ec16dbf7fefe3cc41</Anchor>
    <Abstract>The pointer is valid only for the lifetime of the Error instance. jhrg 9/22/20. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::DDXParser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::DDXParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDXParser.html</Path>
    <DeclaredIn>DDXParserSAX2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDXParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDXParser.html</Path>
    <Anchor>ab9b18fbb234851a7047e8fe4d38233b8</Anchor>
    <DeclaredIn>DDXParserSAX2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDXParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDXParser.html</Path>
    <Anchor>a76537c4e78cb5913b2c2f78b9f7cd458</Anchor>
    <Abstract>Read the DDX from a stream instead of a file. </Abstract>
    <DeclaredIn>DDXParserSAX2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DDXParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDXParser.html</Path>
    <Anchor>a569959217f75a9e7334bd02e951bd099</Anchor>
    <DeclaredIn>DDXParserSAX2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ddx_start_document</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DDXParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDXParser.html</Path>
    <Anchor>a6c348bc021092a96a4110e979011bbb4</Anchor>
    <DeclaredIn>DDXParserSAX2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ddx_end_document</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DDXParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDXParser.html</Path>
    <Anchor>ac17cd783fde5a64b25ea052b20c58e23</Anchor>
    <DeclaredIn>DDXParserSAX2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ddx_get_characters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DDXParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDXParser.html</Path>
    <Anchor>a397d57776a44c3f4af9981f9e5352f6e</Anchor>
    <DeclaredIn>DDXParserSAX2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ddx_ignoreable_whitespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DDXParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDXParser.html</Path>
    <Anchor>a2a2083b22105ff5d8269642c37e0d429</Anchor>
    <DeclaredIn>DDXParserSAX2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ddx_get_cdata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DDXParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDXParser.html</Path>
    <Anchor>ac3d7aedee1616e457ccc507c57e8b156</Anchor>
    <DeclaredIn>DDXParserSAX2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ddx_get_entity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DDXParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDXParser.html</Path>
    <Anchor>afaa8276f50340b319d9aa6613bb6014b</Anchor>
    <DeclaredIn>DDXParserSAX2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ddx_fatal_error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::DDXParser</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DDXParser.html</Path>
    <Anchor>a05cf7e51b13e0ecb78008db76f3b131e</Anchor>
    <DeclaredIn>DDXParserSAX2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::DMR</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_using_dds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a955fff9d3339f3b72580ecc495640f36</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DMR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>af1bd5ebee7ec448c98d55c006178a2f7</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DMR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a32cd8e199dbe1ff6de21fe6ead07ed5d</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DMR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>ab5662afa1f91fbb97fa279498959245c</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DMR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a38543e91dc011b905e186753f3b0c387</Anchor>
    <Abstract>Build a DMR using a DAP2 DDS. </Abstract>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a64aecb065a2df76d59494a9b016076a5</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_namespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a394c0eac5282eb5d660145fe2361c19f</Anchor>
    <Abstract>Get the namespace associated with the DMR. </Abstract>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDDS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a0a8f854d9ab41ce5f212e0ef666e5fca</Anchor>
    <Abstract>Build a DDS from a DMR. </Abstract>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>abd615e04485de5ed0680eb662bec8842</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>afb5a4eaa1681c1a594022ea17f58b656</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>aa3b8799bbfd1db2b93c72dbd271a8724</Anchor>
    <Abstract>Get the estimated response size, in kilo bytes. </Abstract>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request_xml_base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a4884c28f2f91d747f94d6946b6c6e4d8</Anchor>
    <Abstract>Get the URL that will return this DMR. </Abstract>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>response_limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a1a4db5f5e76e824efb67268ea05b9cfe</Anchor>
    <Abstract>Get the maximum response size, in KB. Zero indicates no limit. </Abstract>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>root</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a9d76d4fe1ae853c98d0cc783c4636316</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_dap_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a2cc86493e515e990a7ea5a71fef38f6d</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_namespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>acd9202bbb351dd09aded3d89432325de</Anchor>
    <Abstract>Set the namespace for this DMR. </Abstract>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_request_xml_base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>ade8d164421de4f11a01f66b81ed5acb4</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_response_limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a3116407e0a666d94059c97a9c0b1ca11</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DMR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a798392d82895753cc8fc55fcc0e1dff4</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a184f08e2119726b02c1e17c6f0a1e87e</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>factory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>a8fe55cd7ad530103f70fadfb0bede195</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DMR</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DMR.html</Path>
    <Anchor>adab6bba727b8b80aca7d639836c87e0c</Anchor>
    <DeclaredIn>DMR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::DODSFilter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Abstract>Common functions for DODS server filter programs. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DODSFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>aa802f48ceffcaff00634940067a1ba02</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DODSFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>aab6e493b315d390b41f6d6e806c90045</Anchor>
    <Abstract>DODSFilter constructor. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>establish_timeout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a75106d93808b268b9f3ef1ac97c5e551</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_action</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a74f7f411df86c7a57f08f6a311a422fd</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_cache_dir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>adac7f923c25d16410b0f4b73afba08c1</Anchor>
    <Abstract>Get the cache directory. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a08084f202b86f92c50611eec2b929ff3</Anchor>
    <Abstract>Get the constraint expression. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_cgi_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>ab2ddf2af37fcb080e86285721825ae2a</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_das_last_modified_time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>ae4e6c33243d991ad4eefc28d27c50750</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_data_last_modified_time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>af53e6f349847054152c4e1eee63980ff</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_dataset_last_modified_time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a5a7323353dcce227beeb503aeba0f1e1</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_dataset_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>aaae008cb404f7b434b6af72b6b23bcba</Anchor>
    <Abstract>Get the dataset name. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_dataset_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>aa40d06abb824f427fa66314eccd91460</Anchor>
    <Abstract>Get the version information for the dataset. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_dds_last_modified_time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a207b77e0c203ed54251869e4911f0ee8</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_request_if_modified_since</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>aed25e11334c3184da363a4dffc172a29</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_response</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a3a062aefb96045bdba4fd7f4e2d39325</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_timeout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>ada3d864292534694594bdda03f7f9839</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_URL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>ad93a5c5bfef30ab4036cd79d8ff996c0</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_conditional</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>aa9c03b6da01df9fb71baa5b2d973cb39</Anchor>
    <Abstract>Is this request conditional? </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a916548931d78abba139bea6641db6e72</Anchor>
    <Abstract>Print usage information for a filter program. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_das</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a88c4473e601409f5268bf19159242b8c</Anchor>
    <Abstract>Transmit a DAS. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_das</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a7315eee0c3a733e568840784f445aa3c</Anchor>
    <Abstract>Transmit a DAS. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a1ca0cdc66d2eaa77dc7bbe126cb7eb04</Anchor>
    <Abstract>Transmit data. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a4236f7ac38d4499d01bda826fd98bde5</Anchor>
    <Abstract>Transmit data. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_data_ddx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>ac46088698a88e1452b381b18015785d7</Anchor>
    <Abstract>Transmit data. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_dds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>ad84000bbbfbdcd3bf41bab6136e55790</Anchor>
    <Abstract>Transmit a DDS. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_dds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a99f2e1dde433219446073ed3fba41cc0</Anchor>
    <Abstract>Transmit a DDS. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_ddx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>aae5ece89f0fb09dbc8b30f2018e02295</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_ddx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a42e19516994bd9cc154cafed7e5ac3aa</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_version_info</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>abb9505908d58a0c2a058dc4ea6065e8d</Anchor>
    <Abstract>Send version information back to the client program. </Abstract>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_cgi_version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>ad95070bc42a8aff97cb6c626c78480b6</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_response</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>acdf3c3346d326a252d17f5dc346aed5c</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_timeout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a8d9a76bd0ef270d86ef40b7cc4dc03ff</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_URL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a6c1b6941a1a6421607eadd675d341077</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a8ac695c5b7ebe39e2a7c8dd44079f317</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a1420d214791dc0c4bb907cd9f6d967a6</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process_options</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::DODSFilter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1DODSFilter.html</Path>
    <Anchor>a609ed4df55fdf7cc995e3951a1f2ddd0</Anchor>
    <DeclaredIn>DODSFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Error</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Abstract>A class for error processing. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a39c3001623d0eda5d40cf132ac82b00f</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>abc68351bbd6df70d666c4bcb499d338c</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a0d75f4244ed27998bf2e5e031bc1bf4b</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>aaca0caca09e939602cade604cbc9824f</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ab24a61e4974aae62962a40f9975e674c</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>acf3ab60821773bd8b62284750b02cfc0</Anchor>
    <Abstract>Is the Error object valid? </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ac705b3c1cfab1f7530d66a974eb0e8b6</Anchor>
    <Abstract>Parse an Error object. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a552d711be27e6695854bd2b977a5cf31</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a4c58ef196c2b247bd37529bb7ad6a666</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a47c0f4b6a38d8ca075d1056076d2845d</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a3ca90d33bf1c95529c9eefdfe8646e34</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>accc5eeb469c8c18ec16dbf7fefe3cc41</Anchor>
    <Abstract>The pointer is valid only for the lifetime of the Error instance. jhrg 9/22/20. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::EventHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1EventHandler.html</Path>
    <DeclaredIn>EventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle_signal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1EventHandler.html</Path>
    <Anchor>a9cb4e0ec28ce8562067c1a9103f93559</Anchor>
    <DeclaredIn>EventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1EventHandler.html</Path>
    <Anchor>a3124eab6cce13c78e66bda0f8724f394</Anchor>
    <DeclaredIn>EventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::fdinbuf</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::fdinbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fdinbuf.html</Path>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fdinbuf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::fdinbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fdinbuf.html</Path>
    <Anchor>aa776f5ddbe7e5d03dee835bbcd5f44b7</Anchor>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~fdinbuf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::fdinbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fdinbuf.html</Path>
    <Anchor>afa35aa6df7d9c0bd0fdd9e096fa65225</Anchor>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>underflow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::fdinbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fdinbuf.html</Path>
    <Anchor>ac9990736a27a4538332f1b30b331a45b</Anchor>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::fdistream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::fdistream</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fdistream.html</Path>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::fdostream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::fdostream</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fdostream.html</Path>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fdostream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::fdostream</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fdostream.html</Path>
    <Anchor>aa9d9a229c670a71c18645ed782d8dabc</Anchor>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::fdoutbuf</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::fdoutbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fdoutbuf.html</Path>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fdoutbuf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::fdoutbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fdoutbuf.html</Path>
    <Anchor>ad9660035f6a20e351be2d90dc8614ff4</Anchor>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~fdoutbuf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::fdoutbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fdoutbuf.html</Path>
    <Anchor>ac4ea28a81df0a1104ccf80a207a335ca</Anchor>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overflow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::fdoutbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fdoutbuf.html</Path>
    <Anchor>a4b9aa160b729361664b1db56be71989e</Anchor>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::fdoutbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fdoutbuf.html</Path>
    <Anchor>a12720ae836a467f70edd5abcac5551e7</Anchor>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xsputn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::fdoutbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fdoutbuf.html</Path>
    <Anchor>a753ce8a08038d4a697fcd25a7be9e31d</Anchor>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Float32</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Abstract>Holds a 32-bit floating point value. </Abstract>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>af6f943ec5481067249a6b56ec57c6ec5</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>a0e7dc43c3ed796b87941ba4a70635820</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>a37db8a37ba94af597cd3cfbc6e31f20f</Anchor>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>a8c274b30cfb8ebcb34ccecae15438da1</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>a08debecb23f1026013ca0b1a2a866753</Anchor>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>abc04a7fe1914803c9854f0a26635c81f</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Float32</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>a440340df1382b7a5ddb0c5de7c690d39</Anchor>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Float32</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>abb78eb0831332e4203c02d587bdc622c</Anchor>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>accebf037e94f4e455cce505295c4cb0a</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>a4dcf48f6faa3d8b00655d18d396391f5</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>a16d3bc5792e80d6bf660416391f81dde</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>a05e8f21ce016d9bea6b572a900e4d473</Anchor>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>af2aa447cb5128232e6f7cd4d7b3cac53</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>a4fa3abf9221449b4254f0e005429667a</Anchor>
    <Abstract>Serialize an Int8. </Abstract>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>a3204d0d25e857aeefc00b36065e5bde8</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>a5d9d9573f17e8fdd16aa07ee8c6dca5d</Anchor>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float32.html</Path>
    <Anchor>ae9e5884f35ed3c99e6f0ab22c7dae3ef</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>Float32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Float64</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Abstract>Holds a 64-bit (double precision) floating point value. </Abstract>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>a34faaf7e5c2f5d3ed0010aca6bdac3ba</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>a07e2562d92832ce1ea1ec6673f99ec30</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>a157203407e1db27b876b9fceacfbf375</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>ac58d25ee3cc87aaa1608322f9fbe5962</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>a7bcd1b10ab54094640b87b25308eed98</Anchor>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>af90cf75012ca7573411ac9da4e55cacf</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Float64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>a60797eb0a6d96ba4cac22d687dfb59b6</Anchor>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Float64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>a8ead3377a8a7f64edae16efefa6e4071</Anchor>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>a32114121abfd8b081b4834fb87dc19ac</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>a83adee2778296322406f557c191cd416</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>aa9a669b0fe9efa0d188759a5ace09ab2</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>af0c3dbeab0fb34e94f99b2dbb577fb16</Anchor>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>a1d155177c95e19a1d101de3b54ae1acf</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>ab9180d68989a963df839faf0fab604f8</Anchor>
    <Abstract>Serialize an Int8. </Abstract>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>a65af2862bce9334100736d2eb400aa7b</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>af96b650288179aa3f5fcbcbc215c1721</Anchor>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Float64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Float64.html</Path>
    <Anchor>a1627393eea6b9990f444236e0787774d</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>Float64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::fpinbuf</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::fpinbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fpinbuf.html</Path>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fpinbuf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::fpinbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fpinbuf.html</Path>
    <Anchor>afdd1f4682dc010db945a586b593a795a</Anchor>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~fpinbuf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::fpinbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fpinbuf.html</Path>
    <Anchor>a3c047833a58a99cf540248c68f211cd3</Anchor>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>underflow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::fpinbuf</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fpinbuf.html</Path>
    <Anchor>aaa3e9e18fb090cc4b12849eed3406382</Anchor>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::fpistream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::fpistream</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1fpistream.html</Path>
    <DeclaredIn>fdiostream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Grid</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Abstract>Holds the Grid data type. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>ad24067d02100d7ad77053d2fd9cac680</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>ae8356b6e1b8c6c67718bb9bfefd9f7e8</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>afa0b5bb14fec2675e7fd7da245e95ca1</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>array_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a13f73ec1242460db6be3b7a818c8328f</Anchor>
    <Abstract>Returns the Grid Array. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac4dc7e8099322b5b403a7d0ae9079006</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>ae66a262518b81ff354061528654fae75</Anchor>
    <Abstract>Return true if this Grid is well formed. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_constraint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a3b7ce41c5ab7b86bdb30508d39127600</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>components</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>ad26dc472b37af0abeb540a43fb04d8dc</Anchor>
    <Abstract>Returns the number of components in the Grid object. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a287ab9a4deb81a8ced6d8432be647925</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a512a356f31ed6c4c1a368da0b054408a</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af38d3785c4a7cd0063cbb9fc5943333c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a63763d2bae05463b100e823fb461a784</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a6f4253236d69c3c0ef64343136b5039b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>acf0402fd88c5ab7d1307615f8597d002</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a1c2eecff00fa7e3af175c711d00fb86e</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>afa6c06dab830b4e089641b44fea8293c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_array</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a905ac86a44a9d8ce576056ba244cf558</Anchor>
    <Abstract>Returns the Grid Array. This method returns the array using an Array*, so no cast is required...</Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_map_iter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a30dd7f9fa8a28b4bf6ccd6e94a12b62c</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_var_index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac2b4b28ed9d6f435129aa599ab809799</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_vars_iter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a1e6d8224e04d75e3d2a21263957cd42f</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Grid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a75774a8fe1c7c7ec9a1e48a7d6d2cbc0</Anchor>
    <Abstract>The Grid constructor. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Grid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>adec10faa3280dde1bee9c1bf2eda9038</Anchor>
    <Abstract>The Grid constructor. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Grid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>ad9c190d610f40faee6165467f554fb9a</Anchor>
    <Abstract>The Grid copy constructor. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a065056826ef9c6fb2d08463af9e15a34</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a822a036364c56df5288a55670f51197e</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_dap2_only_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>afef375f10211131b5fbea773b0011e5c</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_linear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af26f89e9c0732a9c32bd5e15d716a7d7</Anchor>
    <Abstract>Check to see whether this variable can be printed simply. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a2e9d2e436c0ff138a977dbba54c018eb</Anchor>
    <Abstract>Returns an iterator referencing the first Map vector. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>aaebbf2a5329ec01b6527b4bafde87837</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_rbegin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>afdddc12f67c7f4f6bb6c78d55a2f75b2</Anchor>
    <Abstract>Returns an iterator referencing the first Map vector. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_rend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>ab821c8beb7c653ce38842fcb27d644ca</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8a0000be2a244e3e07abda3020af8800</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend_map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a5a39d31cad6c5a9437bc07b696bb8db4</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a0f130e129b06773a9f3c94e3b492bb5c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a5a239b053928636e13e3a478faf8e334</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a1c0bcf75f8474ef140d133f47a78ed67</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a5322f6b5ce04e5d00347bf50b341f4e6</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>abc90f12653afefe765bea1917dcecc08</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a29d53347639f843c164f19e3a3f19b7d</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a7e55419705f8a64c5d86f3b0a236709e</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>adb96de26565e6498cb0e8df6789a9f1c</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projection_yields_grid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>aa737cef63a1b9c8b8b0952fcb22a621b</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a0c4a5aefa252d3eab94b8a0ce5232dc6</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ad0af40e2565972fa44985d173370c264</Anchor>
    <Abstract>simple implementation of read that iterates through vars and calls read on them </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a64268840654a0b37a15ccc601dbcfd33</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab868fe97d5075b702bd084c2e9540913</Anchor>
    <Abstract>Serialize a Constructor. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_array</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a35412b1401ff8795504af40be6d09aa1</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac30becb1ffe7d2cd4cbcd24fc216c9a3</Anchor>
    <Abstract>Set the in_selection property. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af52e60d8589eed1a18a14e9c6a57db65</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aafbcf9bef6719fe60ac707e02956e09d</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a9483bb65505c86e3fc44a9b856a55323</Anchor>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Grid</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Grid.html</Path>
    <Anchor>a160c21980788f0b732f2562feff971ef</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>Grid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac742b1bf93889e541128b1d123821ee6</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a36a7412da7b5257d7666add726fea1a6</Anchor>
    <Abstract>btp_stack no longer needed; use back pointers (BaseType::get_parent()) </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a68f1779dc328f890062722d90fad084a</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>adeafe3d6c82d07b456a598a7b446c2c6</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a936b38c7c35ffb4fe17c5b8e85bdaaa2</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rbegin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aa025cf546ca35250454653c1ec684d91</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aede7cf5889e101db1ea8f22c3a84a5d3</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a0b1e3ae7195f95c42ca98f42826a1ff5</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::HTTPCache</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cache_response</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a0cbaded239e55f3e328448adcc180365</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_cached_response</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>aefcbe732444c6160c839b9e2c3468b1d</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_cached_response</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a151026836e9f397857dd76aa080ddfef</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_cached_response</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a6f3bbb3dc0b1e85f32e2291006ff858e</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_conditional_request_headers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a635a277480a95d7d37d0e9fddd480362</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_url_valid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>aa695d43815cc2588458232f37095b780</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>purge_cache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>afee7fca59d1a37f495ea74c95fad600a</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release_cached_response</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a4de0458e4ab0e89049a0f0fa7b819b91</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update_response</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>ab0b1e3fb63084b93e277c53d189ad6c2</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~HTTPCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>ac8fcde4b345c50bad6c3507dcbd2f447</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a152bdc19fdec15758d9c1a3a029d6900</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_cache_root</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a2c872a03a4065237cf384f778cceb126</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_cache_enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a71aa835c2b38bc0e891f40b5a77c53ce</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_cache_enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>af9960970163436617a8753f95866c5a9</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_cache_disconnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a44857ae03334d09e34cc5b2275669a71</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_cache_disconnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a0745589ca1ed117b11efc52765a25b7e</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_expire_ignored</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a1a8c5f13e82c3038e97eca9979ebd39c</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_max_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>ab2447c27c88ebb29511379ede8ac5b6f</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_max_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a7e89f36cc369c826aa6cd414adc06393</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_max_entry_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a92cc5b035dc08ae2704924002144fa29</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_max_entry_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a66ec8c722b1c82124e697916b73036fe</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_default_expiration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a1ca5c8c205241f62596e283943906386</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_default_expiration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a9b03792f717b8d584e782d6797a1b331</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_always_validate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>aa9a13a18ec837e891e81823a4d30da47</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_always_validate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a95f59f69a7ca0c9104748e5a7cb07101</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_cache_control</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>ac6823b2de27745c20c7e8d41af5a2088</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_cache_control</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCache</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCache.html</Path>
    <Anchor>a15d15a90105d60b0d743fc90456d223e</Anchor>
    <DeclaredIn>HTTPCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::HTTPCacheInterruptHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::HTTPCacheInterruptHandler</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheInterruptHandler.html</Path>
    <DeclaredIn>HTTPCacheInterruptHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle_signal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheInterruptHandler</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheInterruptHandler.html</Path>
    <Anchor>a61f19f17f5da4f50969494b6f24cdfc7</Anchor>
    <DeclaredIn>HTTPCacheInterruptHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::HTTPCacheResponse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::HTTPCacheResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheResponse.html</Path>
    <DeclaredIn>HTTPCacheResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HTTPCacheResponse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheResponse.html</Path>
    <Anchor>a98dcff76b943f4da0d1a54e43e119938</Anchor>
    <DeclaredIn>HTTPCacheResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HTTPCacheResponse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheResponse.html</Path>
    <Anchor>a319dc8cc6540adbc5c53154ab706cf33</Anchor>
    <DeclaredIn>HTTPCacheResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_cpp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPResponse.html</Path>
    <Anchor>aeb73ee749ec7e6f6b26b8a9985485184</Anchor>
    <DeclaredIn>HTTPResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~HTTPCacheResponse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheResponse.html</Path>
    <Anchor>a3f42de3899515f12b97f20233901d6c7</Anchor>
    <DeclaredIn>HTTPCacheResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::HTTPCacheTable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create_hash_directory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <Anchor>a0f7f6193848fb3ba8ad17082fd95b6c6</Anchor>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create_location</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <Anchor>a0ab52cb3d5d01575977adb33a21b31d2</Anchor>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cache_index_delete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <Anchor>a3e636690b069b3384e908135fcaebd51</Anchor>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cache_index_read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <Anchor>a24e70dae002ffeef9641bb6493109513</Anchor>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cache_index_parse_line</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <Anchor>a48569affedb01e6e0e87343bcc621c0a</Anchor>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cache_index_write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <Anchor>a7cd5a3a24fd0cd41ac0d9a3192075e9c</Anchor>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_entry_to_cache_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <Anchor>a8f5660848048a98454fce23c28de573c</Anchor>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_cache_entry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <Anchor>a85d4438820f0920002f5e77b51900ea9</Anchor>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_entry_from_cache_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <Anchor>ad1b8ffd257ff335b3d87b90600f5bffd</Anchor>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_locked_entry_from_cache_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <Anchor>ac8c8e58c208b8c542b89f500829032a0</Anchor>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_write_locked_entry_from_cache_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <Anchor>a57c01c8b9462f0e0ea6541b7d9fcf2f5</Anchor>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculate_time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <Anchor>a0ca63c76e70064549d128ff8f5951534</Anchor>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse_headers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPCacheTable</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPCacheTable.html</Path>
    <Anchor>a53379f3151fe6b85e85c75c401a14963</Anchor>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::HTTPCacheTable::CacheEntry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::HTTPCacheTable::CacheEntry</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1HTTPCacheTable_1_1CacheEntry.html</Path>
    <DeclaredIn>HTTPCacheTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::HTTPConnect</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::HTTPConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPConnect.html</Path>
    <DeclaredIn>HTTPConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPConnect.html</Path>
    <Anchor>a5e3558838e245a96c9392b33ef4ba298</Anchor>
    <DeclaredIn>HTTPConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HTTPConnect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPConnect.html</Path>
    <Anchor>a0b211b1afe685d706c8d0a235f626a5d</Anchor>
    <DeclaredIn>HTTPConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_cache_enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPConnect.html</Path>
    <Anchor>a1e9a7b25527264a342dbe9c2aff59f2f</Anchor>
    <DeclaredIn>HTTPConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_accept_deflate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPConnect.html</Path>
    <Anchor>a01d67a5afa18a84ef744b8f222094260</Anchor>
    <DeclaredIn>HTTPConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_cache_enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPConnect.html</Path>
    <Anchor>aaf200f19c2a64adc4b17887372dcc595</Anchor>
    <DeclaredIn>HTTPConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_cookie_jar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPConnect.html</Path>
    <Anchor>ac6641c75c291e2908be9caade2eb5547</Anchor>
    <DeclaredIn>HTTPConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_credentials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPConnect.html</Path>
    <Anchor>a84190d0d80154943ee997c4982a7c96a</Anchor>
    <DeclaredIn>HTTPConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_xdap_protocol</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPConnect</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPConnect.html</Path>
    <Anchor>ac232e85c5d2448c66c1a24f62dcbf89a</Anchor>
    <DeclaredIn>HTTPConnect.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::HTTPResponse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::HTTPResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPResponse.html</Path>
    <DeclaredIn>HTTPResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HTTPResponse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPResponse.html</Path>
    <Anchor>afcfa13c872457f0f46af2ef8c3d09baa</Anchor>
    <DeclaredIn>HTTPResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HTTPResponse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPResponse.html</Path>
    <Anchor>a544c05dec998de91e78c9a517041ac3c</Anchor>
    <Abstract>Build a HTTPResponse using a cpp fstream When working with DAP4 responses, use C++ streams for I/0...</Abstract>
    <DeclaredIn>HTTPResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_cpp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPResponse.html</Path>
    <Anchor>aeb73ee749ec7e6f6b26b8a9985485184</Anchor>
    <DeclaredIn>HTTPResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~HTTPResponse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::HTTPResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1HTTPResponse.html</Path>
    <Anchor>aaaa8595779b1608ad1727bce9a308341</Anchor>
    <DeclaredIn>HTTPResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Int16</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Abstract>Holds a 16-bit signed integer value. </Abstract>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>a7b1983c756a0c27942fc2a7563bb5d2e</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>aa413c9da6c53e3bc7a7c3e727b139941</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>ae02bd87bfcc0479c36c1e6b625e0fcdc</Anchor>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>a2f5bf801ac701d4b886c22abd75794df</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>a0f454a350731ba04f593466e6c45551e</Anchor>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>a39829155a76b195e6a9c62e06d50bc0f</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Int16</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>a8221f1fa8aaf054c72059a48e5ec2753</Anchor>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Int16</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>a40e5dd3ede0dce7a1b15320358519d6f</Anchor>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>ad72c7db64b35bf1e8ad8aa7e27526cb9</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>a172f4ff5eb67a2e64c918700406a5f4f</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>ac60b82349f40d252114773c7f6361aaf</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>a2deba43131c5ca63ae81f4f7449b6327</Anchor>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>a3c6904ab6d9679c194c6519dde592892</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>afa863cbbe21b125528965176b3e8498f</Anchor>
    <Abstract>Serialize an Int8. </Abstract>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>ab2c9d7ed6f92e1dbdb08b179943bab4f</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int16.html</Path>
    <Anchor>a4999690c9bc6d0fa42138e10ee33cb4f</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>Int16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Int32</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Abstract>Holds a 32-bit signed integer. </Abstract>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>a56e6f9ece856568be871fab239328912</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>a64d749e3500405c7f6f0ae194cc0fd69</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>ab74be58716d8c3e6d26462dff2a9b565</Anchor>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>aac0c8bdfad94663d57af5f7a571451a4</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>aad1329f624040df27cb880d7e2640a4a</Anchor>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>aaae2d081b7d4d852854648b37441ed4d</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Int32</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>aca0a0d84a219e98c4ebbd7afda49af26</Anchor>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Int32</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>aa965395a50cee7277d9773f762a9c205</Anchor>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>ac319d1cdae57d4fc7bfbd972f2f8d4a1</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>abd206d26908919c73e932a59d02966ba</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>ae8cb63e9eb85cbc3e378267670b0aef5</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>aa7ff77174068c8b33d51d065ed922af4</Anchor>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>ac769546107e556cfdefa0fb4961711e8</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>a8c67aae2fbbbe48c5b6d8049d5af04a2</Anchor>
    <Abstract>Serialize an Int8. </Abstract>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>a8beb52ecacfe72077489b5687db7b9a4</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int32.html</Path>
    <Anchor>a38a592e39c59f44933d490373f6fbe7c</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>Int32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Int64</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Int64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int64.html</Path>
    <Abstract>Holds a64-bit signed integer. </Abstract>
    <DeclaredIn>Int64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int64.html</Path>
    <Anchor>ab18cb68a6ac3fafc03fa223408fd1108</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Int64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int64.html</Path>
    <Anchor>ac066aff6a587475d50ddd60b3279eb17</Anchor>
    <DeclaredIn>Int64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int64.html</Path>
    <Anchor>a8c1a1dddd04b2e892f9efca2058e833d</Anchor>
    <DeclaredIn>Int64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int64.html</Path>
    <Anchor>a63ad042799beb2ccf9a902df4e36d1f6</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Int64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Int64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int64.html</Path>
    <Anchor>a3fb9408eeebf8d532d58f276573aa32e</Anchor>
    <DeclaredIn>Int64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Int64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int64.html</Path>
    <Anchor>a33ab39f101e981b5d097f8f558f3857f</Anchor>
    <DeclaredIn>Int64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int64.html</Path>
    <Anchor>a80a9bdafa15ee063ad3d387cffe36cf1</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>Int64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int64.html</Path>
    <Anchor>a569745a0983529a9e752dc2f221fc45c</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Int64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int64.html</Path>
    <Anchor>a5b550206f8c98647d01660f9f2405408</Anchor>
    <DeclaredIn>Int64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int64.html</Path>
    <Anchor>a540f4af6a2b78079a9b6d4c9edaa10b7</Anchor>
    <Abstract>Serialize an Int8. </Abstract>
    <DeclaredIn>Int64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int64.html</Path>
    <Anchor>ac95e288099ac33fa8a6b0197ef315f08</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>Int64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int64.html</Path>
    <Anchor>a2f157a10955f9b51973863e4683462d6</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>Int64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adc24a735977e28acb0e6f78667c1dd21</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1f27d99250e857efd86ac9db788bbf1b</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Int8</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Int8</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int8.html</Path>
    <Abstract>Holds an 8-bit signed integer value. </Abstract>
    <DeclaredIn>Int8.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int8</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int8.html</Path>
    <Anchor>a3cca62e5feff92761fdaa8f02295c881</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Int8.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int8</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int8.html</Path>
    <Anchor>aba2aa5b603379c089a2dba07442dfcb9</Anchor>
    <DeclaredIn>Int8.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int8</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int8.html</Path>
    <Anchor>a7afc5e4a5c43f76e37a8dcbd7c39799b</Anchor>
    <DeclaredIn>Int8.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int8</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int8.html</Path>
    <Anchor>a0ccf9a858616fc6e67f6764dade84a9b</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Int8.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Int8</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int8</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int8.html</Path>
    <Anchor>a97bcbc8d5851b032caab70db6a8514db</Anchor>
    <DeclaredIn>Int8.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Int8</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int8</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int8.html</Path>
    <Anchor>a916571c6be394d1f30c195094353d4d7</Anchor>
    <DeclaredIn>Int8.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int8</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int8.html</Path>
    <Anchor>a2d63b4ba6571ce6d2c673fe7f9adb59a</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>Int8.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int8</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int8.html</Path>
    <Anchor>a6232678aa95847bee75c063c1175f706</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Int8.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int8</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int8.html</Path>
    <Anchor>a8c468c88483f4d926bb79c26d6e27c65</Anchor>
    <DeclaredIn>Int8.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int8</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int8.html</Path>
    <Anchor>a9825b8d30a147936f4e69e3db56ae1a6</Anchor>
    <Abstract>Serialize an Int8. </Abstract>
    <DeclaredIn>Int8.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int8</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int8.html</Path>
    <Anchor>ad27c8597a1c0d8efdca4f0e844ea1ee0</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>Int8.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Int8</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Int8.html</Path>
    <Anchor>a377dd97f28aa950ba6ff98ffe0d26808</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>Int8.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adc24a735977e28acb0e6f78667c1dd21</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1f27d99250e857efd86ac9db788bbf1b</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::InternalErr</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::InternalErr</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1InternalErr.html</Path>
    <Abstract>A class for software fault reporting. </Abstract>
    <DeclaredIn>InternalErr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>aaca0caca09e939602cade604cbc9824f</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ab24a61e4974aae62962a40f9975e674c</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::InternalErr</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1InternalErr.html</Path>
    <Anchor>ae3487b9f8d63ae20250ba8148689a278</Anchor>
    <Abstract>Is the InternalErr object valid? </Abstract>
    <DeclaredIn>InternalErr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>acf3ab60821773bd8b62284750b02cfc0</Anchor>
    <Abstract>Is the Error object valid? </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ac705b3c1cfab1f7530d66a974eb0e8b6</Anchor>
    <Abstract>Parse an Error object. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a552d711be27e6695854bd2b977a5cf31</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a4c58ef196c2b247bd37529bb7ad6a666</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a47c0f4b6a38d8ca075d1056076d2845d</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a3ca90d33bf1c95529c9eefdfe8646e34</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>accc5eeb469c8c18ec16dbf7fefe3cc41</Anchor>
    <Abstract>The pointer is valid only for the lifetime of the Error instance. jhrg 9/22/20. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Keywords</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Keywords</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Keywords.html</Path>
    <DeclaredIn>Keywords2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_keyword_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Keywords</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Keywords.html</Path>
    <Anchor>a0738caba6444fbf51305f1c53b46c35e</Anchor>
    <DeclaredIn>Keywords2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_keywords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Keywords</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Keywords.html</Path>
    <Anchor>a14a91e22db14749c3d84dec48304ca9e</Anchor>
    <DeclaredIn>Keywords2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>has_keyword</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Keywords</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Keywords.html</Path>
    <Anchor>a6cedb7cd4c9dafbea36ae9d2301ebebd</Anchor>
    <DeclaredIn>Keywords2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_known_keyword</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Keywords</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Keywords.html</Path>
    <Anchor>a8cd25d75f81739917a9898a2155896e7</Anchor>
    <DeclaredIn>Keywords2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse_keywords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Keywords</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Keywords.html</Path>
    <Anchor>acc56ce43a21cce844f2a2de3ecd54e8c</Anchor>
    <DeclaredIn>Keywords2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Locker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Locker</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Locker.html</Path>
    <DeclaredIn>MarshallerThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Locker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Locker</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Locker.html</Path>
    <Anchor>aeeefa18f8a9713d91b830589e5c2b6a9</Anchor>
    <DeclaredIn>MarshallerThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Locker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Locker</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Locker.html</Path>
    <Anchor>a6332fec7611d1507cb7323987ec86845</Anchor>
    <DeclaredIn>MarshallerThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Marshaller</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Marshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Marshaller.html</Path>
    <Abstract>abstract base class used to marshal/serialize dap data objects </Abstract>
    <DeclaredIn>Marshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Marshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Marshaller.html</Path>
    <Anchor>a0e88a4aed6f7fa1908c50695cbf9e2df</Anchor>
    <Abstract>dump the contents of this object to the specified ostream </Abstract>
    <DeclaredIn>Marshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Marshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Marshaller.html</Path>
    <Anchor>a3409a138c4a67bc9dd24a3a2ad6f97db</Anchor>
    <DeclaredIn>Marshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_part</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Marshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Marshaller.html</Path>
    <Anchor>a8b303c96939749f6aca62d0e582909b0</Anchor>
    <DeclaredIn>Marshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Marshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Marshaller.html</Path>
    <Anchor>ae0cd4b847386e89eace23e6b2fc08826</Anchor>
    <DeclaredIn>Marshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::MarshallerThread</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::MarshallerThread</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1MarshallerThread.html</Path>
    <DeclaredIn>MarshallerThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start_thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::MarshallerThread</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1MarshallerThread.html</Path>
    <Anchor>acc8bb280ae10063aca52d5b73000c247</Anchor>
    <DeclaredIn>MarshallerThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start_thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::MarshallerThread</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1MarshallerThread.html</Path>
    <Anchor>a7c22686ec230b6725aa811fe53b53ade</Anchor>
    <DeclaredIn>MarshallerThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::MarshallerThread</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1MarshallerThread.html</Path>
    <Anchor>a441a9808a63322a15845d4522f1eb7a3</Anchor>
    <DeclaredIn>MarshallerThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_thread_part</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::MarshallerThread</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1MarshallerThread.html</Path>
    <Anchor>ac27f444d24f12691842029368c128ea6</Anchor>
    <DeclaredIn>MarshallerThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::NoSuchPrimaryResource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::NoSuchPrimaryResource</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1NoSuchPrimaryResource.html</Path>
    <DeclaredIn>AISExceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>aaca0caca09e939602cade604cbc9824f</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ab24a61e4974aae62962a40f9975e674c</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>acf3ab60821773bd8b62284750b02cfc0</Anchor>
    <Abstract>Is the Error object valid? </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ac705b3c1cfab1f7530d66a974eb0e8b6</Anchor>
    <Abstract>Parse an Error object. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a552d711be27e6695854bd2b977a5cf31</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a4c58ef196c2b247bd37529bb7ad6a666</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a47c0f4b6a38d8ca075d1056076d2845d</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a3ca90d33bf1c95529c9eefdfe8646e34</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>accc5eeb469c8c18ec16dbf7fefe3cc41</Anchor>
    <Abstract>The pointer is valid only for the lifetime of the Error instance. jhrg 9/22/20. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::parser_arg</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::parser_arg</Scope>
    </TokenIdentifier>
    <Path>structlibdap_1_1parser__arg.html</Path>
    <Abstract>Pass parameters by reference to a parser. </Abstract>
    <DeclaredIn>parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::PipeResponse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::PipeResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1PipeResponse.html</Path>
    <Abstract>Encapsulate a response. This class provides special treatment for &amp;#39;stream pipes.&amp;#39; It arranges to clos...</Abstract>
    <DeclaredIn>PipeResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PipeResponse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::PipeResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1PipeResponse.html</Path>
    <Anchor>a37f0a6670887caa96ea5b9381b2e5e10</Anchor>
    <Abstract>Initialize with a stream returned by popen(). </Abstract>
    <DeclaredIn>PipeResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PipeResponse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::PipeResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1PipeResponse.html</Path>
    <Anchor>ae6837a191d34e2b686634e52bee73a4c</Anchor>
    <DeclaredIn>PipeResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::RCReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_no_proxy_for_port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>a21db450d67811148259166705a2ddfae</Anchor>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_proxy_for_proxy_host_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>aac6dd12779e6a81fef84ee7bbb1738dd</Anchor>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_proxy_for_regexp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>a72e1a556abbde9fb05a330c0072bcb0d</Anchor>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_proxy_for_regexp_flags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>acf4d55aa8d41827d8b616a9fe5fb784c</Anchor>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_proxy_server_host</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>a0f5a320d221c226a9dffd58d844d47cb</Anchor>
    <Abstract>Get the proxy host. </Abstract>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_proxy_server_host_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>a99bf90838d13c4f9b7b010129fc11347</Anchor>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_proxy_server_port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>a46ca3c57a3e33c5f873fe26ab150f39c</Anchor>
    <Abstract>Get the proxy port. </Abstract>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_proxy_server_protocol</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>abf8b0c2e7e70bfa96ef1613b2bbeddf0</Anchor>
    <Abstract>Get the proxy server protocol. </Abstract>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_proxy_server_userpw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>a658abf6e30be88545faff67b1f741698</Anchor>
    <Abstract>Get the proxy username and password. </Abstract>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_proxy_for_used</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>ad02ee19bd75bb0747cfee0d70ee1dcc1</Anchor>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_no_proxy_for_port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>a02d730936d88cb18b1d0e012eac28f46</Anchor>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_proxy_for_proxy_host_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>a1bf789ccd96b83babb833e9b9ec6110a</Anchor>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_proxy_for_regexp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>a360d2280601f9dfb17d7c954ca333b40</Anchor>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_proxy_for_regexp_flags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>ade479cf9efffe7aa52652aff13cc365e</Anchor>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_proxy_server_host_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::RCReader</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1RCReader.html</Path>
    <Anchor>a80ac516bfcdd856a512e114f22d22046</Anchor>
    <DeclaredIn>RCReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Regex</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Regex</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Regex.html</Path>
    <DeclaredIn>GNURegex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>match</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Regex</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Regex.html</Path>
    <Anchor>aaf743b4f3528a40f435fa1e55ff51b5f</Anchor>
    <Abstract>Does the pattern match. </Abstract>
    <DeclaredIn>GNURegex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Regex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Regex</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Regex.html</Path>
    <Anchor>add461a940025b957d42d0dbf06d7f7ac</Anchor>
    <DeclaredIn>GNURegex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Regex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Regex</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Regex.html</Path>
    <Anchor>acfe8656faf0ba34834337148fcd64d23</Anchor>
    <DeclaredIn>GNURegex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>search</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Regex</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Regex.html</Path>
    <Anchor>ae1ce41e1da66aa2d9dcad055b619be21</Anchor>
    <Abstract>How much of the string does the pattern match. </Abstract>
    <DeclaredIn>GNURegex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Resource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Resource</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Resource.html</Path>
    <Abstract>Associate a rule with an ancillary resource. </Abstract>
    <DeclaredIn>Resource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_rule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Resource</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Resource.html</Path>
    <Anchor>a1fc9cb3d7ab36cede2e621d0c11abc93</Anchor>
    <DeclaredIn>Resource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Resource</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Resource.html</Path>
    <Anchor>a1be16a2532ccdaac0b996ff5402f1459</Anchor>
    <DeclaredIn>Resource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Resource</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Resource.html</Path>
    <Anchor>a4900c98c095abda49d70e302940abbdc</Anchor>
    <DeclaredIn>Resource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Resource</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Resource.html</Path>
    <Anchor>a762d0f0c90046fd2ae9cf560d4034853</Anchor>
    <DeclaredIn>Resource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Resource</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Resource.html</Path>
    <Anchor>ae00f0e40bbf9b6adad22f7317e760ac8</Anchor>
    <DeclaredIn>Resource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Resource</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Resource.html</Path>
    <Anchor>a2761a9823e5b26e0160cc1f5377e7f42</Anchor>
    <DeclaredIn>Resource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_rule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Resource</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Resource.html</Path>
    <Anchor>a96b702c32c4dd26d303f48c47b1d6748</Anchor>
    <DeclaredIn>Resource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Resource</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Resource.html</Path>
    <Anchor>a369191cef05aefab3c0da0d2c3beb0ed</Anchor>
    <DeclaredIn>Resource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>libdap::Resource</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Resource.html</Path>
    <Anchor>a1a74855fb08b3d9c092487e988d273b0</Anchor>
    <DeclaredIn>Resource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Response</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Response</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Response.html</Path>
    <DeclaredIn>Response.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Response</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Response</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Response.html</Path>
    <Anchor>a00c3edee81b107d3cc9e52952ce4e3e5</Anchor>
    <DeclaredIn>Response.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Response</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Response</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Response.html</Path>
    <Anchor>ad49cacc9050fc52103f285f79b1a71c1</Anchor>
    <DeclaredIn>Response.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::ResponseTooBigErr</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::ResponseTooBigErr</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ResponseTooBigErr.html</Path>
    <DeclaredIn>ResponseTooBigErr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>aaca0caca09e939602cade604cbc9824f</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ab24a61e4974aae62962a40f9975e674c</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>acf3ab60821773bd8b62284750b02cfc0</Anchor>
    <Abstract>Is the Error object valid? </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ac705b3c1cfab1f7530d66a974eb0e8b6</Anchor>
    <Abstract>Parse an Error object. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a552d711be27e6695854bd2b977a5cf31</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a4c58ef196c2b247bd37529bb7ad6a666</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a47c0f4b6a38d8ca075d1056076d2845d</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a3ca90d33bf1c95529c9eefdfe8646e34</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>accc5eeb469c8c18ec16dbf7fefe3cc41</Anchor>
    <Abstract>The pointer is valid only for the lifetime of the Error instance. jhrg 9/22/20. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::rvalue</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::rvalue</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1rvalue.html</Path>
    <DeclaredIn>RValue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bvalue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::rvalue</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1rvalue.html</Path>
    <Anchor>a5ec1d2d66b162aa9ad82b658e70ce7de</Anchor>
    <DeclaredIn>RValue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Sequence</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Abstract>Holds a sequence. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a2585c69c45b9ebec9c63993248eb5b4b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>abdb52463a46e1b10040f245d4ed7642b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac4dc7e8099322b5b403a7d0ae9079006</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>afe010638fd2ca9aab00dd1c21a9e4825</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>ab881dcea1786d36ad3a4ef579ace5805</Anchor>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a287ab9a4deb81a8ced6d8432be647925</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a512a356f31ed6c4c1a368da0b054408a</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af38d3785c4a7cd0063cbb9fc5943333c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a6f4253236d69c3c0ef64343136b5039b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>adf58298f58caf27d467ad41b7ecbb6ec</Anchor>
    <Abstract>Deserialize (read from the network) the entire Sequence. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>a50ff267e44d2df91722116e2acbfd1cb</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a1c2eecff00fa7e3af175c711d00fb86e</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>afa6c06dab830b4e089641b44fea8293c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ending_row_number</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>ae1489f3bc8bb269e51831add438aa392</Anchor>
    <Abstract>Get the ending row number. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_row_stride</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>ae1461dd491795a2d6b0bd3112aca8550</Anchor>
    <Abstract>Get the row stride. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_starting_row_number</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>ad15a2b640e4bee850577ca9500ad31c3</Anchor>
    <Abstract>Get the starting row number. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_unsent_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>ac95128bf22d4556564e27cc3d6f51222</Anchor>
    <Abstract>Get the unsent data property. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_var_index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac2b4b28ed9d6f435129aa599ab809799</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_vars_iter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a1e6d8224e04d75e3d2a21263957cd42f</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a822a036364c56df5288a55670f51197e</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>aaa428c1a32fea386549399dd19b756ac</Anchor>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_dap2_only_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>ab8d629ae2ec9c85add8f181bc05f2269</Anchor>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_linear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>aae52bdb038d59fbce4f8f6128dfc4559</Anchor>
    <Abstract>Check to see whether this variable can be printed simply. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>ad8e2d23c39b11886e10d0a5d0ae37e5f</Anchor>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8a0000be2a244e3e07abda3020af8800</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a0f130e129b06773a9f3c94e3b492bb5c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab7fb094be8da2a9f80f6d3b85e452934</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a6c2c4d7cbe1d6239c037272ec865f80b</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>a675995a38339e5139b80a4faa1a46824</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>ade8d2f9a5c73eafeb180fb3782a0a199</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a32de0413045173aa8803f540a6cea39b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a7bbe6beabd94f576140e132e7a1017ff</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab775a5e7e63757ac961b43800a95635f</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>aacf58704fe079b65130800589e59fa9e</Anchor>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ad0af40e2565972fa44985d173370c264</Anchor>
    <Abstract>simple implementation of read that iterates through vars and calls read on them </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_row</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>a62d79555aa03b0a862314ccfdad090f8</Anchor>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset_row_number</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>ad555ad129354768a042f4e94f36f299a</Anchor>
    <Abstract>Rest the row number counter. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset_row_number</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>a64ff6191d320ded37975e20e4a45a742</Anchor>
    <Abstract>A recursive version of reset_row_number() </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>row_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>af034547151c98b59dee6d2d6cb1a954b</Anchor>
    <Abstract>Get a whole row from the sequence. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>a92b97c9d8c1431fd7e619186a557d875</Anchor>
    <Abstract>The Sequence constructor. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>ab5a772197dc7c62037cca19b27bacba6</Anchor>
    <Abstract>The Sequence server-side constructor. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>a26c7416d7314d45aee035d09ef3db49c</Anchor>
    <Abstract>The Sequence copy constructor. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab868fe97d5075b702bd084c2e9540913</Anchor>
    <Abstract>Serialize a Constructor. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>ad89a496720935e04e472a75ce7804065</Anchor>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac30becb1ffe7d2cd4cbcd24fc216c9a3</Anchor>
    <Abstract>Set the in_selection property. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_leaf_sequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>a630ae5ad80cc4ddbd1c07e7cae0eec6d</Anchor>
    <Abstract>Mark the Sequence which holds the leaf elements. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af52e60d8589eed1a18a14e9c6a57db65</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_row_number_constraint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>af182686c5766d73e5d896eecaadb96bc</Anchor>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aafbcf9bef6719fe60ac707e02956e09d</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_unsent_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>ad7820138d2f1c9c8ff7dfa632dff60c2</Anchor>
    <Abstract>Set the unsent data property. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>aa581124c5883b3c020a843ddc5566192</Anchor>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>a24016ba1d3b9b755699959abf0219ff1</Anchor>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a799d2bd8ef9505b1d493d8cd73b72746</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>a11072c45623476f3fd0745cdd519b376</Anchor>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac742b1bf93889e541128b1d123821ee6</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>a1efebfab9247785a056d085b1f3aab41</Anchor>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value_ref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>a954e428e0d3532246c0411e2b3bd30e8</Anchor>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a36a7412da7b5257d7666add726fea1a6</Anchor>
    <Abstract>btp_stack no longer needed; use back pointers (BaseType::get_parent()) </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a68f1779dc328f890062722d90fad084a</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>adeafe3d6c82d07b456a598a7b446c2c6</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a936b38c7c35ffb4fe17c5b8e85bdaaa2</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rbegin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aa025cf546ca35250454653c1ec684d91</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aede7cf5889e101db1ea8f22c3a84a5d3</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>ab17e4f1aedda0b734442001b5c81f269</Anchor>
    <Abstract>Get the BaseType pointer to the named variable of a given row. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Sequence</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Sequence.html</Path>
    <Anchor>a75cd422251a9c49294e25f2971164638</Anchor>
    <Abstract>Get the BaseType pointer to the $i^{th}$ variable of row. </Abstract>
    <DeclaredIn>Sequence.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a0b1e3ae7195f95c42ca98f42826a1ff5</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::ServerFunction</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::ServerFunction</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunction.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canOperateOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunction</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunction.html</Path>
    <Anchor>a37deabffd71441809f9e7839bed90414</Anchor>
    <DeclaredIn>ServerFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canOperateOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunction</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunction.html</Path>
    <Anchor>a8a3921a3d3a0ef39e1ee6bdd6011ccaf</Anchor>
    <DeclaredIn>ServerFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunction</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunction.html</Path>
    <Anchor>a3235a206a2933b96360c00d5b021a1e5</Anchor>
    <DeclaredIn>ServerFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::ServerFunctionsList</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::ServerFunctionsList</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunctionsList.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunctionsList</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunctionsList.html</Path>
    <Anchor>a6541bd8eebd85b0faada8ce3d2f9d08a</Anchor>
    <Abstract>Adds the passed ServerFunction pointer to the list of ServerFunctions. </Abstract>
    <DeclaredIn>ServerFunctionsList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunctionsList</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunctionsList.html</Path>
    <Anchor>a6a76bd67fbdda8c038f0c2000f24eb6c</Anchor>
    <Abstract>Returns an iterator pointing to the first key pair in the ServerFunctionList. </Abstract>
    <DeclaredIn>ServerFunctionsList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunctionsList</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunctionsList.html</Path>
    <Anchor>a95627422406ad0ab08fee27d8c274d56</Anchor>
    <Abstract>Returns an iterator pointing to the last key pair in the ServerFunctionList. </Abstract>
    <DeclaredIn>ServerFunctionsList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunctionsList</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunctionsList.html</Path>
    <Anchor>a12a23d0582bf7b53b65c5d95ed4ce601</Anchor>
    <Abstract>Find a boolean function with a given name in the function list. </Abstract>
    <DeclaredIn>ServerFunctionsList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunctionsList</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunctionsList.html</Path>
    <Anchor>a65101c8eb7d0dead6cc781287a52f2aa</Anchor>
    <Abstract>Find a BaseType function with a given name in the function list. </Abstract>
    <DeclaredIn>ServerFunctionsList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunctionsList</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunctionsList.html</Path>
    <Anchor>a63e5f6a54a21a0da686306f996414aa2</Anchor>
    <Abstract>Find a projection function with a given name in the function list. </Abstract>
    <DeclaredIn>ServerFunctionsList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunctionsList</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunctionsList.html</Path>
    <Anchor>a895bc1627d93588bd1f8f9eac5eb7b28</Anchor>
    <DeclaredIn>ServerFunctionsList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::ServerFunctionsList</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1ServerFunctionsList.html</Path>
    <Anchor>a9b5a854642a7707c70e84dc88c67d2f8</Anchor>
    <Abstract>Returns the ServerFunction pointed to by the passed iterator. </Abstract>
    <DeclaredIn>ServerFunctionsList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::SignalHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::SignalHandler</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1SignalHandler.html</Path>
    <DeclaredIn>SignalHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>register_handler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::SignalHandler</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1SignalHandler.html</Path>
    <Anchor>a1188177d392bdc1db6cf4450132c6d9f</Anchor>
    <DeclaredIn>SignalHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_handler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::SignalHandler</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1SignalHandler.html</Path>
    <Anchor>ac9a9ddb318ad6b372604a4c8d58481de</Anchor>
    <DeclaredIn>SignalHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::SignalHandler</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1SignalHandler.html</Path>
    <Anchor>a930f996d318cadd5f0875da0784cb32a</Anchor>
    <DeclaredIn>SignalHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::SignalHandlerRegisteredErr</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::SignalHandlerRegisteredErr</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1SignalHandlerRegisteredErr.html</Path>
    <DeclaredIn>SignalHandlerRegisteredErr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>aaca0caca09e939602cade604cbc9824f</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ab24a61e4974aae62962a40f9975e674c</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>acf3ab60821773bd8b62284750b02cfc0</Anchor>
    <Abstract>Is the Error object valid? </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>ac705b3c1cfab1f7530d66a974eb0e8b6</Anchor>
    <Abstract>Parse an Error object. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a552d711be27e6695854bd2b977a5cf31</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a4c58ef196c2b247bd37529bb7ad6a666</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_code</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a47c0f4b6a38d8ca075d1056076d2845d</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_error_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>a3ca90d33bf1c95529c9eefdfe8646e34</Anchor>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Error</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Error.html</Path>
    <Anchor>accc5eeb469c8c18ec16dbf7fefe3cc41</Anchor>
    <Abstract>The pointer is valid only for the lifetime of the Error instance. jhrg 9/22/20. </Abstract>
    <DeclaredIn>Error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::StdinResponse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::StdinResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1StdinResponse.html</Path>
    <Abstract>Encapsulate a response read from stdin. </Abstract>
    <DeclaredIn>StdinResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StdinResponse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::StdinResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1StdinResponse.html</Path>
    <Anchor>a493426389b258aca4595f6090ee5a8bb</Anchor>
    <Abstract>Initialize with standard input. </Abstract>
    <DeclaredIn>StdinResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StdinResponse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::StdinResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1StdinResponse.html</Path>
    <Anchor>abba5fdeb0152e8b6c3affa48a2f19577</Anchor>
    <Abstract>Build a instance using a C++ istream. </Abstract>
    <DeclaredIn>StdinResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~StdinResponse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::StdinResponse</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1StdinResponse.html</Path>
    <Anchor>af21584956ced23448dcb88da165258e7</Anchor>
    <DeclaredIn>StdinResponse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Str</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Abstract>Holds character string data. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>aa63cf0376fe71ceb030b48e7fdbad863</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>ae98348772288b417561f39b445f48c9e</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a051efecca32b2679bd0b1700453db617</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a2bafe2f1851b3a4cac6089b0e2282010</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>afdeab29d40e99baa3d0def2f8f6d8b2e</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a9bae029c10a3824cd95d7e3fb2c11911</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a6159e681dd78ac9d7660df1a734fd9d4</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a5b74994fb52ceb3248c558015c4520a5</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a3fd0df896926273b491fa8b3dc040b20</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a7984e46de9b21ef554b156dec40cc559</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a4e92b00a6a3a8056c80b2f4467646f42</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a1f71320548c6cf29b85d66de5998144d</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>af341f5722961ea40812d1fde478d1f79</Anchor>
    <Abstract>Serialize an Int8. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>ac4083a612e46a9ef2d1cddc2d40a955f</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Str</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a23a93ec403dc5cbb5264cdf47ea01c44</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Str</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a37e6b66c284c38052eb0bdebec18bba6</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>add396308f45a14355b60c411ed33bf7a</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a6a184f229c17879291dba8f7477db677</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a636ebae6c75fb6dc5d929dc6db6f9558</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Structure</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Structure</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Structure.html</Path>
    <Abstract>Holds a structure (aggregate) type. </Abstract>
    <DeclaredIn>Structure.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a2585c69c45b9ebec9c63993248eb5b4b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>abdb52463a46e1b10040f245d4ed7642b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac4dc7e8099322b5b403a7d0ae9079006</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>afe010638fd2ca9aab00dd1c21a9e4825</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a287ab9a4deb81a8ced6d8432be647925</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a512a356f31ed6c4c1a368da0b054408a</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>del_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af38d3785c4a7cd0063cbb9fc5943333c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a63763d2bae05463b100e823fb461a784</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a6f4253236d69c3c0ef64343136b5039b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Structure</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Structure.html</Path>
    <Anchor>a5c51539ddf185011301d04e1c927538a</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Structure.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a1c2eecff00fa7e3af175c711d00fb86e</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>afa6c06dab830b4e089641b44fea8293c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_var_index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac2b4b28ed9d6f435129aa599ab809799</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_vars_iter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a1e6d8224e04d75e3d2a21263957cd42f</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a065056826ef9c6fb2d08463af9e15a34</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a822a036364c56df5288a55670f51197e</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_linear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Structure</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Structure.html</Path>
    <Anchor>ac4687a4edb60d00fd781c82de40d53a4</Anchor>
    <Abstract>Check to see whether this variable can be printed simply. </Abstract>
    <DeclaredIn>Structure.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8a0000be2a244e3e07abda3020af8800</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a0f130e129b06773a9f3c94e3b492bb5c</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab7fb094be8da2a9f80f6d3b85e452934</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a6c2c4d7cbe1d6239c037272ec865f80b</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aa7f9cce8ca18461af332aab61123bf23</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af50641301757ed26eb75fb2d29eae7ee</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a32de0413045173aa8803f540a6cea39b</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a7bbe6beabd94f576140e132e7a1017ff</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab775a5e7e63757ac961b43800a95635f</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Structure</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Structure.html</Path>
    <Anchor>ae20b384171ecded1940c3cb9780eda7e</Anchor>
    <DeclaredIn>Structure.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ad0af40e2565972fa44985d173370c264</Anchor>
    <Abstract>simple implementation of read that iterates through vars and calls read on them </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a64268840654a0b37a15ccc601dbcfd33</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ab868fe97d5075b702bd084c2e9540913</Anchor>
    <Abstract>Serialize a Constructor. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac30becb1ffe7d2cd4cbcd24fc216c9a3</Anchor>
    <Abstract>Set the in_selection property. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_leaf_sequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Structure</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Structure.html</Path>
    <Anchor>a69851299078fd4bfc39d722c8cdc3cb9</Anchor>
    <Abstract>Traverse Structure, set Sequence leaf nodes. </Abstract>
    <DeclaredIn>Structure.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>af52e60d8589eed1a18a14e9c6a57db65</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aafbcf9bef6719fe60ac707e02956e09d</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Structure</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Structure</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Structure.html</Path>
    <Anchor>a4187f25219b1fc7ec93e761795047e0a</Anchor>
    <DeclaredIn>Structure.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Structure</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Structure</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Structure.html</Path>
    <Anchor>aa48289fa5979febe73ae74a90f2d246b</Anchor>
    <DeclaredIn>Structure.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Structure</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Structure</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Structure.html</Path>
    <Anchor>a469f0fe441ac54689db27d7527d28748</Anchor>
    <DeclaredIn>Structure.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a799d2bd8ef9505b1d493d8cd73b72746</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Structure</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Structure.html</Path>
    <Anchor>a9e00a214b9076b4849e2b9bc2605af21</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>Structure.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Structure</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Structure.html</Path>
    <Anchor>af687033917e49b86356f23ead6353e6f</Anchor>
    <DeclaredIn>Structure.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>ac742b1bf93889e541128b1d123821ee6</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a36a7412da7b5257d7666add726fea1a6</Anchor>
    <Abstract>btp_stack no longer needed; use back pointers (BaseType::get_parent()) </Abstract>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a68f1779dc328f890062722d90fad084a</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>adeafe3d6c82d07b456a598a7b446c2c6</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a936b38c7c35ffb4fe17c5b8e85bdaaa2</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rbegin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aa025cf546ca35250454653c1ec684d91</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var_rend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>aede7cf5889e101db1ea8f22c3a84a5d3</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Constructor</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Constructor.html</Path>
    <Anchor>a0b1e3ae7195f95c42ca98f42826a1ff5</Anchor>
    <DeclaredIn>Constructor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::UInt16</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Abstract>Holds an unsigned 16-bit integer. </Abstract>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>a80b1b42ac738b62de9a8d4d0b1c2d50c</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>a019f53455cc1e502103dc1e4f2b1ba22</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a512a356f31ed6c4c1a368da0b054408a</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>aa2291137d78a57a433db3b6ab2f31d1b</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>ac647da7d972e876ebd5e9855a33deb13</Anchor>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>ad9f239f1e7b1ec47d67777fd1592ede8</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>a0f82046f304407cb218bfbe88e89518b</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>a482e6f61f36b497517830b68023ac803</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>ac814682caeef62518ae7c7cddceeb45a</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>a9522d2413078b922c4e499545f623021</Anchor>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>a1db616a4ec9989c3cee3d18c30bf4f27</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>aa7772b37ff53b02e70c146da59c9c4c7</Anchor>
    <Abstract>Serialize an Int8. </Abstract>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UInt16</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>ab4b8895483d15ab84eb4fda029089bc8</Anchor>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UInt16</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>a4481b161be1fad4e9c2ea3c1293d540b</Anchor>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>a0212ba69258238b711d8aef3174f3fb7</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt16</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt16.html</Path>
    <Anchor>a8545ca3b3a55da3eabc9b4d43e008e3e</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>UInt16.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::UInt32</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Abstract>Holds a 32-bit unsigned integer. </Abstract>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>a132425225a24d8a0d3b2242660533494</Anchor>
    <Abstract>Reads the class data. </Abstract>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>a2dbfaff74220c15ec27b42310781a286</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a512a356f31ed6c4c1a368da0b054408a</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>a1bf98390bea0fffe8a9b9f0d560f3b72</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>a87953ef0a0ef20ecbbc9ec646a14d8b9</Anchor>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>a2506c7fb8f214f635cabc0fabc6b8e62</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>a33a7ffcc50faa13ed94a48e7766ffd1e</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>ae627cfc24d4d9dfaf34b538385f1712c</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>a2f15a6d4c69db84e0dad12c42630b7e3</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>ae3ea27e286caaf645c5d61cdf4d455f4</Anchor>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>af76d9ef68ae7861401bdf611e4bacd16</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>ac05e4247715d52c8bc6459a32a810471</Anchor>
    <Abstract>Serialize an Int8. </Abstract>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UInt32</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>a01d713f1eae7c2b0c9e8287ca1670bcf</Anchor>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UInt32</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>a2a57e3fcd5013cd0ea6ec1161d5f1ff8</Anchor>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>a4670043bd9007f36807c7df7fd49cb69</Anchor>
    <Abstract>Loads class data. </Abstract>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt32</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt32.html</Path>
    <Anchor>a38405864c06780759d24d85f95621c62</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>UInt32.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::UInt64</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::UInt64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt64.html</Path>
    <Abstract>Holds a 64-bit unsigned integer. </Abstract>
    <DeclaredIn>UInt64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt64.html</Path>
    <Anchor>a23e6785e872f60ab600dbd7ccbf76391</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>UInt64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt64.html</Path>
    <Anchor>a1c177d21c0eeeb26083a4cf6a01f7873</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>UInt64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt64.html</Path>
    <Anchor>ad1287870ab52d0aa6c4f60015bcb6e9f</Anchor>
    <DeclaredIn>UInt64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt64.html</Path>
    <Anchor>afc3afdbf38c4097caba0a1db85e3a9a6</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>UInt64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aadcda7a659157bc6a832d8a5fb775b3f</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt64.html</Path>
    <Anchor>a4ceb6fa4a9fc731410962dc9e1c787a4</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>UInt64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt64.html</Path>
    <Anchor>ae4eed9eaa057932bd1e817cea8477d79</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>UInt64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt64.html</Path>
    <Anchor>ab87b5a08c9627f4813af802d2eb7e8da</Anchor>
    <DeclaredIn>UInt64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt64.html</Path>
    <Anchor>a8f9ff4dfa4f7e93d838c35097b2e3930</Anchor>
    <Abstract>Serialize an Int8. </Abstract>
    <DeclaredIn>UInt64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt64.html</Path>
    <Anchor>a128cc879ec5b5c5541d0f3b4289d879e</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>UInt64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UInt64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt64.html</Path>
    <Anchor>ab516d59cb6050179081971ffd3d70a6d</Anchor>
    <DeclaredIn>UInt64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UInt64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt64.html</Path>
    <Anchor>a329aa12343f9df0b1b50fca996c85ac1</Anchor>
    <DeclaredIn>UInt64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UInt64</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UInt64.html</Path>
    <Anchor>a924125a6d5bfb10ae1ad42c40ab4dfff</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>UInt64.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adc24a735977e28acb0e6f78667c1dd21</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1f27d99250e857efd86ac9db788bbf1b</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::UnMarshaller</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::UnMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UnMarshaller.html</Path>
    <Abstract>abstract base class used to unmarshall/deserialize dap data objects </Abstract>
    <DeclaredIn>UnMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::UnMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1UnMarshaller.html</Path>
    <Anchor>a2aba5bbe9a2990b03668c78817312782</Anchor>
    <Abstract>dump the contents of this object to the specified ostream </Abstract>
    <DeclaredIn>UnMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Url</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Url</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Url.html</Path>
    <Abstract>Holds an Internet address (URL). </Abstract>
    <DeclaredIn>Url.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adca3c2621c4a509537c18362005d7f7f</Anchor>
    <Abstract>Add a variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>aa63cf0376fe71ceb030b48e7fdbad863</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aec503abec2fd3090e7738c0a575491f8</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aaddb97a4efbe035f41deaf03c6e8683f</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>ae98348772288b417561f39b445f48c9e</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a051efecca32b2679bd0b1700453db617</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a2bafe2f1851b3a4cac6089b0e2282010</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>afdeab29d40e99baa3d0def2f8f6d8b2e</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a9bae029c10a3824cd95d7e3fb2c11911</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5c2235737737b482bfa7536b8aeab810</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a6159e681dd78ac9d7660df1a734fd9d4</Anchor>
    <Abstract>How many elements are in this variable. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a5b74994fb52ceb3248c558015c4520a5</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a3fd0df896926273b491fa8b3dc040b20</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a7984e46de9b21ef554b156dec40cc559</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Url</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Url.html</Path>
    <Anchor>a1064f1f9a75dba713a8e676a278f291c</Anchor>
    <DeclaredIn>Url.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a1f71320548c6cf29b85d66de5998144d</Anchor>
    <Abstract>Move data to the net, then remove them from the object. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>af341f5722961ea40812d1fde478d1f79</Anchor>
    <Abstract>Serialize an Int8. </Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4fe343c1eeb6fb1d61ab030433651d90</Anchor>
    <Abstract>Set the number of elements for this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a86504564f45a3e6748c6f1cc0ff4e9fa</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4533905a450d2a7af32e7d5acd557676</Anchor>
    <Abstract>Sets the value of the read_p property. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aba7b27635c95b74536de18393133628e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>ac4083a612e46a9ef2d1cddc2d40a955f</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Url</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Url.html</Path>
    <Anchor>a9fb1b73af8ce02df5081945250f64eb8</Anchor>
    <DeclaredIn>Url.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Url</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Url.html</Path>
    <Anchor>a210226151d8473808acbeba12122f1c2</Anchor>
    <DeclaredIn>Url.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>add396308f45a14355b60c411ed33bf7a</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a6a184f229c17879291dba8f7477db677</Anchor>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a4dc4fac1bb6083f6db645f37bfd59b85</Anchor>
    <Abstract>Returns a pointer to a member of a constructor class. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adecfc442b5927c79933c7f71cfe03fd2</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Str</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Str.html</Path>
    <Anchor>a636ebae6c75fb6dc5d929dc6db6f9558</Anchor>
    <Abstract>How many bytes does this variable use Return the number of bytes of storage this variable uses...</Abstract>
    <DeclaredIn>Str.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a722d33783aa0272d339b0301a4f77e59</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1956e6ea90a745516f5372c859173433</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::Vector</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Abstract>Holds a one-dimensional collection of DAP2 data types. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a033417b3c3056fa77f1e32f62a0a2f3b</Anchor>
    <Abstract>Add the BaseType pointer to this constructor type instance. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buf2val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>af20a56a72c3108b31418ebf01f779253</Anchor>
    <Abstract>Copies data from the Vector buffer. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_semantics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>afd220155b44708d85d0bb5aa2f756549</Anchor>
    <Abstract>Compare an object&amp;#39;s current state with the semantics of its type. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_local_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ac12023f8bf9ecc97998c3bb021ba2772</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_checksum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a9c61fcb646f1813e350549b6ddf48204</Anchor>
    <Abstract>include the data for this variable in the checksum DAP4 includes a checksum with every data response...</Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d4_ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a512a356f31ed6c4c1a368da0b054408a</Anchor>
    <Abstract>Evaluator a relop for DAP4. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a47521ce321a17e6ce217870cb6a1a7aa</Anchor>
    <Abstract>Returns the name of the dataset used to create this instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>aba86cc0f3915d85e37f4b9e00ebfde7e</Anchor>
    <Abstract>Receive data from the net. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ad78d293754a1d78b90c86f8e33c22bec</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a9dc0a17c575e0f1ffc0571731bb8de78</Anchor>
    <Abstract>dumps information about this object </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>element_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ab78981c9e05e7d1dc24f913dbd2021d7</Anchor>
    <Abstract>Count the members of constructor types. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FQN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a977cb954cc8f0d914d6f66ea0f48a9e3</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1fcd9537c67e3bf88964b2656ff5bac1</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a285ee3b0cc0adf6a54ea388ea71a69fc</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_compound_buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ad6d99474ab74d8b9752e4e77b3350121</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a3459cdaa239c33ce111ef360d8dc3017</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_str</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ab53f2eb57de3f0f99961f6ab6f470638</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_value_capacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a16b89988deda0413d1eb2cdc615a38df</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a6b5ee8fec4de3700e2564a64ef4f6d76</Anchor>
    <Abstract>read data into a variable for later use </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intern_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>abe772a228c62c7960bf2eb92be77732f</Anchor>
    <Abstract>Read data into this variable. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_constructor_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8b8490e0047c6da52945699a132008ea</Anchor>
    <Abstract>Returns true if the instance is a constructor (i.e., Structure, Sequence or Grid) type variable...</Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae302ab2ec26e9fc5b575bf5d3d09aa5c</Anchor>
    <Abstract>Is this variable part of the current selection? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_simple_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>aae57e5b270b3a015d40c8db10b9b5549</Anchor>
    <Abstract>Returns true if the instance is a numeric, string or URL type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a7107c76dbcab71015141142383b6d022</Anchor>
    <Abstract>Returns true if the instance is a vector (i.e., array) type variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a2476a541aad16bedc64d99805fcc9c0c</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a24c5d67823b3cff7f4245a993072a142</Anchor>
    <Abstract>Returns the name of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ops</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8a0000be2a244e3e07abda3020af8800</Anchor>
    <Abstract>Evaluate relational operators. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afcddbe441380b95c894510c02980b163</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2d799fad93255d7f2b803562ae7a5784</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_decl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afd744b0ddeb04e7b173c9e83423ec572</Anchor>
    <Abstract>Print an ASCII representation of the variable structure. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a825820edee179550cfde3dfd4d274f2a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a8bd2c7682edd48c64b210bdf247bdef7</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_xml_writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a11554ff931528b243e9af8173d205b44</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ptr_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a08158ed75b297c395e2f665958be0ffe</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a1da003c53f2e663223f603ab3fbd7c8e</Anchor>
    <Abstract>Read data into a local buffer. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a38ff819a432217c55db2e9071928d20c</Anchor>
    <Abstract>Has this variable been read? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserve_value_capacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>aaaa7c0f36266ef3df9f4fb90de220867</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserve_value_capacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>adade15ffa55c59f6205e1c3c9ea78a35</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a980c0013817836aa77ef74aeec7fb192</Anchor>
    <Abstract>Should this variable be sent? </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a993d46232faadb5914cc0519d013e9b2</Anchor>
    <Abstract>Serialize a Vector. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>af478e3d5cbb3235081fe8daa6d6629a9</Anchor>
    <Abstract>The DAP4 serialization method. Serialize a variable&amp;#39;s values for DAP4. This does not write the DMR pe...</Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attr_table</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a572a1d76a75981abac83a4241e90c0fa</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_in_selection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a2bc036248cdaf1affac464170f32ad30</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a05a61e24fd295934dfc3c37c9f55ca57</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>aacfca48c7db65e3a2c3c94734dee8c36</Anchor>
    <Abstract>Sets the name of the class instance. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a5b6a39f6ce6594fa74f3fc899ac9a966</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_read_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a58712de8871e28a48fdc95e72a09df71</Anchor>
    <Abstract>Indicates that the data is ready to send. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_send_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a64815467570490a4a6cddc89f09a2413</Anchor>
    <Abstract>Indicates that the data is ready to send. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a595cb4059cff24f801a1b6da79bd2f9e</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af74f8d1ef57c9fcca46f620f75d175a3</Anchor>
    <Abstract>Sets the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value_slice_from_row_major_vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a559d8ca948ca40f179e4e3da0bfdfdc4</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_vec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a8bf6e565dcb2eab1f3f7037518a9acb3</Anchor>
    <Abstract>Sets element i to value val. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_vec_nocopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a175f1a51686798061c2147f2eccde33a</Anchor>
    <Abstract>Sets element i to value val. Set the ith element to val. Extend the vector if needed. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synthesized_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>ae64e677da27249473cdba0b60cdbb90a</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a701eb3361f5b5628329ece019cd34519</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transfer_attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>add8e836c622042a339152a6c31e5bdfb</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>affec8a11e9cc035d4b1e8fb9a87b2072</Anchor>
    <Abstract>DAP4 to DAP2 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform_to_dap4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>adb03e2e1e40c3c888577c4666831a949</Anchor>
    <Abstract>DAP2 to DAP4 transform. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>af8e803b20a7a7dc5f2ef351d7fac4a56</Anchor>
    <Abstract>Returns the type of the class instance. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a18a42c8ec35cb5b15cd651a4152f8a2c</Anchor>
    <Abstract>Returns the type of the class instance as a string. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>val2buf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a96ecf84f2798065878755d9a9014ee69</Anchor>
    <Abstract>Reads data into the Vector buffer. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>aa5ccb30d1f27ae587f35216b859feec7</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ac07a950727d2ac58934ba4cc03206c8d</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>var</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>adf286762e63295675850c41cedf33370</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ad180a87244b0b6f32b47711a4ae0330e</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>af6dc3e80b6398ecaa098b5c46df5376c</Anchor>
    <Abstract>The Vector constructor. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a90baf84028f16afe1344943400fb79a7</Anchor>
    <Abstract>The Vector constructor. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ae3a9cea6f164319908ed5b9cd35af668</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a8fe5d7b06814653b6cf5408b2a8671db</Anchor>
    <Abstract>Returns the width of the data, in bytes. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a97452f06d2188eb838399a709246b5e9</Anchor>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>afb5e13838a599ec0efe2adbb2ae18f47</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a94edd5b610afb1432144158740710488</Anchor>
    <Abstract>Prints the value of the variable. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_create_cardinal_data_buffer_for_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>af175806a557f627a0ee70c5f05ed7c5c</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_delete_cardinal_data_buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ad2e46d6d52fcb609658baf5ac1f9892e</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::BaseType</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1BaseType.html</Path>
    <Anchor>a0c55b826c8c5dfe7a454dc670e859a41</Anchor>
    <Abstract>Perform a deep copy. </Abstract>
    <DeclaredIn>BaseType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_is_cardinal_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>ac00c2a2ebd65c86022b82dfb1a32485c</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_set_cardinal_values_internal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a1fb2c5dc539e55203fc61845089c67e8</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>abd6e429e907214c593b6fb37f97511ee</Anchor>
    <Abstract>set the value of a string or url array </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a068afd2353ad32f904361253e1b6e807</Anchor>
    <Abstract>set the value of a string or url array </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>a0725f0e3304f9ad00bf90a19b5650368</Anchor>
    <Abstract>Get a copy of the data held by this variable. </Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>af9fd1c331a511989ac2bf4a0ad5b27da</Anchor>
    <Abstract>Get a copy of the data held by this variable using the passed subsetIndex vector to identify which va...</Abstract>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Vector</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Vector.html</Path>
    <Anchor>aca5000630369cb4217827c2f136afec0</Anchor>
    <DeclaredIn>Vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::XDRFileMarshaller</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::XDRFileMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRFileMarshaller.html</Path>
    <Abstract>marshaller that knows how to marshall/serialize dap data objects to a file using XDR ...</Abstract>
    <DeclaredIn>XDRFileMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::XDRFileMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRFileMarshaller.html</Path>
    <Anchor>ac18c437e979e0689411fe0327660fe21</Anchor>
    <Abstract>dump the contents of this object to the specified ostream </Abstract>
    <DeclaredIn>XDRFileMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Marshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Marshaller.html</Path>
    <Anchor>a3409a138c4a67bc9dd24a3a2ad6f97db</Anchor>
    <DeclaredIn>Marshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_part</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Marshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Marshaller.html</Path>
    <Anchor>a8b303c96939749f6aca62d0e582909b0</Anchor>
    <DeclaredIn>Marshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::Marshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1Marshaller.html</Path>
    <Anchor>ae0cd4b847386e89eace23e6b2fc08826</Anchor>
    <DeclaredIn>Marshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::XDRFileUnMarshaller</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::XDRFileUnMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRFileUnMarshaller.html</Path>
    <Abstract>unmarshaller that knows how to unmarshall/deserialize dap objects using XDR from a file ...</Abstract>
    <DeclaredIn>XDRFileUnMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::XDRFileUnMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRFileUnMarshaller.html</Path>
    <Anchor>ae77f16074759c9d855f6155a93380635</Anchor>
    <Abstract>dump the contents of this object to the specified ostream </Abstract>
    <DeclaredIn>XDRFileUnMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::XDRStreamMarshaller</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::XDRStreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRStreamMarshaller.html</Path>
    <Abstract>Marshaller that knows how serialize dap data objects to a C++ iostream using XDR. ...</Abstract>
    <DeclaredIn>XDRStreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::XDRStreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRStreamMarshaller.html</Path>
    <Anchor>a3601923f45d9182c92eb684e64d20d47</Anchor>
    <Abstract>dump the contents of this object to the specified ostream </Abstract>
    <DeclaredIn>XDRStreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::XDRStreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRStreamMarshaller.html</Path>
    <Anchor>a4ffeb114ca4cf161366d82e6abc68acf</Anchor>
    <DeclaredIn>XDRStreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_part</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::XDRStreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRStreamMarshaller.html</Path>
    <Anchor>af1ce1f82a6e78f649e124bded447026b</Anchor>
    <DeclaredIn>XDRStreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put_vector_start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::XDRStreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRStreamMarshaller.html</Path>
    <Anchor>ac29944748706b36e48cb7428752cf467</Anchor>
    <DeclaredIn>XDRStreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>XDRStreamMarshaller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::XDRStreamMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRStreamMarshaller.html</Path>
    <Anchor>a172f3cad856e8d1528fb97e0d34b5163</Anchor>
    <DeclaredIn>XDRStreamMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::XDRStreamUnMarshaller</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::XDRStreamUnMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRStreamUnMarshaller.html</Path>
    <Abstract>unmarshaller that knows how to unmarshall/deserialize dap objects using XDR from a file ...</Abstract>
    <DeclaredIn>XDRStreamUnMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>libdap::XDRStreamUnMarshaller</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRStreamUnMarshaller.html</Path>
    <Anchor>a9ae38967a1c736b5ad7d851e2bc746fa</Anchor>
    <Abstract>dump the contents of this object to the specified ostream </Abstract>
    <DeclaredIn>XDRStreamUnMarshaller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::XDRUtils</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::XDRUtils</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xdr_coder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>libdap::XDRUtils</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XDRUtils.html</Path>
    <Anchor>aaf9f4be9a9e22a10416bfbad841751a3</Anchor>
    <Abstract>Returns a function used to encode elements of an array. </Abstract>
    <DeclaredIn>XDRUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libdap::XMLWriter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>libdap::XMLWriter</Scope>
    </TokenIdentifier>
    <Path>classlibdap_1_1XMLWriter.html</Path>
  </Token>
</Tokens>
