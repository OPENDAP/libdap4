These are instructions for building the source on AIX. Hopefully more and more
of these steps will be incorporated into the regular build. jhrg

On May 4, 2006, at 11:10 AM, Dan Stromberg wrote:

Hi James.

Believe it or not, I appear to have gotten it working last night, based
in part on my earlier work, and based in part on the message Martin
sent.

I did it a little bit differently both from how Martin wrapped things
up, as well as a bit differently from what I was doing previously.

Specifically:

     1. I did all my configure's with --disable-dynamic --enable-static
        - because AIX's shared libraries are a bit of a mess
     2. On any package with C++ in it, I used CXX='xlC_r -q64
        -qrtti=all'.  I suspect this is an alternative to the
        -qlanglvl=extended Martin was using
     3. On libdap I used CONFIG_SHELL=/usr/local/bin/bash prior to
        configure
     4. On libdap I got around the malloc problem by relying on the
        malloc version that comes with the software instead of using an
        external malloc library.  I did this by changing #undef malloc
        to #undef this_was_malloc in config.h.in followed by an
        autoconf.

Thanks!

Here's the body of an older email, also from Dan, about an earlier albeit
somewhat more complicated success. The patches he describes have since been
applied to the sources and the result checked into our source code control
system.

Patches to the source from Dan Stromberg:

    http://dcs.nac.uci.edu/~strombrg/opendap/libdap-AIX-patches.tar.gz

  [These patches have been applied to version 3.7.0 of the library. jhrg]

This is from an email message from Martin Peschke. Martin describes building
the OPeNDAP data server, which requires libdap, so these instructions should
work for the library although there maybe some steps that are not needed if
you're building just libdap. The instructions pertain to libdap 3.6.2. Note
that other people have had some problems building on AIX, so these steps
might not work for you. Please direct all questions about the build to
OPeNDAP's support email (support@unidata.ucar.edu) or to our email list
dods-tech@unidata.ucar.edu and not to Martin! Also, Martin wanted me to pass
on that he cannot guarantee these steps will work for anyone else!

The AIX Version should be “powerpc-ibm-aix5.2.0.0”
The xlc_r and xlC_r should be “VisualAge C++ Professional / C for AIX Compiler,
Version 6.”
The system has perl version 5.8.0

I used the following packages:
zlib-1.2.3
curl-7.15.1
libxml2-2.6.23
libdap-3.6.2
netcdf-3.6.0-p1
netcdf_handler-3.6.0
dap-server-3.6.1

I used for most of the packages the following setup:

export PATH=$PATH:<your opendap directory>/bin:\
<your opendap directory>/lib:<your opendap directory>/include
export CC="xlc_r -q64 /usr/local/lib/libmmalloc.a"
export CXX="xlC_r -qlanglvl=extended -q64 /usr/local/lib/libmmalloc.a"
export OBJECT_MODE=64
./configure --prefix=<your opendap directory>
make
make install

I encountered a few problems:

The first one is that I had to uncomment the rpl_malloc in libdap-3.6.2:

Open the file "config.h" look for the following line:
#define malloc rpl_malloc
change this line to:
/* #define malloc rpl_malloc */

The next one is that I had to manually link deflate in libdap-3.6.2 because
make could not find the zlib library.

For the netcdf_handler-3.6.0, I had to add a new parameter for the
configuration:

./configure --prefix=<your opendap directory> --with-netcdf=<your opendap directory>

Also in netcdf_handler-3.6.0, I had to change the configure file to be more
C conform and not C++.  Please see the included discussion.

For the dap-server-3.6.1, I extended the export for CXX to:

export CXX="xlC_r -qlanglvl=extended -q64 -I<your opendap directory>/include /usr/local/lib/libmmalloc.a"

And then I changed the file dap-server.rc to point to the right curl
executable and that only netcdf is available.

The last thing what I did, I changed the DODS_Dispatch.pm to a specified port.
I believe that this change is more a site specific change and a firewall
problem.

Hope this helps.
